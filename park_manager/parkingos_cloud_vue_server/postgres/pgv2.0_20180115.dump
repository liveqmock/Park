--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.2
-- Dumped by pg_dump version 9.6.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: batch_insert_tickets(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION batch_insert_tickets() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    r RECORD;
    count int;
BEGIN
    count := 0;
-- 创建 表
FOR r IN select id from user_info_tb where reg_time <1417449600 and id not in(select uin from com_nfc_tb) and auth_flag=4 and length(mobile)=11  LOOP
    RAISE NOTICE 'uin: %', r.id;
    EXECUTE 'insert into ticket_tb (create_time,limit_day,money,state,uin) values(1431014400,1432396799,4,0, '|| r.id ||')';
    count := count + 1;
   -- RAISE NOTICE 'i is : %', i;
END LOOP;
 
RETURN count;
END;
$$;


ALTER FUNCTION public.batch_insert_tickets() OWNER TO postgres;

--
-- Name: trigger_fct_advert_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_advert_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_advert_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_advert_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_alipay_log_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_alipay_log_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_alipay_log');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_alipay_log_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_area_ibeacon_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_area_ibeacon_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_area_ibeacon_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_area_ibeacon_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_auth_role_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_auth_role_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_auth_role_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_auth_role_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_auth_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_auth_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_auth_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_auth_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_berth_order_tb_inherits_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_berth_order_tb_inherits_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$  
BEGIN 
    IF ( NEW.in_time >= 1485878400 AND  
            NEW.in_time < 1488297600 ) THEN  
        INSERT INTO berth_order_tb_2017_02 VALUES (NEW.*); 
    ELSIF ( NEW.in_time >= 1488297600 AND  
            NEW.in_time < 1490976000 ) THEN  
        INSERT INTO berth_order_tb_2017_03 VALUES (NEW.*); 
    ELSIF ( NEW.in_time >= 1490976000 AND  
            NEW.in_time < 1493568000 ) THEN  
        INSERT INTO berth_order_tb_2017_04 VALUES (NEW.*); 
    ELSIF ( NEW.in_time >= 1493568000 AND  
            NEW.in_time < 1496246400 ) THEN  
        INSERT INTO berth_order_tb_2017_05 VALUES (NEW.*); 
    ELSIF ( NEW.in_time >= 1496246400 AND  
            NEW.in_time < 1498838400 ) THEN  
        INSERT INTO berth_order_tb_2017_06 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1498838400 AND  
            NEW.in_time < 1501516800 ) THEN  
        INSERT INTO berth_order_tb_2017_07 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1501516800 AND  
            NEW.in_time < 1504195200 ) THEN  
        INSERT INTO berth_order_tb_2017_08 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1504195200 AND  
            NEW.in_time < 1506787200 ) THEN  
        INSERT INTO berth_order_tb_2017_09 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1506787200 AND  
            NEW.in_time < 1509465600 ) THEN  
        INSERT INTO berth_order_tb_2017_10 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1509465600 AND  
            NEW.in_time < 1512057600 ) THEN  
        INSERT INTO berth_order_tb_2017_11 VALUES (NEW.*);
    ELSIF ( NEW.in_time >= 1512057600 AND  
            NEW.in_time < 1514736000 ) THEN  
        INSERT INTO berth_order_tb_2017_12 VALUES (NEW.*);
    ELSE 
	INSERT INTO berth_order_tb_error VALUES (NEW.*);    
    END IF;  
    RETURN NULL;
END;  
$$;


ALTER FUNCTION public.trigger_fct_berth_order_tb_inherits_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_berth_order_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_berth_order_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_berth_order_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_berth_order_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bizcircle_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bizcircle_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bizcircle_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bizcircle_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bolink_ccount_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bolink_ccount_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bolink_ccount_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bolink_ccount_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bolink_order_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bolink_order_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bolink_order_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bolink_order_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bonus_record_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bonus_record_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bonus_record_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bonus_record_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bonus_type_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bonus_type_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bonus_type_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bonus_type_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_bouns_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_bouns_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_bouns_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_bouns_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_car_info_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_car_info_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_car_info_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_car_info_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_car_number_type_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_car_number_type_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_car_number_type_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_car_number_type_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_car_picturs_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_car_picturs_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_car_picturs_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_car_picturs_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_car_stops_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_car_stops_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_car_stops_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_car_stops_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_car_type_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_car_type_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_car_type_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_car_type_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_card_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_card_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_card_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_card_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_card_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_card_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_card_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_card_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_card_carnumber_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_card_carnumber_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_card_carnumber_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_card_carnumber_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_carower_product_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_carower_product_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_carower_product');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_carower_product_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_carpic_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_carpic_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_carpic_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_carpic_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_carstop_order_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_carstop_order_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_carstop_order_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_carstop_order_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_carstops_price_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_carstops_price_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_carstops_price_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_carstops_price_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_city_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_city_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_city_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_city_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_city_hotarea_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_city_hotarea_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_city_hotarea_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_city_hotarea_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_city_peakalert_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_city_peakalert_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_city_peakalert_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_city_peakalert_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_city_video_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_city_video_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_city_video_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_city_video_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_collect_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_collect_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_collect_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_collect_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_collector_account_pic_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_collector_account_pic_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_collector_account_pic_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_collector_account_pic_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_collector_scroe_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_collector_scroe_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_collector_scroe_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_collector_scroe_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_collector_set_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_collector_set_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_collector_set_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_collector_set_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_collector_sort_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_collector_sort_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_collector_sort');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_collector_sort_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_alert_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_alert_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_alert_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_alert_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_berthsecs_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_berthsecs_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_berthsecs_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_berthsecs_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_brake_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_brake_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_brake_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_brake_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_camera_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_camera_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_camera_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_camera_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_comment_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_comment_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_comment_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_comment_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_info_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_info_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_info_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_info_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_led_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_led_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_led_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_led_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_nfc_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_nfc_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_nfc_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_nfc_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_park_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_park_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_park_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_park_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_parkstatus_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_parkstatus_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_parkstatus_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_parkstatus_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_pass_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_pass_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_pass_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_pass_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_picturs_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_picturs_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_picturs_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_picturs_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_pos_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_pos_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_pos_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_pos_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_praise_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_praise_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_praise_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_praise_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_temp_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_temp_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_temp_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_temp_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_com_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.city<110000  then
	new.city=110000;
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_update() OWNER TO postgres;

--
-- Name: trigger_fct_com_worksite_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_com_worksite_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_com_worksite_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_com_worksite_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_confirm_order_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_confirm_order_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$BEGIN
  if new.id is NULL then
New.id:=nextval('seq_confirm_order_tb');
end if;
Return NEW;
  END;$$;


ALTER FUNCTION public.trigger_fct_confirm_order_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_consume_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_consume_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_consume_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_consume_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_dataauth_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_dataauth_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_dataauth_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_dataauth_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_department_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_department_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_department_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_department_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_device_fault_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_device_fault_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_device_fault_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_device_fault_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_dici_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_dici_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_dici_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_dici_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_directpay_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_directpay_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_directpay_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_directpay_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_flygame_pool_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_flygame_pool_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_flygame_pool_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_flygame_pool_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_flygame_score_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_flygame_score_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_flygame_score_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_flygame_score_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_flygame_score_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_flygame_score_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_flygame_score_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_flygame_score_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_free_reasons_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_free_reasons_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_free_reasons_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_free_reasons_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_group_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_group_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_group_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_group_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_hasparker_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_hasparker_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_hasparker_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_hasparker_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_ibeacon_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_ibeacon_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_ibeacon_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_ibeacon_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_induce_ad_history_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_induce_ad_history_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_induce_ad_history_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_induce_ad_history_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_induce_ad_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_induce_ad_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_induce_ad_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_induce_ad_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_induce_module_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_induce_module_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_induce_module_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_induce_module_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_induce_park_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_induce_park_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_induce_park_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_induce_park_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_induce_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_induce_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_induce_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_induce_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_inspect_event_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_inspect_event_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_inspect_event_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_inspect_event_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_inspect_group_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_inspect_group_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_inspect_group_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_inspect_group_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_lift_rod_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_lift_rod_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_lift_rod_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_lift_rod_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_local_info_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_local_info_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_local_info_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_local_info_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_logo_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_logo_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_logo_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_logo_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_lottery_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_lottery_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_lottery_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_lottery_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_message_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_message_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_message_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_message_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_mobile_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_mobile_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_mobile_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_mobile_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_mobilepay_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_mobilepay_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_mobilepay_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_mobilepay_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_money_record_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_money_record_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_money_record_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_money_record_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_money_set_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_money_set_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_money_set_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_money_set_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_monitor_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_monitor_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$BEGIN
  if new.id is NULL then
New.id:=nextval('seq_monitor_info_tb');
end if;
Return NEW;
  END;$$;


ALTER FUNCTION public.trigger_fct_monitor_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_no_payment_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_no_payment_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_no_payment_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_no_payment_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_online_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_online_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_online_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_online_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_attach_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_attach_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_attach_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_attach_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_log_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_log_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_log_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_log_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_message_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_message_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_message_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_message_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_reserve_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_reserve_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_reserve_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_reserve_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_tb_inherits_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_tb_inherits_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$  
BEGIN  
    IF  ( NEW.create_time >= 1483200000 AND  
            NEW.create_time < 1485878400 ) THEN  
        INSERT INTO order_tb_2017_01 VALUES (NEW.*); 
    ELSIF ( NEW.create_time >= 1485878400 AND  
            NEW.create_time < 1488297600 ) THEN  
        INSERT INTO order_tb_2017_02 VALUES (NEW.*); 
    ELSIF ( NEW.create_time >= 1488297600 AND  
            NEW.create_time < 1490976000 ) THEN  
        INSERT INTO order_tb_2017_03 VALUES (NEW.*); 
    ELSIF ( NEW.create_time >= 1490976000 AND  
            NEW.create_time < 1493568000 ) THEN  
        INSERT INTO order_tb_2017_04 VALUES (NEW.*); 
    ELSIF ( NEW.create_time >= 1493568000 AND  
            NEW.create_time < 1496246400 ) THEN  
        INSERT INTO order_tb_2017_05 VALUES (NEW.*); 
    ELSIF ( NEW.create_time >= 1496246400 AND  
            NEW.create_time < 1498838400 ) THEN  
        INSERT INTO order_tb_2017_06 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1498838400 AND  
            NEW.create_time < 1501516800 ) THEN  
        INSERT INTO order_tb_2017_07 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1501516800 AND  
            NEW.create_time < 1504195200 ) THEN  
        INSERT INTO order_tb_2017_08 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1504195200 AND  
            NEW.create_time < 1506787200 ) THEN  
        INSERT INTO order_tb_2017_09 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1506787200 AND  
            NEW.create_time < 1509465600 ) THEN  
        INSERT INTO order_tb_2017_10 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1509465600 AND  
            NEW.create_time < 1512057600 ) THEN  
        INSERT INTO order_tb_2017_11 VALUES (NEW.*);
    ELSIF ( NEW.create_time >= 1512057600 AND  
            NEW.create_time < 1514736000 ) THEN  
        INSERT INTO order_tb_2017_12 VALUES (NEW.*);
    ELSE 
	INSERT INTO order_tb_error VALUES (NEW.*);    
    END IF;  
    RETURN NULL;
END;  
$$;


ALTER FUNCTION public.trigger_fct_order_tb_inherits_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_ticket_detail_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_ticket_detail_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_ticket_detail_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_ticket_detail_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_order_ticket_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_order_ticket_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_order_ticket_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_order_ticket_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_org_area_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_org_area_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_org_area_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_org_area_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_org_channel_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_org_channel_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_org_channel_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_org_channel_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_org_city_merchants_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_org_city_merchants_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_org_city_merchants');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_org_city_merchants_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_org_group_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_org_group_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_org_group_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_org_group_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_charge_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_charge_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_charge_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_charge_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_log_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_log_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_log_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_log_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_ticket_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_ticket_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_ticket_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_ticket_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_token_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_token_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_token_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_token_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_park_verify_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_park_verify_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_park_verify_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_park_verify_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_cash_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_cash_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_cash_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_cash_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_comment_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_comment_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_comment_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_comment_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_income_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_income_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_income_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_income_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_message_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_message_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_message_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_message_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_reward_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_reward_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_reward_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_reward_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_parkuser_work_record_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_parkuser_work_record_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_parkuser_work_record_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_parkuser_work_record_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_peakalert_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_peakalert_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_peakalert_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_peakalert_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_phone_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_phone_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$BEGIN
  if new.id is NULL then
New.id:=nextval('seq_phone_info_tb');
end if;
Return NEW;
  END;$$;


ALTER FUNCTION public.trigger_fct_phone_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_price_assist_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_price_assist_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_price_assist_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_price_assist_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_price_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_price_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_price_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_price_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_product_package_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_product_package_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_product_package_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_product_package_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_qr_code_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_qr_code_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_qr_code_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_qr_code_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_qr_thirdpark_code_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_qr_thirdpark_code_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_qr_thirdpark_code');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_qr_thirdpark_code_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_recharge_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_recharge_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_recharge_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_recharge_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_recom_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_recom_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_recom_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_recom_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_recommend_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_recommend_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_recommend_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_recommend_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_reg_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_reg_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_reg_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_reg_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_register_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_register_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_register_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_register_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_remain_berth_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_remain_berth_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_remain_berth_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_remain_berth_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_reward_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_reward_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_reward_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_reward_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_role_auth_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_role_auth_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_role_auth_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_role_auth_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sensor_online_anlysis_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sensor_online_anlysis_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sensor_online_anlysis_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sensor_online_anlysis_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_share_log_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_share_log_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_share_log_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_share_log_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_shop_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_shop_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$BEGIN
  if new.id is NULL then
New.id:=nextval('seq_shop_account_tb');
end if;
Return NEW;
  END;$$;


ALTER FUNCTION public.trigger_fct_shop_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_shop_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_shop_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_shop_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_shop_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sim_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sim_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sim_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sim_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sites_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sites_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sites_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sites_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sites_voltage_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sites_voltage_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sites_voltage_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sites_voltage_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_slow_alert_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_slow_alert_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_slow_alert_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_slow_alert_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sub_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sub_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sub_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sub_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_switch_line_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_switch_line_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_switch_line_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_switch_line_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_sync_info_pool_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_sync_info_pool_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_sync_info_pool_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_sync_info_pool_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_thirdpay_order_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_thirdpay_order_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$BEGIN
  if new.id is NULL then
New.id:=nextval('seq_thirdpay_order_tb');
end if;
Return NEW;
  END;$$;


ALTER FUNCTION public.trigger_fct_thirdpay_order_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_ticket_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_ticket_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_ticket_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_ticket_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_ticket_uion_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_ticket_uion_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_ticket_uion_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_ticket_uion_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_ticket_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_ticket_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.money>12  then
	new.money=12;
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_ticket_update() OWNER TO postgres;

--
-- Name: trigger_fct_tingchebao_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_tingchebao_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_tingchebao_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_tingchebao_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_tmp_p4top5_primarykey_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_tmp_p4top5_primarykey_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_tmp_p4top5_primarykey');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_tmp_p4top5_primarykey_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_transfer_url_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_transfer_url_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_transfer_url_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_transfer_url_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_union_park_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_union_park_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_union_park_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_union_park_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_account_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_account_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_account_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_account_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_friend_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_friend_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_friend_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_friend_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_info_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_info_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_info_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_info_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_liuyan_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_liuyan_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_liuyan_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_liuyan_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_local_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_local_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_local_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_local_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_log_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_log_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_log_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_log_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_message_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_message_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_message_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_message_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_payaccount_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_payaccount_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_payaccount_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_payaccount_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_pic_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_pic_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_pic_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_pic_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_preaddfriend_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_preaddfriend_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_preaddfriend_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_preaddfriend_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_profile_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_profile_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_profile_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_profile_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_role_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_role_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_role_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_role_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_session_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_session_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_session_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_session_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_user_worksite_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_user_worksite_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_user_worksite_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_user_worksite_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_verification_code_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_verification_code_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_verification_code_tb ');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_verification_code_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_vip_apply_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_vip_apply_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_vip_apply_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_vip_apply_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_visit_info_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_visit_info_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_visit_info_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_visit_info_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_withdrawer_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_withdrawer_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_withdrawer_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_withdrawer_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_berthsec_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_berthsec_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_berthsec_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_berthsec_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_detail_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_detail_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_detail_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_detail_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_employee_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_employee_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_employee_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_employee_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_group_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_group_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_group_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_group_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_inspector_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_inspector_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_inspector_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_inspector_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_work_time_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_work_time_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_work_time_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_work_time_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_wxp_user_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_wxp_user_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_wxp_user_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_wxp_user_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_zld_black_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_zld_black_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_zld_black_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_zld_black_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_zld_game_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_zld_game_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_zld_game_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_zld_game_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_zld_organize_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_zld_organize_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_zld_organize_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_zld_organize_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_zld_orgtype_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_zld_orgtype_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_zld_orgtype_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_zld_orgtype_tb_trigger() OWNER TO postgres;

--
-- Name: trigger_fct_zld_protocol_tb_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION trigger_fct_zld_protocol_tb_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  if new.id is NULL then
New.id:=nextval('seq_zld_protocol_tb');
end if;
Return NEW;
  END;
$$;


ALTER FUNCTION public.trigger_fct_zld_protocol_tb_trigger() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: advert_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE advert_tb (
    id bigint NOT NULL,
    aname character varying,
    aurl character varying,
    ctime bigint,
    open integer DEFAULT 0,
    hits integer DEFAULT 0,
    appurl character varying,
    tname character varying
);


ALTER TABLE advert_tb OWNER TO postgres;

--
-- Name: TABLE advert_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE advert_tb IS '广告表';


--
-- Name: COLUMN advert_tb.aname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.aname IS '名称';


--
-- Name: COLUMN advert_tb.aurl; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.aurl IS '链接地址';


--
-- Name: COLUMN advert_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.ctime IS '添加时间';


--
-- Name: COLUMN advert_tb.open; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.open IS '打中次数';


--
-- Name: COLUMN advert_tb.hits; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.hits IS '打开链接次数';


--
-- Name: COLUMN advert_tb.appurl; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.appurl IS '应用下载地址';


--
-- Name: COLUMN advert_tb.tname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN advert_tb.tname IS '礼券名称';


--
-- Name: alipay_log; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE alipay_log (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    uin bigint,
    notify_no character varying(500),
    create_time bigint,
    money numeric(10,2),
    wxp_orderid character varying,
    orderid bigint DEFAULT '-1'::integer
);


ALTER TABLE alipay_log OWNER TO tracqdev;

--
-- Name: COLUMN alipay_log.wxp_orderid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN alipay_log.wxp_orderid IS '微信公众号订单号';


--
-- Name: area_ibeacon_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE area_ibeacon_tb (
    id bigint NOT NULL,
    ibcid character varying(65),
    comid bigint,
    reg_time bigint,
    state bigint,
    pass bigint DEFAULT 0,
    major integer,
    minor integer,
    lng numeric(10,6),
    lat numeric(10,6)
);


ALTER TABLE area_ibeacon_tb OWNER TO tracqdev;

--
-- Name: COLUMN area_ibeacon_tb.pass; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN area_ibeacon_tb.pass IS '通道号';


--
-- Name: auth_role_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE auth_role_tb (
    id bigint NOT NULL,
    auth_id bigint,
    role_id bigint,
    sub_auth character varying,
    creator_id bigint
);


ALTER TABLE auth_role_tb OWNER TO postgres;

--
-- Name: TABLE auth_role_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE auth_role_tb IS '权限角色表';


--
-- Name: COLUMN auth_role_tb.sub_auth; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN auth_role_tb.sub_auth IS '子权限';


--
-- Name: COLUMN auth_role_tb.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN auth_role_tb.creator_id IS '创建者编号';


--
-- Name: auth_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE auth_tb (
    id bigint NOT NULL,
    nname character varying(100),
    state integer DEFAULT 0,
    isparent boolean DEFAULT false,
    nid bigint,
    pid bigint,
    sub_auth character varying,
    url character varying,
    oid bigint,
    sort integer DEFAULT 0,
    actions character varying,
    create_time bigint,
    delete_time bigint,
    update_time bigint,
    creator_id bigint,
    deletor_id bigint,
    show integer DEFAULT 0
);


ALTER TABLE auth_tb OWNER TO tracqdev;

--
-- Name: COLUMN auth_tb.nname; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.nname IS '节点名称';


--
-- Name: COLUMN auth_tb.isparent; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.isparent IS '是否是父节点';


--
-- Name: COLUMN auth_tb.nid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.nid IS '子节点ID';


--
-- Name: COLUMN auth_tb.pid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.pid IS '父节点ID';


--
-- Name: COLUMN auth_tb.sub_auth; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.sub_auth IS '子权限';


--
-- Name: COLUMN auth_tb.url; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.url IS '请求链接';


--
-- Name: COLUMN auth_tb.oid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.oid IS '所属组织类型';


--
-- Name: COLUMN auth_tb.sort; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.sort IS '排序';


--
-- Name: COLUMN auth_tb.actions; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.actions IS '子权限的 action';


--
-- Name: COLUMN auth_tb.create_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.create_time IS '创建时间';


--
-- Name: COLUMN auth_tb.delete_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.delete_time IS ' 删除时间';


--
-- Name: COLUMN auth_tb.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.update_time IS '最后一次更新时间';


--
-- Name: COLUMN auth_tb.creator_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.creator_id IS ' 创建者编号';


--
-- Name: COLUMN auth_tb.deletor_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.deletor_id IS ' 删除者编号';


--
-- Name: COLUMN auth_tb.show; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN auth_tb.show IS '是否在菜单列表显示 0：显示 1：不显示';


--
-- Name: berth_order_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE berth_order_tb (
    id bigint NOT NULL,
    berth_id character varying,
    in_time bigint,
    out_time bigint,
    total numeric(10,2) DEFAULT 0,
    state integer DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    in_uid bigint DEFAULT '-1'::integer,
    out_uid bigint DEFAULT '-1'::integer,
    order_total numeric(10,2) DEFAULT 0,
    comid bigint DEFAULT '-1'::integer,
    indicate character varying,
    dici_id bigint,
    bind_flag integer DEFAULT 0,
    berthseg_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE berth_order_tb OWNER TO postgres;

--
-- Name: TABLE berth_order_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE berth_order_tb IS '在磁订单表，记录下地磁上变化，有车，无车';


--
-- Name: COLUMN berth_order_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.berth_id IS '地磁名称（dici_tb的did）';


--
-- Name: COLUMN berth_order_tb.in_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.in_time IS '来车时间';


--
-- Name: COLUMN berth_order_tb.out_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.out_time IS '走车时间';


--
-- Name: COLUMN berth_order_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.total IS '金额';


--
-- Name: COLUMN berth_order_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.state IS '0:未出场 1：已出场';


--
-- Name: COLUMN berth_order_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.orderid IS '订单表order_tb主键';


--
-- Name: COLUMN berth_order_tb.in_uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.in_uid IS '进场收费员';


--
-- Name: COLUMN berth_order_tb.out_uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.out_uid IS '出场收费员';


--
-- Name: COLUMN berth_order_tb.order_total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.order_total IS '实际订单收款金额';


--
-- Name: COLUMN berth_order_tb.indicate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.indicate IS '地磁进场标识，进场是时生成一下00-FF的标志，出场时传相同的标示';


--
-- Name: COLUMN berth_order_tb.dici_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.dici_id IS '车位编号（com_park_tb编号id）';


--
-- Name: COLUMN berth_order_tb.bind_flag; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.bind_flag IS '是否可以用来绑定POS机订单 0：不可以 1：可以';


--
-- Name: COLUMN berth_order_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.berthseg_id IS '泊位段编号';


--
-- Name: COLUMN berth_order_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.groupid IS '运营集团账号(索引)';


--
-- Name: COLUMN berth_order_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN berth_order_tb.is_delete IS ' 状态 0：正常 1：删除';


--
-- Name: berth_order_tb_error; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE berth_order_tb_error (
    id bigint,
    berth_id character varying,
    in_time bigint,
    out_time bigint,
    total numeric(10,2) DEFAULT 0,
    state integer DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    in_uid bigint DEFAULT '-1'::integer,
    out_uid bigint DEFAULT '-1'::integer,
    order_total numeric(10,2) DEFAULT 0,
    comid bigint DEFAULT '-1'::integer,
    indicate character varying,
    dici_id bigint,
    bind_flag integer DEFAULT 0,
    berthseg_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
)
INHERITS (berth_order_tb);


ALTER TABLE berth_order_tb_error OWNER TO postgres;

--
-- Name: bizcircle_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE bizcircle_tb (
    id bigint NOT NULL,
    name character varying(100),
    resume character varying(300),
    state integer DEFAULT 0,
    create_time bigint
);


ALTER TABLE bizcircle_tb OWNER TO tracqdev;

--
-- Name: COLUMN bizcircle_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN bizcircle_tb.state IS '状态';


--
-- Name: bolink_ccount_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE bolink_ccount_tb (
    id bigint NOT NULL,
    comid bigint,
    groupid bigint DEFAULT '-1'::integer,
    money numeric(10,2),
    giveto integer,
    ctime bigint,
    uin bigint,
    type integer DEFAULT 0,
    orderid character varying
);


ALTER TABLE bolink_ccount_tb OWNER TO postgres;

--
-- Name: TABLE bolink_ccount_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bolink_ccount_tb IS '泊链停车费记录表';


--
-- Name: COLUMN bolink_ccount_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.comid IS '车场编号';


--
-- Name: COLUMN bolink_ccount_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.groupid IS '集团编号';


--
-- Name: COLUMN bolink_ccount_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.money IS '金额';


--
-- Name: COLUMN bolink_ccount_tb.giveto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.giveto IS '停车费记录到的账户 0停车场 1收费员 2集团 3泊链平台';


--
-- Name: COLUMN bolink_ccount_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.ctime IS '记录时间';


--
-- Name: COLUMN bolink_ccount_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.uin IS '车主编号';


--
-- Name: COLUMN bolink_ccount_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.type IS '类型 0其它平台车主在本平台停车，车场账户收入停车费，泊链平台及本台的停车费， 1车主在其它平台支付停车费，泊链平台已扣本平台的余额，本平台扣除用户的余额';


--
-- Name: COLUMN bolink_ccount_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_ccount_tb.orderid IS '订单编号，type=0时是本平台的订单编号，为1时，第三方的订单编号';


--
-- Name: bolink_order_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE bolink_order_tb (
    id bigint NOT NULL,
    union_id bigint,
    money numeric(10,2),
    start_time bigint,
    end_time bigint,
    state integer,
    in_time bigint,
    out_time bigint,
    update_time bigint,
    union_name character varying,
    park_name character varying,
    order_id character varying,
    plate_number character varying,
    uin bigint,
    pay_type integer DEFAULT 0,
    pay_union_id bigint DEFAULT '-1'::integer,
    prepay numeric(10,2) DEFAULT 0,
    park_id character varying,
    duration integer,
    prepay_time bigint
);


ALTER TABLE bolink_order_tb OWNER TO postgres;

--
-- Name: TABLE bolink_order_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bolink_order_tb IS '泊链订单记录表';


--
-- Name: COLUMN bolink_order_tb.union_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.union_id IS '车主停车的厂商编号';


--
-- Name: COLUMN bolink_order_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.money IS '金额';


--
-- Name: COLUMN bolink_order_tb.start_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.start_time IS '进场时间';


--
-- Name: COLUMN bolink_order_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.end_time IS '出场时间';


--
-- Name: COLUMN bolink_order_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.state IS '状态 0未结算 1已结算';


--
-- Name: COLUMN bolink_order_tb.in_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.in_time IS '进场记录时间';


--
-- Name: COLUMN bolink_order_tb.out_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.out_time IS '出场记录时间';


--
-- Name: COLUMN bolink_order_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.update_time IS '订单金额修改时间';


--
-- Name: COLUMN bolink_order_tb.union_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.union_name IS '厂商平台名称';


--
-- Name: COLUMN bolink_order_tb.park_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.park_name IS '停车场名称';


--
-- Name: COLUMN bolink_order_tb.order_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.order_id IS '车主停车所在厂商平台的订单编号';


--
-- Name: COLUMN bolink_order_tb.plate_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.plate_number IS '车牌号码';


--
-- Name: COLUMN bolink_order_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.uin IS '车主编号';


--
-- Name: COLUMN bolink_order_tb.pay_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.pay_type IS '0现金 1电子支付';


--
-- Name: COLUMN bolink_order_tb.pay_union_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.pay_union_id IS '电子支付的厂商平台，现金支付时为-1';


--
-- Name: COLUMN bolink_order_tb.prepay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.prepay IS '预付金额';


--
-- Name: COLUMN bolink_order_tb.park_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.park_id IS '第三方车场编号';


--
-- Name: COLUMN bolink_order_tb.duration; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bolink_order_tb.duration IS '停车时长';


--
-- Name: bonus_record_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE bonus_record_tb (
    id bigint NOT NULL,
    bid bigint,
    ctime bigint,
    mobile character varying(15),
    state integer DEFAULT 0,
    amount integer,
    type integer DEFAULT 0
);


ALTER TABLE bonus_record_tb OWNER TO postgres;

--
-- Name: COLUMN bonus_record_tb.bid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.bid IS '红包编号 1:今日头条(北京)，2:传单红包，3:节日红包，4:今日头条（外地） 998:直付红包，999:收费员推荐车主，1000:为订单红包';


--
-- Name: COLUMN bonus_record_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.ctime IS '领取时间';


--
-- Name: COLUMN bonus_record_tb.mobile; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.mobile IS '领取人手机';


--
-- Name: COLUMN bonus_record_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.state IS '0：未写入车主账户，1：已写入用户账户';


--
-- Name: COLUMN bonus_record_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.amount IS '金额';


--
-- Name: COLUMN bonus_record_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_record_tb.type IS '类型：0普通券，1打折券';


--
-- Name: bonus_type_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE bonus_type_tb (
    id bigint NOT NULL,
    name character varying(100),
    ctime bigint,
    state integer
);


ALTER TABLE bonus_type_tb OWNER TO postgres;

--
-- Name: TABLE bonus_type_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bonus_type_tb IS '红包类型表';


--
-- Name: COLUMN bonus_type_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bonus_type_tb.state IS '状态 0不可用，1可用';


--
-- Name: car_info_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE car_info_tb (
    id bigint NOT NULL,
    uin bigint,
    car_number character varying(10),
    state integer DEFAULT 1,
    create_time bigint,
    is_auth integer DEFAULT 0,
    is_comuse integer DEFAULT 0,
    pic_url1 character varying,
    pic_url2 character varying,
    remark character varying
);


ALTER TABLE car_info_tb OWNER TO tracqdev;

--
-- Name: COLUMN car_info_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.state IS '0:不可用，1：可用';


--
-- Name: COLUMN car_info_tb.create_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.create_time IS '新建时间';


--
-- Name: COLUMN car_info_tb.is_auth; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.is_auth IS ' 是否已认证 -1认证失败 0未认证，1已认证 2认证中';


--
-- Name: COLUMN car_info_tb.is_comuse; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.is_comuse IS '是否是常用车牌，0不是，1是';


--
-- Name: COLUMN car_info_tb.pic_url1; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.pic_url1 IS '图片地地址1';


--
-- Name: COLUMN car_info_tb.pic_url2; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.pic_url2 IS '图片地地址2';


--
-- Name: COLUMN car_info_tb.remark; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN car_info_tb.remark IS '说明';


--
-- Name: car_number_type_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE car_number_type_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    car_number character varying(20),
    typeid bigint DEFAULT '-1'::integer,
    update_time bigint
);


ALTER TABLE car_number_type_tb OWNER TO postgres;

--
-- Name: TABLE car_number_type_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE car_number_type_tb IS '车牌车型对应表';


--
-- Name: COLUMN car_number_type_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_number_type_tb.comid IS '车场编号';


--
-- Name: COLUMN car_number_type_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_number_type_tb.car_number IS '车牌号';


--
-- Name: COLUMN car_number_type_tb.typeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_number_type_tb.typeid IS '车型管理';


--
-- Name: car_picturs_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE car_picturs_tb (
    id bigint NOT NULL,
    orderid bigint,
    create_time bigint,
    lefttop character varying(50),
    rightbottom character varying(50),
    pictype integer,
    width character varying(50),
    height character varying(50)
);


ALTER TABLE car_picturs_tb OWNER TO postgres;

--
-- Name: COLUMN car_picturs_tb.width; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_picturs_tb.width IS '图片宽';


--
-- Name: COLUMN car_picturs_tb.height; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_picturs_tb.height IS '图片高';


--
-- Name: car_stops_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE car_stops_tb (
    id bigint NOT NULL,
    name character(100),
    longitude numeric(10,6),
    latitude numeric(10,6),
    start_price numeric(5,2),
    next_price numeric(5,2),
    max_price numeric(5,2),
    state integer DEFAULT 0,
    ctime bigint,
    utime bigint,
    cuin bigint,
    resume character(300),
    pic character varying,
    address character varying,
    creator character varying,
    city integer DEFAULT '-1'::integer
);


ALTER TABLE car_stops_tb OWNER TO postgres;

--
-- Name: TABLE car_stops_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE car_stops_tb IS '泊车表';


--
-- Name: COLUMN car_stops_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.name IS '名称';


--
-- Name: COLUMN car_stops_tb.start_price; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.start_price IS '起步价';


--
-- Name: COLUMN car_stops_tb.max_price; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.max_price IS '最高价';


--
-- Name: COLUMN car_stops_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.state IS '状态，0正常，1不可用';


--
-- Name: COLUMN car_stops_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.ctime IS '创建日期';


--
-- Name: COLUMN car_stops_tb.utime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.utime IS '修改日期';


--
-- Name: COLUMN car_stops_tb.cuin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.cuin IS '创建人';


--
-- Name: COLUMN car_stops_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.resume IS '说明';


--
-- Name: COLUMN car_stops_tb.pic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.pic IS '泊车点图片';


--
-- Name: COLUMN car_stops_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.address IS ' 位置';


--
-- Name: COLUMN car_stops_tb.creator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.creator IS '创建人';


--
-- Name: COLUMN car_stops_tb.city; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_stops_tb.city IS '所在城市';


--
-- Name: car_type_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE car_type_tb (
    id bigint NOT NULL,
    name character varying,
    comid bigint,
    sort integer DEFAULT 0,
    cartype_id character varying,
    is_delete integer DEFAULT 0,
    create_time bigint,
    update_time bigint
);


ALTER TABLE car_type_tb OWNER TO postgres;

--
-- Name: TABLE car_type_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE car_type_tb IS '车型表';


--
-- Name: COLUMN car_type_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.comid IS '所属车场';


--
-- Name: COLUMN car_type_tb.sort; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.sort IS '排序';


--
-- Name: COLUMN car_type_tb.cartype_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.cartype_id IS '第三方车型编号';


--
-- Name: COLUMN car_type_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.is_delete IS '是否删除 0否1是';


--
-- Name: COLUMN car_type_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.create_time IS '新建时间';


--
-- Name: COLUMN car_type_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN car_type_tb.update_time IS '更新时间';


--
-- Name: card_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE card_account_tb (
    id bigint NOT NULL,
    card_id bigint DEFAULT '-1'::integer,
    type integer DEFAULT 0,
    charge_type integer DEFAULT '-1'::integer,
    consume_type integer DEFAULT '-1'::integer,
    amount numeric(10,2) DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    create_time bigint,
    remark character varying,
    uin bigint DEFAULT '-1'::integer,
    uid bigint DEFAULT '-1'::integer,
    comid bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE card_account_tb OWNER TO postgres;

--
-- Name: TABLE card_account_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE card_account_tb IS '卡片账户流水';


--
-- Name: COLUMN card_account_tb.card_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.card_id IS '卡片编号';


--
-- Name: COLUMN card_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.type IS '（卡片的生命周期）0：充值 1：消费 2：开卡（卡片初始化，此时的卡片还不能使用） 3：激活卡片（此时卡片方可使用） 4：绑定用户 5：注销卡片';


--
-- Name: COLUMN card_account_tb.charge_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.charge_type IS '充值方式：0：现金充值 1：微信公众号充值 2：微信客户端充值 3：支付宝充值 4：预支付退款 5：订单退款 ';


--
-- Name: COLUMN card_account_tb.consume_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.consume_type IS '消费方式 0：支付停车费（非预付） 1：预付停车费 2：补缴停车费  3：追缴停车费';


--
-- Name: COLUMN card_account_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.amount IS '金额';


--
-- Name: COLUMN card_account_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.orderid IS '订单编号';


--
-- Name: COLUMN card_account_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.create_time IS '记录时间';


--
-- Name: COLUMN card_account_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.remark IS '说明';


--
-- Name: COLUMN card_account_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.uin IS '车主编号（有可能是非卡片持有者）';


--
-- Name: COLUMN card_account_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.uid IS '收费员（或者操作人）账号';


--
-- Name: COLUMN card_account_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.comid IS '产生这笔流水所在的车场编号
';


--
-- Name: COLUMN card_account_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.berthseg_id IS '产生这笔流水所在的泊位段编号';


--
-- Name: COLUMN card_account_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.berth_id IS '产生这笔流水所在的泊位编号
  ';


--
-- Name: COLUMN card_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.groupid IS '运营集团账号';


--
-- Name: COLUMN card_account_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_account_tb.is_delete IS '账目流水状态 0：正常 1：删除
   ';


--
-- Name: card_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE card_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint NOT NULL,
    all_count integer DEFAULT 0,
    all_balance numeric(10,2) DEFAULT 0,
    slot_charge numeric(10,2) DEFAULT 0,
    slot_consume numeric(10,2) DEFAULT 0,
    slot_refund_count integer DEFAULT 0,
    slot_refund_balance numeric(10,2) DEFAULT 0,
    slot_act_count integer DEFAULT 0,
    slot_act_balance numeric(10,2) DEFAULT 0,
    groupid bigint DEFAULT '-1'::integer NOT NULL,
    slot_bind_count integer DEFAULT 0
);


ALTER TABLE card_anlysis_tb OWNER TO postgres;

--
-- Name: COLUMN card_anlysis_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.create_time IS '统计时间';


--
-- Name: COLUMN card_anlysis_tb.all_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.all_count IS '截止当前时间发卡总数';


--
-- Name: COLUMN card_anlysis_tb.all_balance; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.all_balance IS '截止当前时间总余额';


--
-- Name: COLUMN card_anlysis_tb.slot_charge; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_charge IS '一个统计时间段内的充值金额';


--
-- Name: COLUMN card_anlysis_tb.slot_consume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_consume IS '一个统计时间段内消费总额';


--
-- Name: COLUMN card_anlysis_tb.slot_refund_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_refund_count IS '一个统计时间段内退卡总数';


--
-- Name: COLUMN card_anlysis_tb.slot_refund_balance; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_refund_balance IS '一个统计时间段内办理退卡退还的余额总数';


--
-- Name: COLUMN card_anlysis_tb.slot_act_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_act_count IS '一个统计时间段内发卡数量（激活卡片）';


--
-- Name: COLUMN card_anlysis_tb.slot_act_balance; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_act_balance IS '一个统计时间段内发行卡片（激活卡片）的初始化余额总数';


--
-- Name: COLUMN card_anlysis_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.groupid IS '运营集团编号';


--
-- Name: COLUMN card_anlysis_tb.slot_bind_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_anlysis_tb.slot_bind_count IS '一个统计时间段内绑定的用户数量';


--
-- Name: card_carnumber_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE card_carnumber_tb (
    id bigint NOT NULL,
    car_number character varying NOT NULL,
    card_id bigint DEFAULT '-1'::integer NOT NULL,
    is_delete integer DEFAULT 0,
    create_time bigint NOT NULL
);


ALTER TABLE card_carnumber_tb OWNER TO postgres;

--
-- Name: TABLE card_carnumber_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE card_carnumber_tb IS '此表存储卡片和车牌号的绑定关系，这些车牌都没有绑定手机号';


--
-- Name: COLUMN card_carnumber_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_carnumber_tb.is_delete IS '0：正常 1：删除';


--
-- Name: seq_card_renew_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_card_renew_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_card_renew_tb OWNER TO postgres;

--
-- Name: card_renew_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE card_renew_tb (
    id integer DEFAULT nextval('seq_card_renew_tb'::regclass) NOT NULL,
    trade_no character varying,
    card_id character varying,
    pay_time integer,
    amount_receivable character varying,
    amount_pay character varying,
    collector character varying,
    pay_type character varying,
    car_number character varying,
    user_id character varying,
    resume character varying,
    buy_month integer,
    comid character varying,
    create_time integer,
    update_time integer,
    limit_time bigint
);


ALTER TABLE card_renew_tb OWNER TO postgres;

--
-- Name: COLUMN card_renew_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.id IS '主键id';


--
-- Name: COLUMN card_renew_tb.trade_no; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.trade_no IS '购买月卡流水号';


--
-- Name: COLUMN card_renew_tb.card_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.card_id IS '月卡编号';


--
-- Name: COLUMN card_renew_tb.pay_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.pay_time IS '月卡续费时间';


--
-- Name: COLUMN card_renew_tb.amount_receivable; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.amount_receivable IS '应收金额';


--
-- Name: COLUMN card_renew_tb.amount_pay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.amount_pay IS '实收金额';


--
-- Name: COLUMN card_renew_tb.collector; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.collector IS '收费人';


--
-- Name: COLUMN card_renew_tb.pay_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.pay_type IS '缴费类型';


--
-- Name: COLUMN card_renew_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.car_number IS '车牌号';


--
-- Name: COLUMN card_renew_tb.user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.user_id IS '用户编号';


--
-- Name: COLUMN card_renew_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.resume IS '备注信息';


--
-- Name: COLUMN card_renew_tb.buy_month; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.buy_month IS '购买月数';


--
-- Name: COLUMN card_renew_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.comid IS '车场编号';


--
-- Name: COLUMN card_renew_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.create_time IS '月卡缴费记录入库时间';


--
-- Name: COLUMN card_renew_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.update_time IS '月卡续费修改时间';


--
-- Name: COLUMN card_renew_tb.limit_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN card_renew_tb.limit_time IS '到期时间
';


--
-- Name: carower_product; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE carower_product (
    id bigint NOT NULL,
    pid bigint,
    uin bigint,
    create_time bigint,
    b_time bigint,
    e_time bigint,
    total numeric(10,2) DEFAULT 0,
    remark character varying,
    name character varying,
    address character varying,
    p_lot character varying,
    act_total numeric(10,2) DEFAULT 0,
    etc_id character varying,
    update_time bigint,
    card_id character varying,
    member_id character varying,
    car_number character varying,
    com_id bigint,
    mobile character varying,
    is_delete bigint DEFAULT 0,
    tel character varying,
    car_type_id bigint,
    limit_day_type integer DEFAULT 0,
    price_info character varying
);


ALTER TABLE carower_product OWNER TO tracqdev;

--
-- Name: COLUMN carower_product.total; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.total IS '金额';


--
-- Name: COLUMN carower_product.remark; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.remark IS '备注';


--
-- Name: COLUMN carower_product.name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.name IS '会员名字';


--
-- Name: COLUMN carower_product.address; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.address IS '会员地址';


--
-- Name: COLUMN carower_product.p_lot; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.p_lot IS '车位编号';


--
-- Name: COLUMN carower_product.act_total; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.act_total IS '实际收取的金额（有优惠）';


--
-- Name: COLUMN carower_product.etc_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.etc_id IS '电子标签';


--
-- Name: COLUMN carower_product.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.update_time IS '记录数据修改时间';


--
-- Name: COLUMN carower_product.card_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.card_id IS '月卡编号（收费系统唯一编号）';


--
-- Name: COLUMN carower_product.member_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.member_id IS '车主在收费系统编号';


--
-- Name: COLUMN carower_product.car_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.car_number IS '车牌，多个车牌，用”,”英文分隔';


--
-- Name: COLUMN carower_product.com_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.com_id IS '车场编号';


--
-- Name: COLUMN carower_product.mobile; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.mobile IS '手机号';


--
-- Name: COLUMN carower_product.is_delete; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.is_delete IS '记录云端月卡会员是否被删除';


--
-- Name: COLUMN carower_product.tel; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.tel IS '联系电话';


--
-- Name: COLUMN carower_product.car_type_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.car_type_id IS '车辆类型，关联car_type_tb 主键';


--
-- Name: COLUMN carower_product.limit_day_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.limit_day_type IS '单双日限行 0 不限制，1限制';


--
-- Name: COLUMN carower_product.price_info; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN carower_product.price_info IS ' 临时月卡价格信息';


--
-- Name: seq_carpic_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_carpic_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_carpic_tb OWNER TO postgres;

--
-- Name: carpic_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE carpic_tb (
    id integer DEFAULT nextval('seq_carpic_tb'::regclass) NOT NULL,
    order_id character varying,
    create_time integer,
    car_number character varying,
    pic_type character varying,
    resume character varying,
    comid character varying,
    update_time integer,
    content text,
    picture_source character varying,
    liftrod_id character varying,
    park_order_type character varying,
    liftpic_table_name character varying,
    carpic_table_name character varying,
    event_id character varying,
    confirmpic_table_name character varying
);


ALTER TABLE carpic_tb OWNER TO postgres;

--
-- Name: COLUMN carpic_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.id IS '主键id';


--
-- Name: COLUMN carpic_tb.order_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.order_id IS '订单编号';


--
-- Name: COLUMN carpic_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.create_time IS '图片上传时间';


--
-- Name: COLUMN carpic_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.car_number IS '图片对应的车牌号';


--
-- Name: COLUMN carpic_tb.pic_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.pic_type IS '图片上传类型';


--
-- Name: COLUMN carpic_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.resume IS '车辆图片上传备注';


--
-- Name: COLUMN carpic_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.comid IS '车场编号';


--
-- Name: COLUMN carpic_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.update_time IS '车辆图片修改时间';


--
-- Name: COLUMN carpic_tb.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.content IS '存储图片base64编码';


--
-- Name: COLUMN carpic_tb.picture_source; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.picture_source IS '车场上传图片来源';


--
-- Name: COLUMN carpic_tb.liftrod_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.liftrod_id IS '车场收费系统抬杆记录编号';


--
-- Name: COLUMN carpic_tb.park_order_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.park_order_type IS '车场订单图片对应的类型';


--
-- Name: COLUMN carpic_tb.liftpic_table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.liftpic_table_name IS '记录云端存储的抬杆图片表名位置';


--
-- Name: COLUMN carpic_tb.carpic_table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.carpic_table_name IS '记录车辆出入场图片在云端存储的表名';


--
-- Name: COLUMN carpic_tb.event_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.event_id IS '手动匹配订单事件编号';


--
-- Name: COLUMN carpic_tb.confirmpic_table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carpic_tb.confirmpic_table_name IS '记录云端存储的人工确认订单车牌图片表名位置';


--
-- Name: carstop_order_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE carstop_order_tb (
    id bigint NOT NULL,
    cid bigint,
    uin bigint,
    car_number character varying,
    buid bigint,
    euid bigint,
    start_time bigint,
    btime bigint,
    end_time bigint,
    etime bigint,
    amount numeric(8,2),
    state integer,
    pic character varying,
    lng numeric(10,6),
    lat numeric(10,6),
    keyno character varying,
    car_local character varying,
    pay_type integer,
    oilpic character varying
);


ALTER TABLE carstop_order_tb OWNER TO postgres;

--
-- Name: COLUMN carstop_order_tb.cid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.cid IS '泊车点编号';


--
-- Name: COLUMN carstop_order_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.uin IS '车主';


--
-- Name: COLUMN carstop_order_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.car_number IS '车牌';


--
-- Name: COLUMN carstop_order_tb.buid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.buid IS '接车人';


--
-- Name: COLUMN carstop_order_tb.euid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.euid IS '还车人';


--
-- Name: COLUMN carstop_order_tb.start_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.start_time IS '车主下单时间';


--
-- Name: COLUMN carstop_order_tb.btime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.btime IS '接车时间';


--
-- Name: COLUMN carstop_order_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.end_time IS '请求还车时间';


--
-- Name: COLUMN carstop_order_tb.etime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.etime IS '还车时间';


--
-- Name: COLUMN carstop_order_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.amount IS '金额';


--
-- Name: COLUMN carstop_order_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.state IS '状态:0车主泊车请求 1泊车员已响应泊车 2正在泊车  3泊车完成 4车主取车请求 5 泊车员已响应取车 6泊车员正在取车 7等待支付 8支付成功 9订单取消';


--
-- Name: COLUMN carstop_order_tb.pic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.pic IS '泊车照片';


--
-- Name: COLUMN carstop_order_tb.lng; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.lng IS '车主、车辆经度';


--
-- Name: COLUMN carstop_order_tb.lat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.lat IS '车主/车辆纬度';


--
-- Name: COLUMN carstop_order_tb.keyno; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.keyno IS '车钥匙编号';


--
-- Name: COLUMN carstop_order_tb.car_local; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.car_local IS '泊车位置';


--
-- Name: COLUMN carstop_order_tb.pay_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.pay_type IS '支付方式   0现金，1余额, 2微信，3余额+微信';


--
-- Name: COLUMN carstop_order_tb.oilpic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstop_order_tb.oilpic IS '油表照片';


--
-- Name: carstops_price_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE carstops_price_tb (
    id bigint NOT NULL,
    cid bigint,
    ctime bigint,
    utime bigint,
    first_price numeric(5,2),
    first_unit integer,
    next_price numeric(5,2),
    next_unit integer,
    top_price numeric(8,2),
    fav_price numeric(5,2),
    fav_unit integer,
    type integer,
    creator character varying,
    resume character varying
);


ALTER TABLE carstops_price_tb OWNER TO postgres;

--
-- Name: COLUMN carstops_price_tb.cid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.cid IS '泊车点编号';


--
-- Name: COLUMN carstops_price_tb.first_unit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.first_unit IS '首价格时长（分钟）';


--
-- Name: COLUMN carstops_price_tb.next_price; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.next_price IS '下一计价价格';


--
-- Name: COLUMN carstops_price_tb.next_unit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.next_unit IS '下一计价单位分钟';


--
-- Name: COLUMN carstops_price_tb.top_price; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.top_price IS '封顶价格';


--
-- Name: COLUMN carstops_price_tb.fav_price; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.fav_price IS '优惠价';


--
-- Name: COLUMN carstops_price_tb.fav_unit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.fav_unit IS '优惠价格单位（分钟）';


--
-- Name: COLUMN carstops_price_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.type IS '类型  0临停  1常停';


--
-- Name: COLUMN carstops_price_tb.creator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.creator IS '创建人';


--
-- Name: COLUMN carstops_price_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN carstops_price_tb.resume IS '说明';


--
-- Name: city_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE city_account_tb (
    id bigint NOT NULL,
    cityid bigint DEFAULT '-1'::integer,
    amount numeric(10,2) DEFAULT 0,
    create_time bigint,
    type integer,
    source integer,
    remark character varying,
    withdraw_id bigint DEFAULT '-1'::integer,
    orderid bigint DEFAULT '-1'::integer,
    uid bigint DEFAULT '-1'::integer,
    comid bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE city_account_tb OWNER TO postgres;

--
-- Name: TABLE city_account_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE city_account_tb IS '城市商户账户明细表';


--
-- Name: COLUMN city_account_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.cityid IS '城市商户编号';


--
-- Name: COLUMN city_account_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.amount IS '金额';


--
-- Name: COLUMN city_account_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.create_time IS '记录时间';


--
-- Name: COLUMN city_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.type IS '类型 0：充值 1：支出';


--
-- Name: COLUMN city_account_tb.source; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.source IS '来源 0：停车费（非预付），1：提现，2：追缴停车费，3：预付停车费，4：预付退款（预付），5：预付补缴（预付金额不足）';


--
-- Name: COLUMN city_account_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.remark IS '备注';


--
-- Name: COLUMN city_account_tb.withdraw_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.withdraw_id IS '提现记录编号';


--
-- Name: COLUMN city_account_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.orderid IS '订单编号';


--
-- Name: COLUMN city_account_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.uid IS '收费员账号';


--
-- Name: COLUMN city_account_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.comid IS '车场编号';


--
-- Name: COLUMN city_account_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.berthseg_id IS '产生这笔流水所在的泊位段编号
  ';


--
-- Name: COLUMN city_account_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.berth_id IS '产生这笔流水所在的泊位编号
  ';


--
-- Name: COLUMN city_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.groupid IS '运营集团账号';


--
-- Name: COLUMN city_account_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_account_tb.is_delete IS '账目流水状态 0：正常 1：删除
   ';


--
-- Name: city_hotarea_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE city_hotarea_tb (
    id bigint NOT NULL,
    name character varying,
    adress character varying,
    reason character varying,
    create_time bigint,
    create_user bigint,
    update_time bigint,
    update_user bigint,
    delete_time bigint,
    delete_user bigint,
    state integer DEFAULT 0,
    cityid bigint DEFAULT '-1'::integer
);


ALTER TABLE city_hotarea_tb OWNER TO postgres;

--
-- Name: TABLE city_hotarea_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE city_hotarea_tb IS '城市热点区域管理';


--
-- Name: COLUMN city_hotarea_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.id IS '
';


--
-- Name: COLUMN city_hotarea_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.name IS '名称';


--
-- Name: COLUMN city_hotarea_tb.adress; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.adress IS '详细地址';


--
-- Name: COLUMN city_hotarea_tb.reason; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.reason IS '说明';


--
-- Name: COLUMN city_hotarea_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.create_time IS '新建日期';


--
-- Name: COLUMN city_hotarea_tb.create_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.create_user IS '创建人';


--
-- Name: COLUMN city_hotarea_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.update_time IS '修改时间';


--
-- Name: COLUMN city_hotarea_tb.update_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.update_user IS '修改人';


--
-- Name: COLUMN city_hotarea_tb.delete_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.delete_time IS '删除时间';


--
-- Name: COLUMN city_hotarea_tb.delete_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.delete_user IS '删除人';


--
-- Name: COLUMN city_hotarea_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.state IS '状态 0正常 1 删除';


--
-- Name: COLUMN city_hotarea_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_hotarea_tb.cityid IS '城市商户号';


--
-- Name: city_peakalert_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE city_peakalert_tb (
    id bigint NOT NULL,
    title character varying,
    content character varying,
    handle_user bigint,
    create_time bigint,
    handle_time bigint,
    state integer,
    cityid bigint,
    comid bigint DEFAULT '-1'::integer,
    hotarea_id bigint DEFAULT '-1'::integer
);


ALTER TABLE city_peakalert_tb OWNER TO postgres;

--
-- Name: TABLE city_peakalert_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE city_peakalert_tb IS '停车高峰预警';


--
-- Name: COLUMN city_peakalert_tb.title; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.title IS '标题';


--
-- Name: COLUMN city_peakalert_tb.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.content IS '内容';


--
-- Name: COLUMN city_peakalert_tb.handle_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.handle_user IS '处理人';


--
-- Name: COLUMN city_peakalert_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.create_time IS '添加时间';


--
-- Name: COLUMN city_peakalert_tb.handle_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.handle_time IS '处理时间';


--
-- Name: COLUMN city_peakalert_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.state IS '0新建 1已处理 ';


--
-- Name: COLUMN city_peakalert_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_peakalert_tb.cityid IS '城市编号';


--
-- Name: city_video_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE city_video_tb (
    id bigint NOT NULL,
    video_name character varying,
    ip character varying,
    port character varying,
    cusername character varying,
    cpassword character varying,
    manufacture character varying,
    state integer DEFAULT 1,
    cityid bigint DEFAULT '-1'::integer,
    latitude character varying,
    longitude character varying,
    comid bigint DEFAULT '-1'::integer,
    type integer,
    channelid character varying,
    deviceid character varying,
    address character varying,
    create_time bigint,
    update_time bigint
);


ALTER TABLE city_video_tb OWNER TO postgres;

--
-- Name: COLUMN city_video_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.state IS '0：故障 1：正常 2：删除';


--
-- Name: COLUMN city_video_tb.latitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.latitude IS '纬度';


--
-- Name: COLUMN city_video_tb.longitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.longitude IS '经度';


--
-- Name: COLUMN city_video_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.type IS '监控类型 0：路侧监控 1:封闭停车场监控';


--
-- Name: COLUMN city_video_tb.channelid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.channelid IS '摄像头通道';


--
-- Name: COLUMN city_video_tb.deviceid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.deviceid IS '设备编号';


--
-- Name: COLUMN city_video_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN city_video_tb.address IS '地址';


--
-- Name: collect_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE collect_anlysis_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    cash numeric(10,2) DEFAULT 0,
    epay_collector numeric(10,2) DEFAULT 0,
    epay_park numeric(10,2) DEFAULT 0,
    epay_group numeric(10,2) DEFAULT 0,
    epay_city numeric(10,2) DEFAULT 0,
    create_time bigint
);


ALTER TABLE collect_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE collect_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE collect_anlysis_tb IS '按天统计现金和电子收费';


--
-- Name: COLUMN collect_anlysis_tb.cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collect_anlysis_tb.cash IS '现金';


--
-- Name: COLUMN collect_anlysis_tb.epay_collector; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collect_anlysis_tb.epay_collector IS '收费员收取的电子金额';


--
-- Name: COLUMN collect_anlysis_tb.epay_park; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collect_anlysis_tb.epay_park IS '车场收取的电子金额';


--
-- Name: COLUMN collect_anlysis_tb.epay_group; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collect_anlysis_tb.epay_group IS '运营集团收取的电子金额';


--
-- Name: COLUMN collect_anlysis_tb.epay_city; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collect_anlysis_tb.epay_city IS '城市商户收取的电子金额';


--
-- Name: collector_account_pic_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE collector_account_pic_tb (
    id bigint NOT NULL,
    uin bigint,
    pic_name character varying(100),
    ctime bigint,
    utime bigint,
    state integer,
    comid bigint,
    auditor bigint
);


ALTER TABLE collector_account_pic_tb OWNER TO postgres;

--
-- Name: TABLE collector_account_pic_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE collector_account_pic_tb IS '收费员账户图片，客服根据图片设置收费员账户信息';


--
-- Name: COLUMN collector_account_pic_tb.pic_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_account_pic_tb.pic_name IS '图片名称';


--
-- Name: COLUMN collector_account_pic_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_account_pic_tb.state IS '0:待审核 1:已审核，2:审核中，3:无效';


--
-- Name: COLUMN collector_account_pic_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_account_pic_tb.comid IS '停车场';


--
-- Name: COLUMN collector_account_pic_tb.auditor; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_account_pic_tb.auditor IS '审核人';


--
-- Name: collector_scroe_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE collector_scroe_tb (
    id bigint NOT NULL,
    uin bigint,
    lala_scroe numeric(5,2) DEFAULT 0,
    nfc_score numeric(10,2) DEFAULT 0,
    praise_scroe integer DEFAULT 0,
    create_time bigint,
    pai_score numeric(10,2) DEFAULT 0,
    online_scroe numeric(5,2) DEFAULT 0,
    recom_scroe integer DEFAULT 0
);


ALTER TABLE collector_scroe_tb OWNER TO tracqdev;

--
-- Name: TABLE collector_scroe_tb; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON TABLE collector_scroe_tb IS '收费员积分表';


--
-- Name: COLUMN collector_scroe_tb.pai_score; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN collector_scroe_tb.pai_score IS '照牌积分';


--
-- Name: COLUMN collector_scroe_tb.online_scroe; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN collector_scroe_tb.online_scroe IS '在线积分，每10分钟积0.2分';


--
-- Name: COLUMN collector_scroe_tb.recom_scroe; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN collector_scroe_tb.recom_scroe IS '-- 推荐积分';


--
-- Name: collector_set_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE collector_set_tb (
    id bigint NOT NULL,
    role_id bigint DEFAULT '-1'::integer,
    photoset character varying,
    change_prepay integer DEFAULT 0,
    view_plot integer DEFAULT 0,
    print_sign character varying,
    prepayset character varying,
    isprepay integer DEFAULT 0,
    hidedetail integer DEFAULT 0,
    is_sensortime integer DEFAULT 0,
    password character varying,
    signout_password character varying,
    signout_valid integer DEFAULT 0,
    is_show_card integer DEFAULT 0,
    print_order_place2 integer DEFAULT 0,
    is_duplicate_order smallint DEFAULT 1,
    is_print_name smallint DEFAULT 1
);


ALTER TABLE collector_set_tb OWNER TO postgres;

--
-- Name: TABLE collector_set_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE collector_set_tb IS '收费员收费设置表';


--
-- Name: COLUMN collector_set_tb.role_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.role_id IS '所属角色';


--
-- Name: COLUMN collector_set_tb.photoset; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.photoset IS '拍照设置【num1,num2,num3】分别是入场可拍照片数，出场可拍照片数，未缴可拍照片数';


--
-- Name: COLUMN collector_set_tb.change_prepay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.change_prepay IS '是否可更改预收金额 0不可，1可以';


--
-- Name: COLUMN collector_set_tb.view_plot; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.view_plot IS '0列表，1显示泊位';


--
-- Name: COLUMN collector_set_tb.print_sign; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.print_sign IS '打印小票信息【入场，出场】';


--
-- Name: COLUMN collector_set_tb.prepayset; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.prepayset IS '预收设置 【num1,num2,num3...】预收金额选项';


--
-- Name: COLUMN collector_set_tb.isprepay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.isprepay IS '0不可预收 1可预收';


--
-- Name: COLUMN collector_set_tb.hidedetail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.hidedetail IS '1隐藏 0不隐藏首页收费汇总';


--
-- Name: COLUMN collector_set_tb.is_sensortime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.is_sensortime IS '0：取车检器时间作为录入订单时间 1：取当前时间作为录入订单时间';


--
-- Name: COLUMN collector_set_tb.password; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.password IS '查看汇总的权限密码';


--
-- Name: COLUMN collector_set_tb.signout_password; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.signout_password IS '签退密码';


--
-- Name: COLUMN collector_set_tb.signout_valid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.signout_valid IS '客户端签退是否需要密码验证 0：不需要 1：需要';


--
-- Name: COLUMN collector_set_tb.is_show_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.is_show_card IS '是否在收费汇总和打印小票处显示出来卡片的数据（有些运营集团没有卡片） 0：显示 1：不显示';


--
-- Name: COLUMN collector_set_tb.print_order_place2; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.print_order_place2 IS '桂林提出要在点击结算订单的时候就打印小票（已经有一个打印订单小票的地方，此处为第二个地方）0：不打印 1：打印';


--
-- Name: COLUMN collector_set_tb.is_duplicate_order; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.is_duplicate_order IS '同一车辆在同一运营集团不同车场能否同时存在在场订单 1：是 0：否';


--
-- Name: COLUMN collector_set_tb.is_print_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN collector_set_tb.is_print_name IS '控制打印小票要不要显示收费员名字（有的车场矫情，不让显示名字）1：打印 0：不打印';


--
-- Name: collector_sort; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE collector_sort (
    id bigint NOT NULL,
    uin bigint,
    create_time bigint,
    park_count integer
);


ALTER TABLE collector_sort OWNER TO tracqdev;

--
-- Name: com_account_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_account_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    uin bigint,
    card_number character varying(100),
    atype integer,
    name character varying(50),
    mobile character varying(12),
    bank_name character varying(50),
    note character varying(100),
    type integer DEFAULT 0,
    state integer DEFAULT 0,
    area character varying(50),
    bank_pint character varying(200),
    user_id character varying(20),
    city character varying,
    pay_type character varying,
    pay_date character varying,
    use character varying,
    bank_no character varying,
    groupid bigint DEFAULT '-1'::integer,
    cityid bigint DEFAULT '-1'::integer
);


ALTER TABLE com_account_tb OWNER TO tracqdev;

--
-- Name: COLUMN com_account_tb.card_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.card_number IS '银行卡帐号或支付宝、微信等帐号';


--
-- Name: COLUMN com_account_tb.atype; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.atype IS '0银行卡，1支付宝，2微信';


--
-- Name: COLUMN com_account_tb.name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.name IS '绑定人姓名';


--
-- Name: COLUMN com_account_tb.mobile; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.mobile IS '绑定人手机号';


--
-- Name: COLUMN com_account_tb.bank_name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.bank_name IS '开户行';


--
-- Name: COLUMN com_account_tb.note; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.note IS '备注';


--
-- Name: COLUMN com_account_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.type IS ' 0:公司，1个人 2对公';


--
-- Name: COLUMN com_account_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.state IS '0:可用，1禁用';


--
-- Name: COLUMN com_account_tb.area; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.area IS '开户地区';


--
-- Name: COLUMN com_account_tb.bank_pint; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.bank_pint IS '开户支行（营业网点)';


--
-- Name: COLUMN com_account_tb.user_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.user_id IS '身份证号';


--
-- Name: COLUMN com_account_tb.city; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.city IS '收款人所在市';


--
-- Name: COLUMN com_account_tb.pay_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.pay_type IS '结算方式';


--
-- Name: COLUMN com_account_tb.pay_date; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.pay_date IS '期望日';


--
-- Name: COLUMN com_account_tb.use; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.use IS '用途';


--
-- Name: COLUMN com_account_tb.bank_no; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.bank_no IS '收方行号';


--
-- Name: COLUMN com_account_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.groupid IS '运营集团编号';


--
-- Name: COLUMN com_account_tb.cityid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_account_tb.cityid IS ' 城市商户编号';


--
-- Name: com_alert_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_alert_tb (
    id bigint NOT NULL,
    create_time bigint,
    source character varying,
    content character varying,
    type integer,
    state integer,
    handle_user bigint,
    handle_time bigint,
    cityid bigint
);


ALTER TABLE com_alert_tb OWNER TO postgres;

--
-- Name: TABLE com_alert_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE com_alert_tb IS '报警登记表';


--
-- Name: COLUMN com_alert_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.create_time IS '新建日期';


--
-- Name: COLUMN com_alert_tb.source; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.source IS '来源';


--
-- Name: COLUMN com_alert_tb.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.content IS '内容';


--
-- Name: COLUMN com_alert_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.type IS '类型 ';


--
-- Name: COLUMN com_alert_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.state IS '状态 0新建 1已审核 2已发布 3取消';


--
-- Name: COLUMN com_alert_tb.handle_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.handle_user IS '处理人';


--
-- Name: COLUMN com_alert_tb.handle_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.handle_time IS '处理时间

';


--
-- Name: COLUMN com_alert_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_alert_tb.cityid IS '所属城市';


--
-- Name: com_berthsecs_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_berthsecs_tb (
    id bigint NOT NULL,
    uuid character varying(50),
    berthsec_name character varying(100),
    park_uuid character varying(50),
    create_time bigint,
    address character varying(100),
    longitude numeric(10,6),
    latitude numeric(10,6),
    is_active integer DEFAULT 0,
    comid bigint DEFAULT '-1'::integer
);


ALTER TABLE com_berthsecs_tb OWNER TO postgres;

--
-- Name: COLUMN com_berthsecs_tb.uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.uuid IS '唯一标识';


--
-- Name: COLUMN com_berthsecs_tb.berthsec_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.berthsec_name IS '泊位段名称';


--
-- Name: COLUMN com_berthsecs_tb.park_uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.park_uuid IS '所属停车场uuid';


--
-- Name: COLUMN com_berthsecs_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.create_time IS '创建日期';


--
-- Name: COLUMN com_berthsecs_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.address IS '详细地址';


--
-- Name: COLUMN com_berthsecs_tb.longitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.longitude IS '经度';


--
-- Name: COLUMN com_berthsecs_tb.latitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.latitude IS '纬度';


--
-- Name: COLUMN com_berthsecs_tb.is_active; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.is_active IS '状态 0：正常 1：禁用';


--
-- Name: COLUMN com_berthsecs_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_berthsecs_tb.comid IS '车场编号';


--
-- Name: com_brake_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_brake_tb (
    id bigint NOT NULL,
    brake_name character varying(100),
    serial character varying(100),
    ip character varying(100),
    passid bigint NOT NULL,
    state integer DEFAULT '-1'::integer,
    upload_time bigint,
    comid bigint DEFAULT '-1'::integer
);


ALTER TABLE com_brake_tb OWNER TO postgres;

--
-- Name: COLUMN com_brake_tb.brake_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_brake_tb.brake_name IS '道闸名称';


--
-- Name: COLUMN com_brake_tb.serial; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_brake_tb.serial IS '串口号';


--
-- Name: COLUMN com_brake_tb.ip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_brake_tb.ip IS '设备地址';


--
-- Name: COLUMN com_brake_tb.passid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_brake_tb.passid IS '通道id';


--
-- Name: COLUMN com_brake_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_brake_tb.comid IS ' 所属车场';


--
-- Name: com_camera_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_camera_tb (
    id bigint NOT NULL,
    camera_name character varying(100),
    ip character varying(50),
    port character varying(20),
    cusername character varying(100),
    cpassword character varying(100),
    manufacturer character varying(100),
    passid bigint NOT NULL,
    state integer DEFAULT '-1'::integer,
    upload_time bigint,
    comid bigint DEFAULT '-1'::integer
);


ALTER TABLE com_camera_tb OWNER TO postgres;

--
-- Name: COLUMN com_camera_tb.camera_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.camera_name IS '摄像头名称';


--
-- Name: COLUMN com_camera_tb.ip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.ip IS '摄像头IP地址';


--
-- Name: COLUMN com_camera_tb.port; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.port IS '摄像头端口';


--
-- Name: COLUMN com_camera_tb.cusername; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.cusername IS '摄像头用户名';


--
-- Name: COLUMN com_camera_tb.cpassword; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.cpassword IS '摄像头用户密码';


--
-- Name: COLUMN com_camera_tb.manufacturer; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.manufacturer IS '制造厂商';


--
-- Name: COLUMN com_camera_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_camera_tb.state IS '-1和1表示正常 0表示故障';


--
-- Name: com_comment_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_comment_tb (
    id bigint NOT NULL,
    uin bigint,
    comid bigint,
    comment character varying(4000),
    create_time bigint
);


ALTER TABLE com_comment_tb OWNER TO tracqdev;

--
-- Name: com_info_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_info_tb (
    id bigint NOT NULL,
    company_name character varying(100),
    phone character varying(50),
    fax character varying(50),
    address character varying(100),
    zipcode character varying(50),
    homepage character varying(50),
    resume character varying(4000),
    create_time bigint,
    longitude numeric(10,6),
    latitude numeric(10,6),
    parking_type integer DEFAULT 0,
    parking_total integer DEFAULT 0,
    share_number integer DEFAULT 0,
    auto_order integer,
    mobile character varying(15),
    total_money numeric(15,2) DEFAULT 0,
    money numeric(15,2) DEFAULT 0,
    property character varying(100),
    type integer DEFAULT 0,
    stop_type integer DEFAULT 0,
    update_time bigint,
    state integer DEFAULT 2,
    biz_id bigint,
    uid bigint,
    city integer DEFAULT 110000,
    recom_code bigint,
    nfc integer DEFAULT 0,
    etc integer DEFAULT 0,
    book integer DEFAULT 0,
    navi integer DEFAULT 0,
    monthlypay integer DEFAULT 0,
    isnight integer DEFAULT 0,
    isfixed integer DEFAULT 0,
    iscancel integer DEFAULT 1,
    firstprovince character varying(50),
    mcompany character varying(200),
    record_number character varying(200),
    epay integer DEFAULT 0,
    is_hasparker integer DEFAULT 0,
    isview integer DEFAULT 1,
    remarks character varying,
    invalid_order bigint DEFAULT 0,
    fixed_pass_time bigint,
    car_type integer DEFAULT 0,
    passfree integer DEFAULT 0,
    activity integer DEFAULT 0,
    activity_content character varying,
    upload_uin bigint DEFAULT '-1'::integer,
    minprice_unit numeric(5,2) DEFAULT 0,
    isshowepay integer DEFAULT 1,
    ishidehdbutton integer DEFAULT 0,
    isautopay integer DEFAULT 1,
    allowance numeric(10,2),
    order_per integer DEFAULT 0,
    entry_set integer DEFAULT 0,
    entry_month2_set integer DEFAULT 0,
    chanid bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    ishdmoney integer DEFAULT 0,
    pid bigint DEFAULT '-1'::integer,
    full_set integer DEFAULT 0,
    leave_set integer DEFAULT 0,
    areaid bigint DEFAULT '-1'::integer,
    cityid bigint DEFAULT '-1'::integer,
    hotarea_id bigint DEFAULT '-1'::integer,
    empty integer DEFAULT 0,
    upload_union_time bigint,
    union_state integer DEFAULT 0,
    ukey character varying
);


ALTER TABLE com_info_tb OWNER TO tracqdev;

--
-- Name: COLUMN com_info_tb.parking_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.parking_type IS '-- 车位类型，0地面，1地下，2占道 3室外 4室内 5室内外';


--
-- Name: COLUMN com_info_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.type IS '停车场类型，0：付费，1免费';


--
-- Name: COLUMN com_info_tb.stop_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.stop_type IS '0：平面排列，1：立体排列';


--
-- Name: COLUMN com_info_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.state IS '0:可用，1：删除,2:待审核';


--
-- Name: COLUMN com_info_tb.biz_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.biz_id IS '商圈';


--
-- Name: COLUMN com_info_tb.uid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.uid IS '市场专员---引用用户表';


--
-- Name: COLUMN com_info_tb.city; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.city IS '所在城市';


--
-- Name: COLUMN com_info_tb.recom_code; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.recom_code IS '推荐码：车场停车员的帐号';


--
-- Name: COLUMN com_info_tb.etc; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.etc IS '0:不支持，1:Ibeacon 2:通道照牌 3:手机照牌 4:Pos机照牌';


--
-- Name: COLUMN com_info_tb.isnight; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.isnight IS '夜晚停车，0:支持，1不支持';


--
-- Name: COLUMN com_info_tb.isfixed; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.isfixed IS '0：未校验，1：已校验，2：申请校验，-1：一次未通过，-2：二次未通过，-3：三次未通过';


--
-- Name: COLUMN com_info_tb.iscancel; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.iscancel IS '是否在结算订单时去掉取消按钮,0:否，1是';


--
-- Name: COLUMN com_info_tb.firstprovince; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.firstprovince IS '优先识别省份';


--
-- Name: COLUMN com_info_tb.mcompany; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.mcompany IS '经营公司';


--
-- Name: COLUMN com_info_tb.record_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.record_number IS ' 备案号';


--
-- Name: COLUMN com_info_tb.epay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.epay IS '电子支付，0不支持，1支持';


--
-- Name: COLUMN com_info_tb.is_hasparker; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.is_hasparker IS '0,没有收费员在位，1有收费员在位';


--
-- Name: COLUMN com_info_tb.isview; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.isview IS '是否在地图上显示 0不显示，1显示';


--
-- Name: COLUMN com_info_tb.remarks; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.remarks IS '备注';


--
-- Name: COLUMN com_info_tb.invalid_order; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.invalid_order IS '未结算的垃圾订单数量';


--
-- Name: COLUMN com_info_tb.fixed_pass_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.fixed_pass_time IS '车场校验通过的时间';


--
-- Name: COLUMN com_info_tb.car_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.car_type IS '是否区分大小车，0:不区分，1：区分';


--
-- Name: COLUMN com_info_tb.passfree; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.passfree IS '是否允许免费结算订单，0：允许，1：不允许';


--
-- Name: COLUMN com_info_tb.activity; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.activity IS '车场活动：0 没有活动 1申请活动 2:申请通过';


--
-- Name: COLUMN com_info_tb.activity_content; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.activity_content IS '-- 活动内容';


--
-- Name: COLUMN com_info_tb.upload_uin; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.upload_uin IS '上传人';


--
-- Name: COLUMN com_info_tb.minprice_unit; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.minprice_unit IS '0（该收多少收多少）,0.5（收5毛 ）,1（收一块）';


--
-- Name: COLUMN com_info_tb.isshowepay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.isshowepay IS '是否显示直付订单，1显示，0不显示';


--
-- Name: COLUMN com_info_tb.ishidehdbutton; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.ishidehdbutton IS '-- 结算按钮（HD版）0显示  1不显示   默认0
';


--
-- Name: COLUMN com_info_tb.isautopay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.isautopay IS '车场是否支持自动支付   0:不支持，1:支持';


--
-- Name: COLUMN com_info_tb.allowance; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.allowance IS '车场补贴额';


--
-- Name: COLUMN com_info_tb.order_per; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.order_per IS ' 比例';


--
-- Name: COLUMN com_info_tb.chanid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.chanid IS '渠道编号';


--
-- Name: COLUMN com_info_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.groupid IS '集团编号';


--
-- Name: COLUMN com_info_tb.ishdmoney; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.ishdmoney IS ' 是否隐藏收费金额  0不隐藏，1隐藏';


--
-- Name: COLUMN com_info_tb.pid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.pid IS '所属车场';


--
-- Name: COLUMN com_info_tb.full_set; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.full_set IS ' 车位满进场设置  0可进  1禁止
 ';


--
-- Name: COLUMN com_info_tb.leave_set; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.leave_set IS '离场设置    0默认设置   1识别就抬杆';


--
-- Name: COLUMN com_info_tb.areaid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.areaid IS ' 区域编号';


--
-- Name: COLUMN com_info_tb.cityid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.cityid IS ' 城市编号';


--
-- Name: COLUMN com_info_tb.hotarea_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.hotarea_id IS ' 热点区域编号';


--
-- Name: COLUMN com_info_tb.empty; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.empty IS '空闲车位数';


--
-- Name: COLUMN com_info_tb.upload_union_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.upload_union_time IS '上传时间';


--
-- Name: COLUMN com_info_tb.union_state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.union_state IS '0 未上传 1已上传在使用 2已上传未审核 3已上传并禁用';


--
-- Name: COLUMN com_info_tb.ukey; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_info_tb.ukey IS '描述车场的秘钥';


--
-- Name: com_led_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_led_tb (
    id bigint NOT NULL,
    ledip character varying(50),
    ledport character varying(20),
    leduid character varying(100),
    movemode integer,
    movespeed integer,
    dwelltime bigint,
    ledcolor integer,
    showcolor integer,
    typeface integer,
    typesize integer,
    matercont character varying(500),
    passid bigint,
    width integer DEFAULT 128,
    height integer DEFAULT 32,
    type integer DEFAULT 0,
    rsport integer DEFAULT 1,
    state integer DEFAULT '-1'::integer,
    upload_time bigint,
    comid bigint DEFAULT '-1'::integer
);


ALTER TABLE com_led_tb OWNER TO tracqdev;

--
-- Name: COLUMN com_led_tb.ledip; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.ledip IS 'ip地址';


--
-- Name: COLUMN com_led_tb.ledport; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.ledport IS '端口号';


--
-- Name: COLUMN com_led_tb.leduid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.leduid IS '素材UID';


--
-- Name: COLUMN com_led_tb.movemode; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.movemode IS '移动方式:0：自适应，1：从右向左移动，2：从左向右移动，3：从下向上移动，4：从上向下移动，5：从右向左展开，6：从左向右展开，7：从下向上展开，8：从上向下展开，9：立即显示，10：从中间向两边展开，11：从两边向中间展开，12：从中间向上下展开，13：从上下向中间展开，14：闪烁，15：右百叶';


--
-- Name: COLUMN com_led_tb.movespeed; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.movespeed IS '移动速度';


--
-- Name: COLUMN com_led_tb.dwelltime; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.dwelltime IS '停留时间：0：0s，1：1s，2：2s，3：3s，4：4s，5：5s';


--
-- Name: COLUMN com_led_tb.ledcolor; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.ledcolor IS '显示屏颜色：0：单基色，1：双基色';


--
-- Name: COLUMN com_led_tb.showcolor; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.showcolor IS '颜色：0：红，1：绿，2：黄';


--
-- Name: COLUMN com_led_tb.typeface; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.typeface IS '字体：1：宋体，2：楷体，3：黑体，4：隶书，5：行书';


--
-- Name: COLUMN com_led_tb.typesize; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.typesize IS '字号：0：12×12，1：16×16，2：24×24，3：32×32，4：48×48，5：64×64，6：80×80，7：96×96';


--
-- Name: COLUMN com_led_tb.matercont; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.matercont IS '素材内容';


--
-- Name: COLUMN com_led_tb.passid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.passid IS '通道ID';


--
-- Name: COLUMN com_led_tb.width; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.width IS 'led宽';


--
-- Name: COLUMN com_led_tb.height; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.height IS 'led高';


--
-- Name: COLUMN com_led_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.type IS '0  默认   1 余位屏';


--
-- Name: COLUMN com_led_tb.rsport; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_led_tb.rsport IS ' integer DEFAULT 1, -- 转发端口  1默认: rs232-1  2:rs232-2   3:rs485';


--
-- Name: com_nfc_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_nfc_tb (
    id bigint NOT NULL,
    nfc_uuid character varying(35),
    comid bigint,
    create_time bigint,
    state bigint DEFAULT 0,
    use_times integer,
    uin bigint DEFAULT '-1'::integer,
    uid bigint DEFAULT '-1'::integer,
    update_time bigint DEFAULT 0,
    nid bigint DEFAULT 0,
    qrcode character varying,
    type integer DEFAULT 0,
    card_name character varying,
    device character varying,
    is_delete integer DEFAULT 0,
    balance numeric(10,2) DEFAULT 0,
    card_number character varying,
    tenant_id bigint DEFAULT '-1'::integer,
    group_id bigint DEFAULT '-1'::integer,
    reg_id bigint DEFAULT '-1'::integer,
    cancel_id bigint DEFAULT '-1'::integer,
    cancel_time bigint,
    activate_id bigint DEFAULT '-1'::integer,
    activate_time bigint
);


ALTER TABLE com_nfc_tb OWNER TO tracqdev;

--
-- Name: COLUMN com_nfc_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.state IS '(之前该字段表示NFC卡状态：0正常，1禁用） 0：激活（对应之前的正常） 1：注销（对应之前的禁用）  2：绑定用户(手机号) 3：开卡（此时的卡片还不能用，要激活后才可使用） 4：绑定车牌号（无手机号）';


--
-- Name: COLUMN com_nfc_tb.uin; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.uin IS '-- 车主帐号';


--
-- Name: COLUMN com_nfc_tb.uid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.uid IS '收费员编号';


--
-- Name: COLUMN com_nfc_tb.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.update_time IS '更新时间,绑定用户时间';


--
-- Name: COLUMN com_nfc_tb.nid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.nid IS '扫描NFC的二维码号';


--
-- Name: COLUMN com_nfc_tb.qrcode; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.qrcode IS '二维码';


--
-- Name: COLUMN com_nfc_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.type IS '设备类型 0：NFC  1：电子标签 2：商家卡（商家自己发行的IC卡）';


--
-- Name: COLUMN com_nfc_tb.card_name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.card_name IS '卡片名称';


--
-- Name: COLUMN com_nfc_tb.device; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.device IS '开卡设备';


--
-- Name: COLUMN com_nfc_tb.is_delete; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.is_delete IS '0：正常 1：已删除';


--
-- Name: COLUMN com_nfc_tb.balance; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.balance IS '卡片余额';


--
-- Name: COLUMN com_nfc_tb.card_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.card_number IS '卡面号（印在卡面上的编号）';


--
-- Name: COLUMN com_nfc_tb.tenant_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.tenant_id IS '城市商户编号';


--
-- Name: COLUMN com_nfc_tb.group_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.group_id IS '运营集团编号';


--
-- Name: COLUMN com_nfc_tb.reg_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.reg_id IS '开卡(入库)人编号
  ';


--
-- Name: COLUMN com_nfc_tb.cancel_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.cancel_id IS '注销人（解绑）编号';


--
-- Name: COLUMN com_nfc_tb.cancel_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.cancel_time IS '注销时间';


--
-- Name: COLUMN com_nfc_tb.activate_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.activate_id IS '激活卡片人编号';


--
-- Name: COLUMN com_nfc_tb.activate_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_nfc_tb.activate_time IS '激活时间';


--
-- Name: com_park_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_park_tb (
    id bigint NOT NULL,
    comid bigint,
    cid character varying,
    state integer DEFAULT 0,
    qid bigint,
    order_id bigint,
    dici_id integer,
    enter_time bigint,
    end_time bigint,
    address character varying,
    berthsec_id bigint DEFAULT '-1'::integer,
    create_time bigint,
    uuid character(1),
    longitude numeric(10,6),
    latitude numeric(10,6),
    is_delete integer DEFAULT 0
);


ALTER TABLE com_park_tb OWNER TO postgres;

--
-- Name: TABLE com_park_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE com_park_tb IS '车位表';


--
-- Name: COLUMN com_park_tb.cid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.cid IS '车位编号';


--
-- Name: COLUMN com_park_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.state IS '0空闲 1占用';


--
-- Name: COLUMN com_park_tb.qid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.qid IS '二维码编号';


--
-- Name: COLUMN com_park_tb.order_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.order_id IS '订单编号';


--
-- Name: COLUMN com_park_tb.dici_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.dici_id IS '地磁编号';


--
-- Name: COLUMN com_park_tb.enter_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.enter_time IS '入场时间';


--
-- Name: COLUMN com_park_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.end_time IS '出场时间';


--
-- Name: COLUMN com_park_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.address IS '地址';


--
-- Name: COLUMN com_park_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.berthsec_id IS '泊位段编号';


--
-- Name: COLUMN com_park_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.create_time IS '创建时间';


--
-- Name: COLUMN com_park_tb.uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.uuid IS '唯一编号';


--
-- Name: COLUMN com_park_tb.longitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.longitude IS '经度';


--
-- Name: COLUMN com_park_tb.latitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.latitude IS '纬度';


--
-- Name: COLUMN com_park_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_park_tb.is_delete IS '0正常，1已删除';


--
-- Name: com_parkstatus_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_parkstatus_tb (
    id bigint NOT NULL,
    comid bigint,
    total integer,
    empty integer,
    sheduled integer,
    rscheduled integer,
    internal integer,
    rinternal integer,
    ctime bigint,
    chanid bigint,
    cityid bigint
);


ALTER TABLE com_parkstatus_tb OWNER TO postgres;

--
-- Name: TABLE com_parkstatus_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE com_parkstatus_tb IS '车场实时状态表';


--
-- Name: COLUMN com_parkstatus_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.comid IS '车场编号';


--
-- Name: COLUMN com_parkstatus_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.total IS '车位总数';


--
-- Name: COLUMN com_parkstatus_tb.empty; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.empty IS '总空闲车位数';


--
-- Name: COLUMN com_parkstatus_tb.sheduled; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.sheduled IS '总可预定车位数(如无可预定车位用0表示)';


--
-- Name: COLUMN com_parkstatus_tb.rscheduled; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.rscheduled IS '空可预定车位(如无空可预定车位用0表示)';


--
-- Name: COLUMN com_parkstatus_tb.internal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.internal IS '内部总车位数量(如车位不分内外车位填0)';


--
-- Name: COLUMN com_parkstatus_tb.rinternal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.rinternal IS '内部空车位数量(如车位不分内外车位填0)';


--
-- Name: COLUMN com_parkstatus_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.ctime IS '时间戳';


--
-- Name: COLUMN com_parkstatus_tb.chanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.chanid IS '合作方号';


--
-- Name: COLUMN com_parkstatus_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_parkstatus_tb.cityid IS '城市商户号';


--
-- Name: com_pass_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_pass_tb (
    id bigint NOT NULL,
    worksite_id bigint DEFAULT '-1'::integer NOT NULL,
    passname character varying(100),
    passtype character varying(20),
    description character varying(100),
    comid bigint,
    state integer DEFAULT 0,
    month_set integer DEFAULT '-1'::integer,
    month2_set integer DEFAULT '-1'::integer,
    channel_id character varying
);


ALTER TABLE com_pass_tb OWNER TO postgres;

--
-- Name: COLUMN com_pass_tb.worksite_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.worksite_id IS '工作站ID';


--
-- Name: COLUMN com_pass_tb.passname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.passname IS '通道名称';


--
-- Name: COLUMN com_pass_tb.passtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.passtype IS '通道类型 0入口，1出口，2出入';


--
-- Name: COLUMN com_pass_tb.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.description IS '通道说明';


--
-- Name: COLUMN com_pass_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.state IS '状态 0：正常 1：禁用';


--
-- Name: COLUMN com_pass_tb.month_set; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.month_set IS '非月卡车设置   0不限制  1非月卡车禁止进入
 ';


--
-- Name: COLUMN com_pass_tb.month2_set; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.month2_set IS '月卡第二..辆车设置   0不限制  1月卡第二辆车禁止进';


--
-- Name: COLUMN com_pass_tb.channel_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pass_tb.channel_id IS '第三方通道编号';


--
-- Name: com_picturs_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_picturs_tb (
    id bigint NOT NULL,
    comid bigint,
    picurl character varying(500),
    create_time bigint
);


ALTER TABLE com_picturs_tb OWNER TO tracqdev;

--
-- Name: com_pos_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_pos_tb (
    id bigint NOT NULL,
    pda character varying,
    state integer,
    uid bigint,
    is_deleted integer,
    delete_user bigint,
    delete_time bigint,
    update_time bigint,
    update_user bigint,
    create_time bigint,
    create_user bigint,
    groupid bigint
);


ALTER TABLE com_pos_tb OWNER TO postgres;

--
-- Name: TABLE com_pos_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE com_pos_tb IS 'POS机管理';


--
-- Name: COLUMN com_pos_tb.pda; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.pda IS '设备编号';


--
-- Name: COLUMN com_pos_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.state IS '使用状态 0正常1不可用';


--
-- Name: COLUMN com_pos_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.uid IS '收费员';


--
-- Name: COLUMN com_pos_tb.is_deleted; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.is_deleted IS '是否删除';


--
-- Name: COLUMN com_pos_tb.delete_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.delete_user IS '删除人';


--
-- Name: COLUMN com_pos_tb.delete_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.delete_time IS '删除时间';


--
-- Name: COLUMN com_pos_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.update_time IS '修改时间
';


--
-- Name: COLUMN com_pos_tb.update_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.update_user IS '修改人';


--
-- Name: COLUMN com_pos_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.create_time IS '创建日期
';


--
-- Name: COLUMN com_pos_tb.create_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.create_user IS '创建人';


--
-- Name: COLUMN com_pos_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_pos_tb.groupid IS '运营集团';


--
-- Name: com_praise_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_praise_tb (
    id bigint NOT NULL,
    comid bigint,
    uin bigint,
    praise integer,
    create_time bigint
);


ALTER TABLE com_praise_tb OWNER TO tracqdev;

--
-- Name: COLUMN com_praise_tb.praise; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN com_praise_tb.praise IS '0:贬，1：赞';


--
-- Name: com_temp_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE com_temp_tb (
    id bigint NOT NULL,
    next_time bigint
);


ALTER TABLE com_temp_tb OWNER TO tracqdev;

--
-- Name: com_worksite_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE com_worksite_tb (
    id bigint NOT NULL,
    comid bigint NOT NULL,
    worksite_name character varying(100),
    description character varying(100),
    net_type integer DEFAULT 0,
    host_name character varying(100),
    host_memory character varying(100),
    host_internal character varying(100),
    upload_time bigint,
    state integer DEFAULT 0
);


ALTER TABLE com_worksite_tb OWNER TO postgres;

--
-- Name: COLUMN com_worksite_tb.worksite_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_worksite_tb.worksite_name IS '工作站名称';


--
-- Name: COLUMN com_worksite_tb.net_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_worksite_tb.net_type IS '工作站网络环境，0：流量，1：宽带';


--
-- Name: COLUMN com_worksite_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN com_worksite_tb.state IS '状态 0：正常 1：禁用';


--
-- Name: confirm_order_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE confirm_order_tb (
    id integer NOT NULL,
    event_id character varying,
    car_number character varying,
    upload_time bigint,
    channel_id character varying,
    state integer DEFAULT 0,
    comid character varying,
    groupid character varying
);


ALTER TABLE confirm_order_tb OWNER TO postgres;

--
-- Name: COLUMN confirm_order_tb.event_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN confirm_order_tb.event_id IS '事件编号(在收费系统事件编号唯一，不可重复)';


--
-- Name: COLUMN confirm_order_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN confirm_order_tb.car_number IS '车牌号码';


--
-- Name: COLUMN confirm_order_tb.channel_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN confirm_order_tb.channel_id IS '通道编号';


--
-- Name: COLUMN confirm_order_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN confirm_order_tb.state IS '状态 0-待处理 1-已处理';


--
-- Name: COLUMN confirm_order_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN confirm_order_tb.comid IS '车场编号';


--
-- Name: consume_anlysis_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE consume_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    wx_total bigint,
    zfb_total bigint,
    wxp_total bigint
);


ALTER TABLE consume_anlysis_tb OWNER TO tracqdev;

--
-- Name: COLUMN consume_anlysis_tb.wx_total; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN consume_anlysis_tb.wx_total IS '微信交易用户新增数';


--
-- Name: COLUMN consume_anlysis_tb.zfb_total; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN consume_anlysis_tb.zfb_total IS '支付宝交易用户新增数量';


--
-- Name: COLUMN consume_anlysis_tb.wxp_total; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN consume_anlysis_tb.wxp_total IS '微信公众号交易用户新增数量';


--
-- Name: dataauth_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE dataauth_tb (
    id bigint NOT NULL,
    authorizee bigint,
    authorizer bigint,
    department_id bigint
);


ALTER TABLE dataauth_tb OWNER TO tracqdev;

--
-- Name: TABLE dataauth_tb; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON TABLE dataauth_tb IS '数据权限表';


--
-- Name: COLUMN dataauth_tb.authorizee; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN dataauth_tb.authorizee IS '被授权人id';


--
-- Name: COLUMN dataauth_tb.authorizer; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN dataauth_tb.authorizer IS '授权人id';


--
-- Name: COLUMN dataauth_tb.department_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN dataauth_tb.department_id IS '部门id';


--
-- Name: department_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE department_tb (
    id bigint NOT NULL,
    nid bigint,
    pid bigint,
    dname character varying(200),
    state integer DEFAULT 0,
    isparent boolean DEFAULT false
);


ALTER TABLE department_tb OWNER TO tracqdev;

--
-- Name: COLUMN department_tb.nid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN department_tb.nid IS '节点ID';


--
-- Name: COLUMN department_tb.pid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN department_tb.pid IS '父节点';


--
-- Name: COLUMN department_tb.dname; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN department_tb.dname IS '节点名称';


--
-- Name: COLUMN department_tb.isparent; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN department_tb.isparent IS '是否是父节点';


--
-- Name: device_fault_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE device_fault_tb (
    id bigint NOT NULL,
    sensor_id bigint DEFAULT '-1'::integer,
    site_id bigint DEFAULT '-1'::integer,
    induce_id bigint DEFAULT '-1'::integer,
    create_time bigint,
    end_time bigint
);


ALTER TABLE device_fault_tb OWNER TO postgres;

--
-- Name: TABLE device_fault_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE device_fault_tb IS '车检器、基站、诱导屏掉线历史记录表';


--
-- Name: COLUMN device_fault_tb.sensor_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN device_fault_tb.sensor_id IS '车检器编号';


--
-- Name: COLUMN device_fault_tb.site_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN device_fault_tb.site_id IS '基站编号';


--
-- Name: COLUMN device_fault_tb.induce_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN device_fault_tb.induce_id IS '诱导屏编号';


--
-- Name: COLUMN device_fault_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN device_fault_tb.create_time IS '掉线时间 ';


--
-- Name: COLUMN device_fault_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN device_fault_tb.end_time IS '恢复时间';


--
-- Name: dici_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE dici_tb (
    id bigint NOT NULL,
    code character varying,
    comid integer,
    state integer DEFAULT 0,
    serid character varying,
    did character varying,
    operate_time bigint,
    battery numeric(5,1),
    magnetism numeric(5,1),
    beart_time bigint,
    site_id bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE dici_tb OWNER TO postgres;

--
-- Name: COLUMN dici_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.state IS '0空闲 1占用';


--
-- Name: COLUMN dici_tb.serid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.serid IS '地磁主机ID';


--
-- Name: COLUMN dici_tb.did; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.did IS '车检器唯一编号';


--
-- Name: COLUMN dici_tb.operate_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.operate_time IS ' 操作时间';


--
-- Name: COLUMN dici_tb.battery; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.battery IS '电池电压';


--
-- Name: COLUMN dici_tb.magnetism; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.magnetism IS '电容电压';


--
-- Name: COLUMN dici_tb.beart_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.beart_time IS '心跳时间';


--
-- Name: COLUMN dici_tb.site_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.site_id IS '车检器所属的基站编号';


--
-- Name: COLUMN dici_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dici_tb.is_delete IS '状态 0：正常 1：删除';


--
-- Name: seq_dictionary_detail_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dictionary_detail_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_dictionary_detail_tb OWNER TO postgres;

--
-- Name: dictionary_detail_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE dictionary_detail_tb (
    id bigint DEFAULT nextval('seq_dictionary_detail_tb'::regclass) NOT NULL,
    item_id integer,
    subitemdesc character varying,
    sub_item_id integer
);


ALTER TABLE dictionary_detail_tb OWNER TO postgres;

--
-- Name: TABLE dictionary_detail_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE dictionary_detail_tb IS '字典详细记录表';


--
-- Name: COLUMN dictionary_detail_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_detail_tb.id IS '主键ID';


--
-- Name: COLUMN dictionary_detail_tb.item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_detail_tb.item_id IS '车场定义字典类型ID';


--
-- Name: COLUMN dictionary_detail_tb.subitemdesc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_detail_tb.subitemdesc IS '车场定义子项目详细说明';


--
-- Name: COLUMN dictionary_detail_tb.sub_item_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_detail_tb.sub_item_id IS '数据编号';


--
-- Name: seq_dictionary_item_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dictionary_item_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_dictionary_item_tb OWNER TO postgres;

--
-- Name: dictionary_item_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE dictionary_item_tb (
    id bigint DEFAULT nextval('seq_dictionary_item_tb'::regclass) NOT NULL,
    park_id integer,
    itemdesc character varying,
    item_name character varying
);


ALTER TABLE dictionary_item_tb OWNER TO postgres;

--
-- Name: COLUMN dictionary_item_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_item_tb.id IS '主键id';


--
-- Name: COLUMN dictionary_item_tb.itemdesc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_item_tb.itemdesc IS '车场定义的字典类别说明';


--
-- Name: COLUMN dictionary_item_tb.item_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN dictionary_item_tb.item_name IS '名称';


--
-- Name: directpay_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE directpay_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    total bigint
);


ALTER TABLE directpay_anlysis_tb OWNER TO postgres;

--
-- Name: no_payment_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE no_payment_tb (
    id bigint NOT NULL,
    create_time bigint,
    end_time bigint,
    order_id bigint,
    car_number character varying(20),
    state integer DEFAULT 0,
    uin bigint DEFAULT '-1'::integer,
    comid bigint,
    total numeric(10,2) DEFAULT 0,
    uid bigint,
    pursue_time bigint,
    act_total numeric(10,2),
    pursue_uid bigint DEFAULT '-1'::integer,
    pursue_comid bigint DEFAULT '-1'::integer,
    pursue_berthseg_id bigint DEFAULT '-1'::integer,
    pursue_berth_id bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    prepay numeric(10,2) DEFAULT 0,
    is_delete integer DEFAULT 0,
    pursue_groupid bigint DEFAULT '-1'::integer
);


ALTER TABLE no_payment_tb OWNER TO postgres;

--
-- Name: TABLE no_payment_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE no_payment_tb IS '逃单表';


--
-- Name: COLUMN no_payment_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.car_number IS '车牌号';


--
-- Name: COLUMN no_payment_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.state IS '状态 0未处理，1已处理';


--
-- Name: COLUMN no_payment_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.uin IS '车主帐号';


--
-- Name: COLUMN no_payment_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.comid IS '逃单所在车场编号';


--
-- Name: COLUMN no_payment_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.total IS '逃单金额（应收金额）';


--
-- Name: COLUMN no_payment_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.uid IS '置为逃单的收费员编号（出场收费员）';


--
-- Name: COLUMN no_payment_tb.pursue_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_time IS '追缴逃单时间';


--
-- Name: COLUMN no_payment_tb.act_total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.act_total IS '追缴金额（实收金额）';


--
-- Name: COLUMN no_payment_tb.pursue_uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_uid IS '追缴收费员';


--
-- Name: COLUMN no_payment_tb.pursue_comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_comid IS '追缴订单的车场';


--
-- Name: COLUMN no_payment_tb.pursue_berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_berthseg_id IS ' 追缴订单所在的泊位段编号';


--
-- Name: COLUMN no_payment_tb.pursue_berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_berth_id IS '追缴订单所在的泊位编号';


--
-- Name: COLUMN no_payment_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.berthseg_id IS '逃单所在泊位段编号';


--
-- Name: COLUMN no_payment_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.berth_id IS ' 逃单所在泊位编号';


--
-- Name: COLUMN no_payment_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.groupid IS '逃单所在的运营集团';


--
-- Name: COLUMN no_payment_tb.prepay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.prepay IS '逃单已预付的金额';


--
-- Name: COLUMN no_payment_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.is_delete IS '状态 0： 正常 1：删除';


--
-- Name: COLUMN no_payment_tb.pursue_groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN no_payment_tb.pursue_groupid IS '追缴订单所在的运营集团编号';


--
-- Name: order_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE order_tb (
    id bigint NOT NULL,
    create_time bigint,
    comid bigint NOT NULL,
    uin bigint NOT NULL,
    total numeric(30,2) DEFAULT 0.0,
    state integer DEFAULT 0,
    end_time bigint,
    auto_pay integer DEFAULT 0,
    pay_type integer DEFAULT '-1'::integer,
    nfc_uuid character varying(36),
    uid bigint DEFAULT '-1'::integer,
    car_number character varying(50),
    imei character varying(50),
    pid integer DEFAULT '-1'::integer,
    pre_state integer DEFAULT 0,
    type integer DEFAULT 0,
    need_sync integer DEFAULT 0,
    ishd integer DEFAULT 0,
    isclick integer DEFAULT 0,
    prepaid numeric(10,2) DEFAULT 0,
    prepaid_pay_time bigint,
    berthnumber bigint,
    berthsec_id bigint,
    groupid bigint,
    out_uid bigint DEFAULT '-1'::integer,
    is_union_user integer DEFAULT '-1'::integer,
    car_type_zh character varying,
    order_id_local character varying,
    duration bigint,
    pay_type_en character varying,
    freereasons_local character varying,
    islocked smallint DEFAULT 0,
    lock_key character varying,
    in_passid character varying,
    out_passid character varying,
    amount_receivable numeric(10,2) DEFAULT 0.0,
    electronic_prepay numeric(10,2) DEFAULT 0.0,
    electronic_pay numeric(10,2) DEFAULT 0.0,
    cash_prepay numeric(10,2) DEFAULT 0.0,
    cash_pay numeric(10,2) DEFAULT 0.0,
    reduce_amount numeric(10,2) DEFAULT 0.0,
    c_type character varying,
    car_type character varying,
    freereasons character varying,
    remark character varying,
    carpic_table_name character varying,
    work_station_uuid character varying
);


ALTER TABLE order_tb OWNER TO tracqdev;

--
-- Name: COLUMN order_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.state IS '0未支付 1已支付 2:逃单';


--
-- Name: COLUMN order_tb.auto_pay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.auto_pay IS '0:正常结算，1：进场异常结算的订单，2：更正过车牌的订单，3:补录来车生成的订单';


--
-- Name: COLUMN order_tb.pay_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.pay_type IS '0:帐户支付,1:现金支付,2:手机支付 3:包月 4:现金预支付 5：银联卡(中央预支付，后面废弃) 6：商家卡(中央预支付，后面废弃) 8：免费放行 9：刷卡';


--
-- Name: COLUMN order_tb.uid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.uid IS '收费员帐号';


--
-- Name: COLUMN order_tb.car_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.car_number IS '车牌';


--
-- Name: COLUMN order_tb.imei; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.imei IS '手机串号';


--
-- Name: COLUMN order_tb.pid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.pid IS '计费方式：0按时(0.5/15分钟)，1按次（12小时内10元,前1/30min，后每小时1元）';


--
-- Name: COLUMN order_tb.pre_state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.pre_state IS '0:默认状态 1：车主预支付中 2：车主预支付中并且收费员刷卡 3：预支付完成';


--
-- Name: COLUMN order_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.type IS '类型：0普通订单，1极速通，3本地化订单 4本地服务器订单 5本地生成线上结算订单';


--
-- Name: COLUMN order_tb.need_sync; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.need_sync IS '预支付订单需要同步到线下  0:不需要  1:需要  2同步完成   3本地切换到线上线上生成的需要  4:线上结算的都需要同步下去';


--
-- Name: COLUMN order_tb.ishd; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.ishd IS '0否 1是不显示';


--
-- Name: COLUMN order_tb.isclick; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.isclick IS '0系统结算，1手动结算';


--
-- Name: COLUMN order_tb.prepaid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.prepaid IS '预付金额';


--
-- Name: COLUMN order_tb.prepaid_pay_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.prepaid_pay_time IS '预支付时间';


--
-- Name: COLUMN order_tb.berthnumber; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.berthnumber IS '泊位号';


--
-- Name: COLUMN order_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.berthsec_id IS '泊位段编号';


--
-- Name: COLUMN order_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.groupid IS '所属集团编号';


--
-- Name: COLUMN order_tb.out_uid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.out_uid IS '出场收费员';


--
-- Name: COLUMN order_tb.is_union_user; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.is_union_user IS '0不是 1是 ';


--
-- Name: COLUMN order_tb.car_type_zh; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.car_type_zh IS '适配车场的各种车辆类型信息记录';


--
-- Name: COLUMN order_tb.order_id_local; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.order_id_local IS '记录车场上传订单的编号';


--
-- Name: COLUMN order_tb.duration; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.duration IS '适配车场记录车辆停车时长信息';


--
-- Name: COLUMN order_tb.pay_type_en; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.pay_type_en IS '适配车场车辆的缴费类型，进行记录';


--
-- Name: COLUMN order_tb.freereasons_local; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.freereasons_local IS '适配车场车辆免费停车原因';


--
-- Name: COLUMN order_tb.islocked; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.islocked IS '锁车状态: 0未锁定 1已锁定 2锁定中 3锁定失败 4解锁中 5解锁失败';


--
-- Name: COLUMN order_tb.lock_key; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.lock_key IS '锁车密码';


--
-- Name: COLUMN order_tb.in_passid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.in_passid IS '入场通道编号';


--
-- Name: COLUMN order_tb.out_passid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.out_passid IS '出场通道编号';


--
-- Name: COLUMN order_tb.amount_receivable; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.amount_receivable IS '应收金额';


--
-- Name: COLUMN order_tb.electronic_pay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.electronic_pay IS '电子结算';


--
-- Name: COLUMN order_tb.cash_prepay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.cash_prepay IS '现金预付';


--
-- Name: COLUMN order_tb.cash_pay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.cash_pay IS '现金结算';


--
-- Name: COLUMN order_tb.reduce_amount; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.reduce_amount IS '减免金额';


--
-- Name: COLUMN order_tb.c_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.c_type IS '进场类型';


--
-- Name: COLUMN order_tb.car_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.car_type IS '车型';


--
-- Name: COLUMN order_tb.freereasons; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.freereasons IS '订单上传免费原因';


--
-- Name: COLUMN order_tb.remark; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.remark IS '车场出场信息备注';


--
-- Name: COLUMN order_tb.carpic_table_name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.carpic_table_name IS '记录订单图片在mongodb中存储的表名';


--
-- Name: COLUMN order_tb.work_station_uuid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_tb.work_station_uuid IS '车场收费系统岗亭/工作站唯一标识';


--
-- Name: user_info_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE user_info_tb (
    id bigint NOT NULL,
    nickname character varying(50),
    password character varying(100),
    strid character varying(64),
    sex bigint DEFAULT 1,
    email character varying(60),
    phone character varying(40),
    mobile character varying(20),
    address character varying(100),
    resume character varying(1024),
    reg_time bigint,
    logon_time bigint,
    logoff_time bigint,
    online_flag bigint,
    comid bigint,
    auth_flag bigint,
    balance numeric(10,2) DEFAULT 0,
    state integer DEFAULT 0,
    recom_code bigint,
    md5pass character varying(32),
    cid character varying(100),
    department_id bigint,
    media integer DEFAULT 0,
    isview integer DEFAULT 1,
    collector_pics integer DEFAULT 0,
    collector_auditor bigint,
    imei character(100),
    client_type integer DEFAULT 0,
    version character(20),
    wxp_openid character varying,
    wx_name character varying,
    wx_imgurl character varying,
    shop_id bigint,
    credit_limit numeric(10,2) DEFAULT 0,
    is_auth integer DEFAULT 0,
    reward_score numeric(10,2) DEFAULT 0,
    firstorderquota numeric(10,2) DEFAULT 8,
    rewardquota numeric(10,2) DEFAULT 2,
    recommendquota numeric(10,2) DEFAULT 5,
    ticketquota numeric(8,2) DEFAULT '-1'::integer,
    hx_name character varying,
    hx_pass character varying,
    role_id bigint DEFAULT '-1'::integer,
    order_hid integer DEFAULT 0,
    chanid bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    creator_id bigint,
    cityid bigint DEFAULT '-1'::integer,
    union_state integer DEFAULT 0,
    upload_union_time bigint,
    member_id character varying,
    operate_type integer,
    is_sync integer DEFAULT 0 NOT NULL,
    update_time bigint,
    user_id character varying
);


ALTER TABLE user_info_tb OWNER TO tracqdev;

--
-- Name: COLUMN user_info_tb.online_flag; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.online_flag IS '21:离线，22:在线，23:在岗，(泊车员状态)24:接车，25:取车，26:小休';


--
-- Name: COLUMN user_info_tb.auth_flag; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.auth_flag IS '16：巡查员 17：开卡员';


--
-- Name: COLUMN user_info_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.state IS '0:正常，1：禁用，2：待审核，3：待补充，4：待跟进，5无价值';


--
-- Name: COLUMN user_info_tb.recom_code; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.recom_code IS '推荐码，车场停车员的帐号';


--
-- Name: COLUMN user_info_tb.cid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.cid IS '用户消息帐号，用于消息推送';


--
-- Name: COLUMN user_info_tb.department_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.department_id IS '部门ID';


--
-- Name: COLUMN user_info_tb.media; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.media IS '媒体来源';


--
-- Name: COLUMN user_info_tb.isview; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.isview IS '是否可以收费，0不可以，1可以收费';


--
-- Name: COLUMN user_info_tb.collector_pics; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.collector_pics IS '收费员上传的图片个数';


--
-- Name: COLUMN user_info_tb.collector_auditor; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.collector_auditor IS '审核人员';


--
-- Name: COLUMN user_info_tb.imei; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.imei IS '手机串号';


--
-- Name: COLUMN user_info_tb.client_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.client_type IS '0:android,1:ios';


--
-- Name: COLUMN user_info_tb.version; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.version IS '版本号';


--
-- Name: COLUMN user_info_tb.wxp_openid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.wxp_openid IS '微信公众号openid';


--
-- Name: COLUMN user_info_tb.shop_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.shop_id IS '商户的id';


--
-- Name: COLUMN user_info_tb.credit_limit; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.credit_limit IS '信用额度';


--
-- Name: COLUMN user_info_tb.is_auth; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.is_auth IS '是否认证通过，0否，1是';


--
-- Name: COLUMN user_info_tb.reward_score; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.reward_score IS '打赏积分';


--
-- Name: COLUMN user_info_tb.firstorderquota; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.firstorderquota IS '首单额度';


--
-- Name: COLUMN user_info_tb.rewardquota; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.rewardquota IS '打赏最高限券';


--
-- Name: COLUMN user_info_tb.recommendquota; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.recommendquota IS ' 推荐奖额度   默认5块';


--
-- Name: COLUMN user_info_tb.ticketquota; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.ticketquota IS '-- 默认-1  不限制';


--
-- Name: COLUMN user_info_tb.hx_name; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.hx_name IS '环信账户';


--
-- Name: COLUMN user_info_tb.hx_pass; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.hx_pass IS '环信密码';


--
-- Name: COLUMN user_info_tb.role_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.role_id IS '角色ID';


--
-- Name: COLUMN user_info_tb.order_hid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.order_hid IS '0否，1设置';


--
-- Name: COLUMN user_info_tb.chanid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.chanid IS '渠道编号';


--
-- Name: COLUMN user_info_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.groupid IS '集团id';


--
-- Name: COLUMN user_info_tb.creator_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.creator_id IS '创建者编号';


--
-- Name: COLUMN user_info_tb.cityid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.cityid IS '城市商户编号';


--
-- Name: COLUMN user_info_tb.union_state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.union_state IS '上传到泊链状态：0 未上传 1已上传并使用 2已上传未审核 3已上传并禁用';


--
-- Name: COLUMN user_info_tb.upload_union_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.upload_union_time IS '上传时间';


--
-- Name: COLUMN user_info_tb.member_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.member_id IS '停车场会员编号记录';


--
-- Name: COLUMN user_info_tb.operate_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.operate_type IS '记录操作类型1：添加，2：修改，3：删除';


--
-- Name: COLUMN user_info_tb.is_sync; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_info_tb.is_sync IS '是否已同步，0：未同步，1已同步';


--
-- Name: esc_record; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW esc_record AS
 SELECT p.id,
    p.create_time,
    p.end_time,
    p.order_id,
    p.car_number,
    p.state,
    p.uin,
    p.comid,
    p.total,
    p.uid,
    p.pursue_time,
    p.act_total,
    p.pursue_uid,
    o.prepaid,
    (p.total - o.prepaid) AS overdue,
    o.berthsec_id,
    c.cid,
    d.nickname,
    o.groupid
   FROM (((no_payment_tb p
     LEFT JOIN user_info_tb d ON ((d.id = p.pursue_uid)))
     LEFT JOIN order_tb o ON ((p.order_id = o.id)))
     LEFT JOIN com_park_tb c ON ((c.id = o.berthnumber)));


ALTER TABLE esc_record OWNER TO postgres;

--
-- Name: flygame_pool_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE flygame_pool_tb (
    id bigint NOT NULL,
    ptype integer,
    money numeric(10,2),
    tid bigint,
    aid bigint,
    count integer,
    ctime bigint
);


ALTER TABLE flygame_pool_tb OWNER TO postgres;

--
-- Name: TABLE flygame_pool_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE flygame_pool_tb IS '打飞机游戏门奖池';


--
-- Name: COLUMN flygame_pool_tb.ptype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_pool_tb.ptype IS '奖券类型：0停车宝停车券 1车主停车券 2余额券 3广告券 4清空福袋 5翻倍福袋 ';


--
-- Name: COLUMN flygame_pool_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_pool_tb.money IS '金额';


--
-- Name: COLUMN flygame_pool_tb.tid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_pool_tb.tid IS '车主停车券编号';


--
-- Name: COLUMN flygame_pool_tb.aid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_pool_tb.aid IS 'advert_tb 广告表编号';


--
-- Name: COLUMN flygame_pool_tb.count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_pool_tb.count IS '数量';


--
-- Name: flygame_score_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE flygame_score_anlysis_tb (
    id bigint NOT NULL,
    uin bigint,
    ctime bigint,
    db_bullet_count integer,
    db_bullet_score numeric(10,2),
    empty_bullet_count integer,
    empty_bullet_score numeric(10,2),
    gift_count integer,
    gift_score numeric(10,2),
    balance_count integer,
    balance_score numeric(10,2),
    ticket_count integer,
    ticket_score numeric(10,2),
    second_count integer,
    second_score numeric(10,2),
    tid bigint DEFAULT '-1'::integer,
    cloud_count integer DEFAULT 0,
    cloud_score numeric(10,2) DEFAULT 0,
    crow_count integer DEFAULT 0,
    crow_score numeric(10,2) DEFAULT 0,
    bets_double_count integer DEFAULT 0,
    bets_double_score numeric(10,2) DEFAULT 0,
    bets_halve_count integer DEFAULT 0,
    bets_halve_score numeric(10,2) DEFAULT 0,
    score_double_count integer DEFAULT 0,
    score_double_score numeric(10,2) DEFAULT 0,
    score_halve_count integer DEFAULT 0,
    score_halve_score numeric(10,2) DEFAULT 0,
    catapult_full_count integer DEFAULT 0,
    catapult_full_score numeric(10,2) DEFAULT 0,
    catapult_halve_count integer DEFAULT 0,
    catapult_halve_score numeric(10,2) DEFAULT 0,
    float_score numeric(10,2) DEFAULT 0
);


ALTER TABLE flygame_score_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE flygame_score_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE flygame_score_anlysis_tb IS '打灰机游戏统计表，按天统计积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.db_bullet_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.db_bullet_count IS '双倍弹数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.db_bullet_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.db_bullet_score IS '双倍弹积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.empty_bullet_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.empty_bullet_count IS '清空弹数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.empty_bullet_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.empty_bullet_score IS '清空弹积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.gift_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.gift_count IS '礼品券数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.gift_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.gift_score IS '礼品券积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.balance_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.balance_count IS '余额券数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.balance_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.balance_score IS '余额券积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.ticket_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.ticket_count IS '停车券数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.ticket_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.ticket_score IS '停车券积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.second_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.second_count IS '第二关入场券数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.second_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.second_score IS '第二关入场券积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.tid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.tid IS '停车券编号';


--
-- Name: COLUMN flygame_score_anlysis_tb.cloud_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.cloud_count IS '打掉云数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.cloud_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.cloud_score IS '云积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.crow_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.crow_count IS ' 打掉乌鸦数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.crow_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.crow_score IS '乌鸦积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.bets_double_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.bets_double_count IS '子弹翻倍福袋数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.bets_double_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.bets_double_score IS '子弹翻倍福袋积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.bets_halve_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.bets_halve_count IS '子弹减半道具数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.bets_halve_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.bets_halve_score IS '子弹减半道具积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.score_double_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.score_double_count IS '积分翻倍福袋数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.score_double_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.score_double_score IS '积分翻倍福袋积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.score_halve_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.score_halve_count IS '积分减半道具数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.score_halve_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.score_halve_score IS '积分减半道具积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.catapult_full_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.catapult_full_count IS '弹弓满血福袋数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.catapult_full_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.catapult_full_score IS '弹弓满血福袋积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.catapult_halve_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.catapult_halve_count IS '弹弓血量减半道具数量';


--
-- Name: COLUMN flygame_score_anlysis_tb.catapult_halve_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.catapult_halve_score IS '弹弓血量减半道具积分';


--
-- Name: COLUMN flygame_score_anlysis_tb.float_score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_anlysis_tb.float_score IS '浮动积分，记录翻倍或减半';


--
-- Name: flygame_score_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE flygame_score_tb (
    id bigint NOT NULL,
    uin bigint,
    fgid bigint,
    remark character varying,
    ctime bigint,
    ptype integer,
    money numeric(10,2),
    is_operate integer DEFAULT 0
);


ALTER TABLE flygame_score_tb OWNER TO postgres;

--
-- Name: COLUMN flygame_score_tb.fgid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_tb.fgid IS 'flygame_pool_tb  游戏券池编号';


--
-- Name: COLUMN flygame_score_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_tb.remark IS '说明';


--
-- Name: COLUMN flygame_score_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_tb.ctime IS '时间';


--
-- Name: COLUMN flygame_score_tb.ptype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_tb.ptype IS '奖券类型：0停车宝停车券 1车主停车券 2余额券 3广告券 4清空福袋 5翻倍福袋 6第二关入口 7子弹翻倍福袋 8子弹减半道具 9积分翻倍福袋 10积分减半道具 11弹弓满血福袋 12弹弓血量减半道具';


--
-- Name: COLUMN flygame_score_tb.is_operate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN flygame_score_tb.is_operate IS '是否分享或加为好机友 0否，1是';


--
-- Name: free_reasons_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE free_reasons_tb (
    id bigint NOT NULL,
    name character varying,
    comid bigint,
    sort integer
);


ALTER TABLE free_reasons_tb OWNER TO postgres;

--
-- Name: TABLE free_reasons_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE free_reasons_tb IS '免费原因表 ';


--
-- Name: COLUMN free_reasons_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN free_reasons_tb.name IS '免费原因';


--
-- Name: COLUMN free_reasons_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN free_reasons_tb.comid IS '车场id';


--
-- Name: COLUMN free_reasons_tb.sort; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN free_reasons_tb.sort IS '排序';


--
-- Name: group_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE group_account_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    amount numeric(10,2) DEFAULT 0,
    create_time bigint,
    uid bigint DEFAULT '-1'::integer,
    type integer,
    source integer,
    orderid bigint DEFAULT '-1'::integer,
    withdraw_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    remark character varying,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE group_account_tb OWNER TO postgres;

--
-- Name: TABLE group_account_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE group_account_tb IS '运营集团账户表';


--
-- Name: COLUMN group_account_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.comid IS '车场编号';


--
-- Name: COLUMN group_account_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.amount IS '金额';


--
-- Name: COLUMN group_account_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.create_time IS '记录生成时间';


--
-- Name: COLUMN group_account_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.uid IS '收费员账号';


--
-- Name: COLUMN group_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.type IS '类型 0：充值 1：支出';


--
-- Name: COLUMN group_account_tb.source; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.source IS '来源 0：停车费（非预付），1：提现，2：追缴停车费，3：预付停车费，4：预付退款（预付），5：预付补缴（预付金额不足）';


--
-- Name: COLUMN group_account_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.orderid IS '订单编号';


--
-- Name: COLUMN group_account_tb.withdraw_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.withdraw_id IS '提现记录编号';


--
-- Name: COLUMN group_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.groupid IS '运营集团账号';


--
-- Name: COLUMN group_account_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.remark IS '备注';


--
-- Name: COLUMN group_account_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.berthseg_id IS '产生这笔流水所在的泊位段编号
  ';


--
-- Name: COLUMN group_account_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.berth_id IS '产生这笔流水所在的泊位编号
  ';


--
-- Name: COLUMN group_account_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN group_account_tb.is_delete IS '账目流水状态 0：正常 1：删除';


--
-- Name: hasparker_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE hasparker_anlysis_tb (
    id bigint NOT NULL,
    anlysis_time bigint,
    total bigint
);


ALTER TABLE hasparker_anlysis_tb OWNER TO postgres;

--
-- Name: COLUMN hasparker_anlysis_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN hasparker_anlysis_tb.total IS '收费员在岗并且可支付车场的数量
';


--
-- Name: ibeacon_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE ibeacon_tb (
    id bigint NOT NULL,
    buy_time bigint,
    ibcid character varying(35),
    state bigint DEFAULT 0
);


ALTER TABLE ibeacon_tb OWNER TO tracqdev;

--
-- Name: induce_ad_history_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE induce_ad_history_tb (
    id bigint NOT NULL,
    induce_id bigint DEFAULT '-1'::integer,
    create_time bigint,
    begin_time bigint,
    end_time bigint,
    ad character varying,
    creator_id bigint DEFAULT '-1'::integer
);


ALTER TABLE induce_ad_history_tb OWNER TO postgres;

--
-- Name: TABLE induce_ad_history_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE induce_ad_history_tb IS '诱导屏广告历史记录表';


--
-- Name: COLUMN induce_ad_history_tb.induce_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.induce_id IS '诱导屏编号';


--
-- Name: COLUMN induce_ad_history_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.create_time IS '创建时间';


--
-- Name: COLUMN induce_ad_history_tb.begin_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.begin_time IS '开始时间';


--
-- Name: COLUMN induce_ad_history_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.end_time IS '结束时间';


--
-- Name: COLUMN induce_ad_history_tb.ad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.ad IS '广告内容';


--
-- Name: COLUMN induce_ad_history_tb.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_history_tb.creator_id IS '发布人';


--
-- Name: induce_ad_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE induce_ad_tb (
    id bigint NOT NULL,
    induce_id bigint DEFAULT '-1'::integer,
    ad character varying,
    begin_time bigint,
    end_time bigint,
    isactive integer DEFAULT 0,
    create_time bigint,
    update_time bigint,
    publish_time bigint,
    updator_id bigint DEFAULT '-1'::integer
);


ALTER TABLE induce_ad_tb OWNER TO postgres;

--
-- Name: TABLE induce_ad_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE induce_ad_tb IS '诱导屏广告对应表';


--
-- Name: COLUMN induce_ad_tb.induce_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.induce_id IS '诱导屏编号';


--
-- Name: COLUMN induce_ad_tb.ad; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.ad IS '广告';


--
-- Name: COLUMN induce_ad_tb.begin_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.begin_time IS '生效时间';


--
-- Name: COLUMN induce_ad_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.end_time IS '结束时间';


--
-- Name: COLUMN induce_ad_tb.isactive; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.isactive IS '是否已发布 0：未发布 1：已发布';


--
-- Name: COLUMN induce_ad_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.create_time IS '创建时间';


--
-- Name: COLUMN induce_ad_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.update_time IS '更新时间';


--
-- Name: COLUMN induce_ad_tb.publish_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.publish_time IS '信息发布时间';


--
-- Name: COLUMN induce_ad_tb.updator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_ad_tb.updator_id IS '操作人编号';


--
-- Name: induce_module_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE induce_module_tb (
    id bigint NOT NULL,
    induce_id bigint DEFAULT '-1'::integer,
    is_delete bigint DEFAULT 0,
    name character varying,
    create_time bigint,
    sort integer DEFAULT 0
);


ALTER TABLE induce_module_tb OWNER TO postgres;

--
-- Name: TABLE induce_module_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE induce_module_tb IS '诱导屏显示区域表';


--
-- Name: COLUMN induce_module_tb.induce_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_module_tb.induce_id IS '诱导屏编号';


--
-- Name: COLUMN induce_module_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_module_tb.is_delete IS '是否删除 0：正常 1：已删除';


--
-- Name: COLUMN induce_module_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_module_tb.name IS '显示区域的名称';


--
-- Name: COLUMN induce_module_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_module_tb.create_time IS '创建时间';


--
-- Name: COLUMN induce_module_tb.sort; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_module_tb.sort IS '显示区域排序，越小的越靠前';


--
-- Name: induce_park_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE induce_park_tb (
    id bigint NOT NULL,
    induce_id bigint DEFAULT '-1'::integer,
    comid bigint DEFAULT '-1'::integer,
    module_id bigint DEFAULT '-1'::integer,
    sort integer DEFAULT 0
);


ALTER TABLE induce_park_tb OWNER TO postgres;

--
-- Name: TABLE induce_park_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE induce_park_tb IS '诱导屏车场对应表';


--
-- Name: COLUMN induce_park_tb.induce_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_park_tb.induce_id IS '诱导屏编号';


--
-- Name: COLUMN induce_park_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_park_tb.comid IS '车场编号';


--
-- Name: COLUMN induce_park_tb.module_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_park_tb.module_id IS '诱导屏显示区域编号';


--
-- Name: COLUMN induce_park_tb.sort; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_park_tb.sort IS '排序字段';


--
-- Name: induce_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE induce_tb (
    id bigint NOT NULL,
    name character varying,
    type integer DEFAULT 0,
    longitude numeric(10,6),
    latitude numeric(10,6),
    address character varying,
    cityid bigint DEFAULT '-1'::integer,
    state integer DEFAULT 0,
    create_time bigint,
    update_time bigint,
    creator_id bigint DEFAULT '-1'::integer,
    updator_id bigint DEFAULT '-1'::integer,
    deletor_id bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0,
    did character varying,
    heartbeat_time bigint
);


ALTER TABLE induce_tb OWNER TO postgres;

--
-- Name: TABLE induce_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE induce_tb IS '诱导屏参数表';


--
-- Name: COLUMN induce_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.name IS '诱导屏名称';


--
-- Name: COLUMN induce_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.type IS '诱导类型 0：一级诱导 1：二级诱导 2：三级诱导';


--
-- Name: COLUMN induce_tb.longitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.longitude IS '经度';


--
-- Name: COLUMN induce_tb.latitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.latitude IS '纬度';


--
-- Name: COLUMN induce_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.address IS '地址';


--
-- Name: COLUMN induce_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.cityid IS '城市商户编号';


--
-- Name: COLUMN induce_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.state IS '状态 0：正常 1：故障';


--
-- Name: COLUMN induce_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.create_time IS '创建时间';


--
-- Name: COLUMN induce_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.update_time IS '更新时间';


--
-- Name: COLUMN induce_tb.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.creator_id IS '创建者编号';


--
-- Name: COLUMN induce_tb.updator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.updator_id IS '修改者编号';


--
-- Name: COLUMN induce_tb.deletor_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.deletor_id IS '删除者编号';


--
-- Name: COLUMN induce_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.is_delete IS '0：正常 1：删除';


--
-- Name: COLUMN induce_tb.did; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.did IS ' 硬件唯一编号';


--
-- Name: COLUMN induce_tb.heartbeat_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN induce_tb.heartbeat_time IS '最新一次心跳时间';


--
-- Name: inspect_event_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE inspect_event_tb (
    id bigint NOT NULL,
    create_time bigint,
    end_time bigint,
    type integer DEFAULT '-1'::integer,
    berthsec_id bigint,
    uid bigint DEFAULT '-1'::integer,
    inspectid bigint DEFAULT '-1'::integer,
    state integer,
    remark character varying(100),
    event_pic character varying,
    detailtype integer DEFAULT '-1'::integer,
    dici_id bigint DEFAULT '-1'::integer
);


ALTER TABLE inspect_event_tb OWNER TO postgres;

--
-- Name: TABLE inspect_event_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE inspect_event_tb IS '巡查事件表';


--
-- Name: COLUMN inspect_event_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.berthsec_id IS '泊位段编号';


--
-- Name: COLUMN inspect_event_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.uid IS '收费员';


--
-- Name: COLUMN inspect_event_tb.inspectid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.inspectid IS '巡查员id';


--
-- Name: COLUMN inspect_event_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.state IS '状态  0待处理  1已处理';


--
-- Name: COLUMN inspect_event_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.remark IS ' -- 备注';


--
-- Name: COLUMN inspect_event_tb.event_pic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.event_pic IS '时间处理图片';


--
-- Name: COLUMN inspect_event_tb.detailtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.detailtype IS '任务详情';


--
-- Name: COLUMN inspect_event_tb.dici_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN inspect_event_tb.dici_id IS '泊位编号（com_park_tb的id）';


--
-- Name: inspect_group_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE inspect_group_tb (
    id bigint NOT NULL,
    uuid character(36),
    inspectgroup_name character(50),
    company_id bigint,
    create_time bigint,
    update_time bigint,
    is_active integer,
    chanid bigint
);


ALTER TABLE inspect_group_tb OWNER TO postgres;

--
-- Name: lift_rod_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE lift_rod_tb (
    id bigint NOT NULL,
    ctime bigint,
    uin bigint,
    comid bigint,
    img character varying,
    reason integer DEFAULT 0,
    liftrod_id character varying,
    update_time bigint,
    in_channel_id character varying,
    out_channel_id character varying,
    name character varying,
    car_number character varying,
    order_id character varying,
    resume character varying,
    pass_id character varying,
    liftpic_table_name character varying
);


ALTER TABLE lift_rod_tb OWNER TO postgres;

--
-- Name: COLUMN lift_rod_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.uin IS '收费员账户';


--
-- Name: COLUMN lift_rod_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.comid IS '车场编号';


--
-- Name: COLUMN lift_rod_tb.img; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.img IS '图片地址';


--
-- Name: COLUMN lift_rod_tb.liftrod_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.liftrod_id IS '车场抬杆记录id';


--
-- Name: COLUMN lift_rod_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.update_time IS '修改时间';


--
-- Name: COLUMN lift_rod_tb.in_channel_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.in_channel_id IS '入场通道编号';


--
-- Name: COLUMN lift_rod_tb.out_channel_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.out_channel_id IS '出场通道编号';


--
-- Name: COLUMN lift_rod_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.name IS '车主姓名';


--
-- Name: COLUMN lift_rod_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.car_number IS '车牌编号';


--
-- Name: COLUMN lift_rod_tb.order_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.order_id IS '车场订单编号';


--
-- Name: COLUMN lift_rod_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.resume IS '其他原因';


--
-- Name: COLUMN lift_rod_tb.pass_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.pass_id IS '通道名称';


--
-- Name: COLUMN lift_rod_tb.liftpic_table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lift_rod_tb.liftpic_table_name IS '记录图片存储mongodb的表名';


--
-- Name: seq_liftrod_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_liftrod_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_liftrod_info_tb OWNER TO postgres;

--
-- Name: liftrod_info_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE liftrod_info_tb (
    id bigint DEFAULT nextval('seq_liftrod_info_tb'::regclass) NOT NULL,
    channel_id character varying,
    channel_name character varying,
    operate bigint,
    state bigint,
    comid character varying
);


ALTER TABLE liftrod_info_tb OWNER TO postgres;

--
-- Name: COLUMN liftrod_info_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.id IS '主键id';


--
-- Name: COLUMN liftrod_info_tb.channel_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.channel_id IS '记录车场的通道编号';


--
-- Name: COLUMN liftrod_info_tb.channel_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.channel_name IS '记录车场的通道名称';


--
-- Name: COLUMN liftrod_info_tb.operate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.operate IS '操作抬杆的类型：0抬杆1落杆2暂停';


--
-- Name: COLUMN liftrod_info_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.state IS '发送操作抬杆消息后车场执行结果返回';


--
-- Name: COLUMN liftrod_info_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN liftrod_info_tb.comid IS '收费系统车场编号';


--
-- Name: local_info_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE local_info_tb (
    id bigint NOT NULL,
    comid bigint,
    version integer,
    cpu character varying(20),
    memory character varying(20),
    harddisk character varying(20),
    is_update integer DEFAULT 0,
    create_time bigint,
    limit_time bigint,
    secret character varying,
    remark character varying(200)
);


ALTER TABLE local_info_tb OWNER TO postgres;

--
-- Name: COLUMN local_info_tb.is_update; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN local_info_tb.is_update IS '是否允许更新  0不可以   1 可以';


--
-- Name: COLUMN local_info_tb.limit_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN local_info_tb.limit_time IS '本地服务器到期时间';


--
-- Name: COLUMN local_info_tb.secret; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN local_info_tb.secret IS '本地服务器车场密钥  校验是不是来自本地服务器';


--
-- Name: COLUMN local_info_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN local_info_tb.remark IS '备注';


--
-- Name: logo_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE logo_tb (
    id bigint NOT NULL,
    type integer DEFAULT 0,
    orgid bigint DEFAULT '-1'::integer,
    url_fir character varying,
    url_sec character varying,
    name character varying
);


ALTER TABLE logo_tb OWNER TO postgres;

--
-- Name: COLUMN logo_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN logo_tb.type IS '0：渠道 ';


--
-- Name: COLUMN logo_tb.orgid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN logo_tb.orgid IS '组织编号';


--
-- Name: COLUMN logo_tb.url_fir; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN logo_tb.url_fir IS '图片url';


--
-- Name: COLUMN logo_tb.url_sec; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN logo_tb.url_sec IS '图片url';


--
-- Name: lottery_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE lottery_tb (
    id bigint NOT NULL,
    uin bigint,
    orderid bigint,
    create_time bigint,
    lottery_result integer
);


ALTER TABLE lottery_tb OWNER TO postgres;

--
-- Name: TABLE lottery_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE lottery_tb IS '抽奖表';


--
-- Name: COLUMN lottery_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lottery_tb.uin IS '车主账户';


--
-- Name: COLUMN lottery_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lottery_tb.orderid IS '订单编号';


--
-- Name: COLUMN lottery_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lottery_tb.create_time IS '创建时间';


--
-- Name: COLUMN lottery_tb.lottery_result; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN lottery_tb.lottery_result IS '抽奖结果：0:一元余额，1：二元停车券,2:三元余额,3:未中奖';


--
-- Name: message_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE message_tb (
    id bigint NOT NULL,
    type integer,
    create_time bigint,
    state integer,
    content character varying(1000),
    uin bigint
);


ALTER TABLE message_tb OWNER TO tracqdev;

--
-- Name: COLUMN message_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN message_tb.type IS '0:收费员，1:车主，2：停车场系统管理员，3：总管理员';


--
-- Name: COLUMN message_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN message_tb.state IS '0:未读，1：已读';


--
-- Name: COLUMN message_tb.content; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN message_tb.content IS '内容 ';


--
-- Name: mobile_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE mobile_tb (
    id bigint NOT NULL,
    imei character varying(25),
    num character varying(15),
    mode character varying(100),
    price numeric(10,2),
    create_time bigint,
    editor character varying(50),
    distru_date bigint,
    uid bigint,
    comid bigint,
    uin bigint,
    money_3 numeric(10,2),
    order_3 integer,
    device_code character varying,
    device_auth integer,
    auth_user bigint,
    auth_time bigint
);


ALTER TABLE mobile_tb OWNER TO tracqdev;

--
-- Name: COLUMN mobile_tb.device_code; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN mobile_tb.device_code IS '设备编号';


--
-- Name: COLUMN mobile_tb.device_auth; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN mobile_tb.device_auth IS '设备是否认证 0未认证 1已认证';


--
-- Name: COLUMN mobile_tb.auth_user; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN mobile_tb.auth_user IS '认证人';


--
-- Name: COLUMN mobile_tb.auth_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN mobile_tb.auth_time IS '认证时间';


--
-- Name: mobilepay_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE mobilepay_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    comid bigint,
    mobilepay_count integer
);


ALTER TABLE mobilepay_anlysis_tb OWNER TO postgres;

--
-- Name: money_record_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE money_record_tb (
    id bigint NOT NULL,
    comid bigint,
    create_time bigint,
    amount numeric(15,2),
    uin bigint,
    type integer DEFAULT '-1'::integer,
    remark character varying(500),
    pay_type integer DEFAULT 0
);


ALTER TABLE money_record_tb OWNER TO tracqdev;

--
-- Name: COLUMN money_record_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN money_record_tb.type IS '0:充值，1：消费，2：提现';


--
-- Name: COLUMN money_record_tb.remark; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN money_record_tb.remark IS '说明';


--
-- Name: COLUMN money_record_tb.pay_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN money_record_tb.pay_type IS '0余额，1支付宝，2微信，3网银，4余额+支付宝,5余额+微信,6余额+网银';


--
-- Name: money_set_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE money_set_tb (
    id bigint NOT NULL,
    comid bigint,
    uin bigint,
    mtype integer DEFAULT 0,
    giveto integer DEFAULT 0
);


ALTER TABLE money_set_tb OWNER TO postgres;

--
-- Name: COLUMN money_set_tb.mtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN money_set_tb.mtype IS ' 0:停车费,1:预订费,2:停车宝返现,3停车宝周奖';


--
-- Name: COLUMN money_set_tb.giveto; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN money_set_tb.giveto IS '0:公司账户，1：个人账户 ，2：运营集团账户';


--
-- Name: monitor_info_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE monitor_info_tb (
    id bigint NOT NULL,
    net_status integer,
    is_show integer DEFAULT 1,
    show_order integer,
    play_src character varying,
    comid character varying,
    groupid character varying,
    channel_id bigint,
    name character varying,
    state integer DEFAULT 1
);


ALTER TABLE monitor_info_tb OWNER TO postgres;

--
-- Name: COLUMN monitor_info_tb.net_status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.net_status IS '网络状态 1 正常 0 异常';


--
-- Name: COLUMN monitor_info_tb.is_show; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.is_show IS '是否显示 0-隐藏 1-显示';


--
-- Name: COLUMN monitor_info_tb.show_order; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.show_order IS '显示顺序（排序）';


--
-- Name: COLUMN monitor_info_tb.play_src; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.play_src IS '播放地址';


--
-- Name: COLUMN monitor_info_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.comid IS '车场编号';


--
-- Name: COLUMN monitor_info_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN monitor_info_tb.state IS '状态 1-正常 0-删除';


--
-- Name: online_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE online_anlysis_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    collector_online bigint DEFAULT 0,
    inspector_online bigint DEFAULT 0,
    create_time bigint,
    groupid bigint DEFAULT '-1'::integer,
    cityid bigint DEFAULT '-1'::integer
);


ALTER TABLE online_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE online_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE online_anlysis_tb IS '收费员、巡查员在线数统计';


--
-- Name: COLUMN online_anlysis_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.comid IS '车场编号';


--
-- Name: COLUMN online_anlysis_tb.collector_online; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.collector_online IS '收费员在线数';


--
-- Name: COLUMN online_anlysis_tb.inspector_online; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.inspector_online IS '巡查员在线数';


--
-- Name: COLUMN online_anlysis_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.create_time IS '统计时间';


--
-- Name: COLUMN online_anlysis_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.groupid IS '运营集团编号';


--
-- Name: COLUMN online_anlysis_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN online_anlysis_tb.cityid IS '城市商户编号';


--
-- Name: order_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE order_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    order_count integer
);


ALTER TABLE order_anlysis_tb OWNER TO postgres;

--
-- Name: order_attach_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE order_attach_tb (
    id bigint NOT NULL,
    settle_type integer DEFAULT 0,
    change_carnumber integer DEFAULT 0,
    add_carnumber integer DEFAULT 0,
    old_carnumber character varying(10),
    order_id bigint
);


ALTER TABLE order_attach_tb OWNER TO tracqdev;

--
-- Name: COLUMN order_attach_tb.settle_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_attach_tb.settle_type IS '0:正常结算，1：异常结算';


--
-- Name: COLUMN order_attach_tb.change_carnumber; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_attach_tb.change_carnumber IS '0:未更正过车牌，1：更正过车牌';


--
-- Name: COLUMN order_attach_tb.add_carnumber; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_attach_tb.add_carnumber IS '0:未补录车牌，1：补录车牌';


--
-- Name: COLUMN order_attach_tb.old_carnumber; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_attach_tb.old_carnumber IS '更正车牌之前的车牌';


--
-- Name: COLUMN order_attach_tb.order_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_attach_tb.order_id IS '订单id';


--
-- Name: order_log_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE order_log_tb (
    id bigint NOT NULL,
    order_id bigint,
    comid bigint,
    uin bigint,
    create_time bigint,
    log character varying(1000),
    type integer
);


ALTER TABLE order_log_tb OWNER TO tracqdev;

--
-- Name: COLUMN order_log_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_log_tb.type IS '0:创建订单，1：结算订单,2:优惠，3:现金收费';


--
-- Name: order_message_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE order_message_tb (
    id bigint NOT NULL,
    car_number character varying(20),
    create_time bigint,
    orderid bigint,
    already_read integer DEFAULT 0,
    uin bigint,
    order_total numeric(10,2),
    state integer DEFAULT 0,
    comid bigint,
    is_sale integer DEFAULT 0,
    btime bigint,
    etime bigint,
    duartion character varying(100),
    message_type integer DEFAULT 0
);


ALTER TABLE order_message_tb OWNER TO tracqdev;

--
-- Name: COLUMN order_message_tb.car_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_message_tb.car_number IS '车牌号';


--
-- Name: COLUMN order_message_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_message_tb.state IS ' -- 0:未结算，1：待支付，2：支付完成, -1:支付失败 -2余额不足';


--
-- Name: COLUMN order_message_tb.message_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN order_message_tb.message_type IS '-- 0:订单消息，1：车位预定消息 2:充值购买产品 3直付订单消息（收费员用） 4Ibeacon解绑消息(收费员)  9Ibeacon支付消息(车主)';


--
-- Name: order_reserve_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE order_reserve_tb (
    id bigint NOT NULL,
    comid bigint NOT NULL,
    uin bigint NOT NULL,
    create_time bigint,
    limit_time bigint,
    state integer,
    car_number character varying(50),
    phone character varying(40),
    pay_type integer,
    prepaid numeric(10,2),
    prepaid_pay_time bigint,
    type integer,
    order_id bigint,
    arrive_time bigint,
    plot_no character varying
);


ALTER TABLE order_reserve_tb OWNER TO postgres;

--
-- Name: TABLE order_reserve_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE order_reserve_tb IS '预约订单表';


--
-- Name: COLUMN order_reserve_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.comid IS '车场编号';


--
-- Name: COLUMN order_reserve_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.uin IS '车主编号';


--
-- Name: COLUMN order_reserve_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.create_time IS '预约开始时间';


--
-- Name: COLUMN order_reserve_tb.limit_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.limit_time IS '最晚到达时时间';


--
-- Name: COLUMN order_reserve_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.state IS '预约状态 0:欠费 1:已补缴 2:未入场 3:已取消';


--
-- Name: COLUMN order_reserve_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.car_number IS '车牌号';


--
-- Name: COLUMN order_reserve_tb.phone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.phone IS '手机号';


--
-- Name: COLUMN order_reserve_tb.pay_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.pay_type IS '支付类型';


--
-- Name: COLUMN order_reserve_tb.prepaid_pay_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.prepaid_pay_time IS '预约支付时间';


--
-- Name: COLUMN order_reserve_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.type IS '预约类型 0:车位预约 1：充电桩预约';


--
-- Name: COLUMN order_reserve_tb.arrive_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.arrive_time IS '预计到达时间';


--
-- Name: COLUMN order_reserve_tb.plot_no; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_reserve_tb.plot_no IS '车位号';


--
-- Name: order_ticket_detail_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE order_ticket_detail_tb (
    id bigint NOT NULL,
    otid bigint,
    uin bigint,
    amount integer,
    ttime bigint,
    type integer,
    btype integer DEFAULT 0,
    ticketid bigint
);


ALTER TABLE order_ticket_detail_tb OWNER TO postgres;

--
-- Name: COLUMN order_ticket_detail_tb.otid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.otid IS '订单红包编号，对应order_ticket_tb表ID';


--
-- Name: COLUMN order_ticket_detail_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.uin IS '领券人';


--
-- Name: COLUMN order_ticket_detail_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.amount IS '领取金额';


--
-- Name: COLUMN order_ticket_detail_tb.ttime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.ttime IS '领取时间';


--
-- Name: COLUMN order_ticket_detail_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.type IS '0:老用户，1:新用户';


--
-- Name: COLUMN order_ticket_detail_tb.btype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.btype IS ' 类型 0普通券，1微信打折券，2:车场专用券 3:车主认证1246专享红包（顺序发放）4 充值100返大礼包 5打飞机红包';


--
-- Name: COLUMN order_ticket_detail_tb.ticketid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_detail_tb.ticketid IS '停车券编号';


--
-- Name: order_ticket_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE order_ticket_tb (
    id bigint NOT NULL,
    uin bigint,
    order_id bigint,
    money integer,
    bnum integer,
    ctime bigint,
    btime bigint,
    etime bigint,
    exptime bigint,
    bwords character varying,
    type integer DEFAULT 0
);


ALTER TABLE order_ticket_tb OWNER TO postgres;

--
-- Name: COLUMN order_ticket_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.uin IS '发券人';


--
-- Name: COLUMN order_ticket_tb.order_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.order_id IS '订单编号';


--
-- Name: COLUMN order_ticket_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.money IS '金额 为负数时，每张金额为这个负数的相反数';


--
-- Name: COLUMN order_ticket_tb.bnum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.bnum IS '红包数';


--
-- Name: COLUMN order_ticket_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.ctime IS '新建时间';


--
-- Name: COLUMN order_ticket_tb.btime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.btime IS '开始领券时间';


--
-- Name: COLUMN order_ticket_tb.etime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.etime IS '结束领券时间';


--
-- Name: COLUMN order_ticket_tb.exptime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.exptime IS '过期时间';


--
-- Name: COLUMN order_ticket_tb.bwords; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.bwords IS '红包祝福语';


--
-- Name: COLUMN order_ticket_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN order_ticket_tb.type IS ' 类型 0普通券，1微信打折券，2:车场专用券 3:车主认证1246专享红包（顺序发放）4 充值100返大礼包 5打飞机红包 6战绩分享 不限数';


--
-- Name: org_area_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE org_area_tb (
    id bigint NOT NULL,
    name character varying,
    state integer DEFAULT 0,
    groupid bigint DEFAULT '-1'::integer,
    create_time bigint
);


ALTER TABLE org_area_tb OWNER TO postgres;

--
-- Name: COLUMN org_area_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_area_tb.name IS '区域名称';


--
-- Name: COLUMN org_area_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_area_tb.state IS '状态 0：正常 1：禁用';


--
-- Name: COLUMN org_area_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_area_tb.groupid IS '所属运营集团编号';


--
-- Name: COLUMN org_area_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_area_tb.create_time IS '创建时间';


--
-- Name: org_channel_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE org_channel_tb (
    id bigint NOT NULL,
    name character varying,
    state integer DEFAULT 0,
    create_time bigint,
    logo_url character varying
);


ALTER TABLE org_channel_tb OWNER TO postgres;

--
-- Name: COLUMN org_channel_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_channel_tb.name IS '名称';


--
-- Name: COLUMN org_channel_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_channel_tb.state IS '0:正常 1禁用';


--
-- Name: COLUMN org_channel_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_channel_tb.create_time IS '创建时间';


--
-- Name: COLUMN org_channel_tb.logo_url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_channel_tb.logo_url IS 'logo地址';


--
-- Name: org_city_merchants; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE org_city_merchants (
    id bigint NOT NULL,
    ctime bigint,
    name character varying,
    state integer DEFAULT 0,
    balance numeric(10,2) DEFAULT 0,
    gps character varying,
    address character varying,
    is_group_pursue smallint DEFAULT 0,
    is_inpark_incity integer DEFAULT 1,
    union_id character varying,
    ukey character varying
);


ALTER TABLE org_city_merchants OWNER TO postgres;

--
-- Name: TABLE org_city_merchants; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE org_city_merchants IS '城市商户表';


--
-- Name: COLUMN org_city_merchants.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.name IS '名称';


--
-- Name: COLUMN org_city_merchants.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.state IS '0:正常 1：禁用';


--
-- Name: COLUMN org_city_merchants.balance; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.balance IS '余额';


--
-- Name: COLUMN org_city_merchants.gps; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.gps IS '位置';


--
-- Name: COLUMN org_city_merchants.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.address IS '地理位置';


--
-- Name: COLUMN org_city_merchants.is_group_pursue; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.is_group_pursue IS '是否能跨集团追缴订单 0：不可以 1：可以';


--
-- Name: COLUMN org_city_merchants.is_inpark_incity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_city_merchants.is_inpark_incity IS '同一车牌可否在城市内重复入场 0不可以 1可以';


--
-- Name: org_group_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE org_group_tb (
    id bigint NOT NULL,
    state integer DEFAULT 0,
    name character varying,
    chanid bigint DEFAULT '-1'::integer,
    create_time bigint,
    cityid bigint DEFAULT '-1'::integer,
    type integer DEFAULT 0,
    balance numeric(10,2) DEFAULT 0,
    longitude numeric(10,6),
    latitude numeric(10,6),
    address character varying,
    serverid character varying
);


ALTER TABLE org_group_tb OWNER TO postgres;

--
-- Name: COLUMN org_group_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.state IS '0：正常 1：删除';


--
-- Name: COLUMN org_group_tb.chanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.chanid IS '渠道id';


--
-- Name: COLUMN org_group_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.cityid IS '城市商户编号';


--
-- Name: COLUMN org_group_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.type IS '公司属性 0：普通运营公司 1：充电桩运营公司 2：自行车运营公司';


--
-- Name: COLUMN org_group_tb.balance; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.balance IS ' 余额';


--
-- Name: COLUMN org_group_tb.longitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.longitude IS '经度';


--
-- Name: COLUMN org_group_tb.latitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.latitude IS '纬度';


--
-- Name: COLUMN org_group_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN org_group_tb.address IS '地址';


--
-- Name: park_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE park_account_tb (
    id bigint NOT NULL,
    comid bigint,
    amount numeric(10,2),
    type integer,
    create_time bigint,
    remark character varying(100),
    uid bigint DEFAULT '-1'::integer,
    source integer,
    orderid bigint DEFAULT '-1'::integer,
    withdraw_id bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE park_account_tb OWNER TO postgres;

--
-- Name: COLUMN park_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.type IS '0充值 1提现，2返现（已废弃）';


--
-- Name: COLUMN park_account_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.uid IS '收费员账户';


--
-- Name: COLUMN park_account_tb.source; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.source IS '来源，0：停车费（非预付），1：返现，2：泊车费，3：推荐奖，4：补交现金（已废弃），5：车场提现，6：停车宝排行榜周奖，7：追缴停车费，8：车主预付停车费，9：预付退款（预付超额），10：预付补缴（预付金额不足） 11：订单退款';


--
-- Name: COLUMN park_account_tb.withdraw_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.withdraw_id IS '提现记录编号';


--
-- Name: COLUMN park_account_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.berthseg_id IS '产生这笔流水所在的泊位段编号
';


--
-- Name: COLUMN park_account_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.berth_id IS '产生这笔流水所在的泊位编号
';


--
-- Name: COLUMN park_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.groupid IS '运营集团账号';


--
-- Name: COLUMN park_account_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_account_tb.is_delete IS '账目流水状态 0：正常 1：删除
   ';


--
-- Name: park_anlysis_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE park_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    comid bigint,
    share_count integer DEFAULT 0,
    used_count integer DEFAULT 0,
    month_used_count integer DEFAULT 0,
    time_used_count integer DEFAULT 0
);


ALTER TABLE park_anlysis_tb OWNER TO tracqdev;

--
-- Name: COLUMN park_anlysis_tb.month_used_count; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN park_anlysis_tb.month_used_count IS '月卡车占用数';


--
-- Name: COLUMN park_anlysis_tb.time_used_count; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN park_anlysis_tb.time_used_count IS '时租车占用数';


--
-- Name: park_charge_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE park_charge_tb (
    id bigint NOT NULL,
    comid bigint,
    amount numeric(10,2) DEFAULT 0,
    uin bigint,
    type integer DEFAULT 1,
    create_time bigint
);


ALTER TABLE park_charge_tb OWNER TO tracqdev;

--
-- Name: COLUMN park_charge_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN park_charge_tb.type IS '0充值,1消费,2提现';


--
-- Name: park_log_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE park_log_tb (
    id bigint NOT NULL,
    type character varying,
    content character varying,
    operate_time bigint,
    operate_user character varying,
    remark character varying,
    log_id character varying,
    park_id bigint
);


ALTER TABLE park_log_tb OWNER TO postgres;

--
-- Name: COLUMN park_log_tb.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.id IS '主键id';


--
-- Name: COLUMN park_log_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.type IS '类型';


--
-- Name: COLUMN park_log_tb.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.content IS '内容';


--
-- Name: COLUMN park_log_tb.operate_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.operate_time IS '操作时间';


--
-- Name: COLUMN park_log_tb.operate_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.operate_user IS '操作员';


--
-- Name: COLUMN park_log_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.remark IS '备注';


--
-- Name: COLUMN park_log_tb.log_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.log_id IS '车场日志编号';


--
-- Name: COLUMN park_log_tb.park_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_log_tb.park_id IS '记录对应的车场编号';


--
-- Name: park_ticket_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE park_ticket_tb (
    id bigint,
    comid bigint,
    tnumber integer,
    money numeric(8,2),
    exptime integer,
    haveget integer
);


ALTER TABLE park_ticket_tb OWNER TO postgres;

--
-- Name: TABLE park_ticket_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE park_ticket_tb IS '车场专用停车券表';


--
-- Name: COLUMN park_ticket_tb.tnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_ticket_tb.tnumber IS '数量/每天';


--
-- Name: COLUMN park_ticket_tb.exptime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_ticket_tb.exptime IS '有有效期(天)';


--
-- Name: COLUMN park_ticket_tb.haveget; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_ticket_tb.haveget IS '已领数量';


--
-- Name: park_token_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE park_token_tb (
    id bigint NOT NULL,
    park_id character varying,
    token character varying,
    login_time bigint,
    beat_time bigint,
    server_ip character varying,
    source_ip character varying,
    local_id character varying
);


ALTER TABLE park_token_tb OWNER TO postgres;

--
-- Name: COLUMN park_token_tb.server_ip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_token_tb.server_ip IS '所在服务器IP';


--
-- Name: COLUMN park_token_tb.source_ip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_token_tb.source_ip IS '客户端IP';


--
-- Name: COLUMN park_token_tb.local_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_token_tb.local_id IS '收费终端编号，支持一个车场有多个收费系统登录';


--
-- Name: park_verify_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE park_verify_tb (
    id bigint NOT NULL,
    comid bigint,
    uin bigint,
    isname integer,
    islocal integer,
    ispay integer,
    ctime bigint,
    isresume integer
);


ALTER TABLE park_verify_tb OWNER TO postgres;

--
-- Name: TABLE park_verify_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE park_verify_tb IS '车场审核表';


--
-- Name: COLUMN park_verify_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.uin IS '审核人--车主';


--
-- Name: COLUMN park_verify_tb.isname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.isname IS '0不准确，1准确';


--
-- Name: COLUMN park_verify_tb.islocal; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.islocal IS '位置是否准确，0不准确，1准确';


--
-- Name: COLUMN park_verify_tb.ispay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.ispay IS '收费是否准确 0不正确，1正确';


--
-- Name: COLUMN park_verify_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.ctime IS '新建日期';


--
-- Name: COLUMN park_verify_tb.isresume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN park_verify_tb.isresume IS '描述是否正确 0不正确，1正确 ';


--
-- Name: parkuser_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_account_tb (
    id bigint NOT NULL,
    uin bigint,
    amount numeric(10,2),
    type integer,
    create_time bigint,
    remark character varying(100),
    target integer DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    withdraw_id bigint DEFAULT '-1'::integer,
    comid bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE parkuser_account_tb OWNER TO postgres;

--
-- Name: COLUMN parkuser_account_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.uin IS ' 收费员登陆账号';


--
-- Name: COLUMN parkuser_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.type IS '0:充值，1提现';


--
-- Name: COLUMN parkuser_account_tb.target; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.target IS '目标(来源或去处)：0：银行卡（提现），1：支付宝（提现），2：微信（提现），3：停车宝，4：车主付停车费（非预付）或者打赏收费员，5：追缴停车费，6：车主预付停车费，7：预付退款（预付超额），8：预付补缴（预付金额不足）';


--
-- Name: COLUMN parkuser_account_tb.withdraw_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.withdraw_id IS ' 提现记录编号';


--
-- Name: COLUMN parkuser_account_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.comid IS '产生这笔流水所在的车场编号
  ';


--
-- Name: COLUMN parkuser_account_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.berthseg_id IS '产生这笔流水所在的泊位段编号';


--
-- Name: COLUMN parkuser_account_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.berth_id IS '产生这笔流水所在的泊位编号';


--
-- Name: COLUMN parkuser_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.groupid IS '运营集团账号';


--
-- Name: COLUMN parkuser_account_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_account_tb.is_delete IS '账目流水状态 0：正常 1：删除
   ';


--
-- Name: parkuser_cash_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_cash_tb (
    id bigint NOT NULL,
    uin bigint,
    amount numeric(10,2) DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    type integer DEFAULT 0,
    create_time bigint,
    ctype integer DEFAULT 0,
    target integer DEFAULT 0,
    card_account_id bigint DEFAULT '-1'::integer,
    comid bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    berth_id bigint,
    groupid bigint DEFAULT '-1'::integer,
    is_delete integer DEFAULT 0
);


ALTER TABLE parkuser_cash_tb OWNER TO postgres;

--
-- Name: COLUMN parkuser_cash_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.uin IS '收费员账号';


--
-- Name: COLUMN parkuser_cash_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.amount IS '现金金额';


--
-- Name: COLUMN parkuser_cash_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.orderid IS '订单id';


--
-- Name: COLUMN parkuser_cash_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.type IS '0:岗亭收费 1：中央预支付收费 2：卡片操作';


--
-- Name: COLUMN parkuser_cash_tb.ctype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.ctype IS '0：收入，1：支出';


--
-- Name: COLUMN parkuser_cash_tb.target; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.target IS '（该字段不适用type=1）0：停车费（非预付），1：预付停车费，2：预付退款（预付超额），3：预付补缴（预付不足），4：追缴停车费 5：卡片充值 6：卡片注销';


--
-- Name: COLUMN parkuser_cash_tb.card_account_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.card_account_id IS '卡片充值流水编号';


--
-- Name: COLUMN parkuser_cash_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.comid IS ' 产生这笔流水所在的车场编号(索引)';


--
-- Name: COLUMN parkuser_cash_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.berthseg_id IS ' 产生这笔流水所在的泊位段编号(索引)';


--
-- Name: COLUMN parkuser_cash_tb.berth_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.berth_id IS '产生这笔流水所在的泊位编号(索引)';


--
-- Name: COLUMN parkuser_cash_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.groupid IS '运营集团账号(索引)';


--
-- Name: COLUMN parkuser_cash_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_cash_tb.is_delete IS ' 账目流水状态 0：正常 1：删除';


--
-- Name: parkuser_comment_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_comment_tb (
    id bigint NOT NULL,
    uid bigint,
    uin bigint,
    ctime bigint,
    comments character varying,
    order_id bigint
);


ALTER TABLE parkuser_comment_tb OWNER TO postgres;

--
-- Name: TABLE parkuser_comment_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE parkuser_comment_tb IS '评论收费员表（20150612）';


--
-- Name: parkuser_income_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_income_anlysis_tb (
    id bigint NOT NULL,
    uin bigint DEFAULT '-1'::integer,
    prepay_cash numeric(10,2) DEFAULT 0,
    add_cash numeric(10,2) DEFAULT 0,
    refund_cash numeric(10,2) DEFAULT 0,
    pursue_cash numeric(10,2) DEFAULT 0,
    pfee_cash numeric(10,2) DEFAULT 0,
    prepay_epay numeric(10,2) DEFAULT 0,
    add_epay numeric(10,2) DEFAULT 0,
    refund_epay numeric(10,2) DEFAULT 0,
    pursue_epay numeric(10,2) DEFAULT 0,
    pfee_epay numeric(10,2) DEFAULT 0,
    escape numeric(10,2) DEFAULT 0,
    prepay_escape numeric(10,2) DEFAULT 0,
    sensor_fee numeric(10,2) DEFAULT 0,
    create_time bigint DEFAULT '-1'::integer,
    prepay_card numeric(10,2) DEFAULT 0,
    add_card numeric(10,2) DEFAULT 0,
    refund_card numeric(10,2) DEFAULT 0,
    pursue_card numeric(10,2) DEFAULT 0,
    pfee_card numeric(10,2) DEFAULT 0,
    type integer DEFAULT 0,
    charge_card_cash numeric(10,2) DEFAULT 0,
    return_card_count integer DEFAULT 0,
    return_card_fee numeric(10,2) DEFAULT 0,
    act_card_count integer DEFAULT 0,
    act_card_fee numeric(10,2) DEFAULT 0,
    reg_card_count integer DEFAULT 0,
    reg_card_fee numeric(10,2) DEFAULT 0,
    bind_card_count integer DEFAULT 0
);


ALTER TABLE parkuser_income_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE parkuser_income_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE parkuser_income_anlysis_tb IS '每日统计收费员收入';


--
-- Name: COLUMN parkuser_income_anlysis_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.uin IS '主键（收费员账号、泊位编号、车场编号、运营集团编号）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.prepay_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.prepay_cash IS '现金预支付';


--
-- Name: COLUMN parkuser_income_anlysis_tb.add_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.add_cash IS '现金补缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.refund_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.refund_cash IS '现金预支付退款';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pursue_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pursue_cash IS '现金追缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pfee_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pfee_cash IS '现金停车费（非预付）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.prepay_epay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.prepay_epay IS '电子支付预支付';


--
-- Name: COLUMN parkuser_income_anlysis_tb.add_epay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.add_epay IS '电子支付预付补缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.refund_epay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.refund_epay IS '电子支付预付退款';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pursue_epay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pursue_epay IS '电子支付追缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pfee_epay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pfee_epay IS '电子停车费（非预付）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.escape; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.escape IS '逃单未追缴的停车费';


--
-- Name: COLUMN parkuser_income_anlysis_tb.prepay_escape; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.prepay_escape IS '逃单未追缴的订单已预缴的金额';


--
-- Name: COLUMN parkuser_income_anlysis_tb.sensor_fee; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.sensor_fee IS '车检器停车费';


--
-- Name: COLUMN parkuser_income_anlysis_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.create_time IS '统计时间';


--
-- Name: COLUMN parkuser_income_anlysis_tb.prepay_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.prepay_card IS '刷卡预支付';


--
-- Name: COLUMN parkuser_income_anlysis_tb.add_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.add_card IS '刷卡补缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.refund_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.refund_card IS '刷卡预支付退款';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pursue_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pursue_card IS '刷卡追缴';


--
-- Name: COLUMN parkuser_income_anlysis_tb.pfee_card; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.pfee_card IS '刷卡停车费（非预付）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.type IS '0：收费员 1：泊位 2：车场 3：运营集团';


--
-- Name: COLUMN parkuser_income_anlysis_tb.charge_card_cash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.charge_card_cash IS '卡片现金充值金额';


--
-- Name: COLUMN parkuser_income_anlysis_tb.return_card_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.return_card_count IS '注销卡片数量';


--
-- Name: COLUMN parkuser_income_anlysis_tb.return_card_fee; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.return_card_fee IS '注销卡片退还的余额';


--
-- Name: COLUMN parkuser_income_anlysis_tb.act_card_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.act_card_count IS '激活卡片数量（卖卡数量）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.act_card_fee; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.act_card_fee IS '激活卡片总面值（卖卡总面值）';


--
-- Name: COLUMN parkuser_income_anlysis_tb.reg_card_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.reg_card_count IS '开卡数量';


--
-- Name: COLUMN parkuser_income_anlysis_tb.reg_card_fee; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.reg_card_fee IS '开卡总面值';


--
-- Name: COLUMN parkuser_income_anlysis_tb.bind_card_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_income_anlysis_tb.bind_card_count IS '卡片绑定用户数';


--
-- Name: parkuser_message_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_message_tb (
    id bigint NOT NULL,
    type integer,
    hasread integer DEFAULT 0,
    ctime bigint,
    content character varying(1000),
    uin bigint,
    title character varying
);


ALTER TABLE parkuser_message_tb OWNER TO postgres;

--
-- Name: TABLE parkuser_message_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE parkuser_message_tb IS '车主消息表';


--
-- Name: COLUMN parkuser_message_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_message_tb.type IS '0推荐提醒 1 活动提醒,2周奖提醒';


--
-- Name: COLUMN parkuser_message_tb.hasread; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_message_tb.hasread IS ' 是否已读：0未读，1已读';


--
-- Name: COLUMN parkuser_message_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_message_tb.uin IS '用户/收费员帐号';


--
-- Name: parkuser_reward_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_reward_tb (
    id bigint NOT NULL,
    uin bigint,
    uid bigint,
    order_id bigint,
    money numeric(10,2),
    ctime bigint,
    comid bigint,
    ticket_id bigint
);


ALTER TABLE parkuser_reward_tb OWNER TO postgres;

--
-- Name: TABLE parkuser_reward_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE parkuser_reward_tb IS '车主打赏收费员表';


--
-- Name: COLUMN parkuser_reward_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_reward_tb.uin IS '车主';


--
-- Name: COLUMN parkuser_reward_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_reward_tb.uid IS '收费员';


--
-- Name: COLUMN parkuser_reward_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_reward_tb.money IS '金额';


--
-- Name: COLUMN parkuser_reward_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_reward_tb.comid IS '车场编号';


--
-- Name: COLUMN parkuser_reward_tb.ticket_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_reward_tb.ticket_id IS '停车券编号';


--
-- Name: parkuser_work_record_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE parkuser_work_record_tb (
    id bigint NOT NULL,
    start_time bigint,
    end_time bigint,
    worksite_id bigint DEFAULT '-1'::integer,
    uid bigint DEFAULT '-1'::integer,
    berthsec_id bigint DEFAULT '-1'::integer,
    device_code character varying,
    chanid bigint,
    uuid character varying,
    state integer DEFAULT 0,
    history_money numeric(10,2) DEFAULT 0,
    out_log character varying,
    logon_state smallint DEFAULT 0,
    logoff_state smallint DEFAULT 0,
    park_id bigint
);


ALTER TABLE parkuser_work_record_tb OWNER TO postgres;

--
-- Name: COLUMN parkuser_work_record_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.uid IS '收费员id';


--
-- Name: COLUMN parkuser_work_record_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.berthsec_id IS '泊位段';


--
-- Name: COLUMN parkuser_work_record_tb.device_code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.device_code IS '设备编号';


--
-- Name: COLUMN parkuser_work_record_tb.chanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.chanid IS '合作方号';


--
-- Name: COLUMN parkuser_work_record_tb.uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.uuid IS '唯一编号';


--
-- Name: COLUMN parkuser_work_record_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.state IS '0已签到  1已签退';


--
-- Name: COLUMN parkuser_work_record_tb.history_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.history_money IS '上岗时，泊位段上的已预收金额';


--
-- Name: COLUMN parkuser_work_record_tb.out_log; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.out_log IS '签退小票内容';


--
-- Name: COLUMN parkuser_work_record_tb.logon_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.logon_state IS '签入状态 0：正常 1：迟到';


--
-- Name: COLUMN parkuser_work_record_tb.logoff_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.logoff_state IS '签退状态 0：正常 1：早退';


--
-- Name: COLUMN parkuser_work_record_tb.park_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN parkuser_work_record_tb.park_id IS '记录车场编号';


--
-- Name: peakalert_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE peakalert_anlysis_tb (
    id bigint NOT NULL,
    create_time bigint,
    comid bigint DEFAULT '-1'::integer,
    present integer DEFAULT 0,
    berths integer DEFAULT 0
);


ALTER TABLE peakalert_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE peakalert_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE peakalert_anlysis_tb IS '高峰预警统计';


--
-- Name: COLUMN peakalert_anlysis_tb.present; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN peakalert_anlysis_tb.present IS '在场车辆总数';


--
-- Name: COLUMN peakalert_anlysis_tb.berths; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN peakalert_anlysis_tb.berths IS '车位总数';


--
-- Name: phone_info_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE phone_info_tb (
    id bigint NOT NULL,
    name character varying,
    tele_phone bigint,
    comid character varying,
    park_phone bigint,
    group_phone bigint,
    monitor_id bigint,
    groupid character varying,
    is_call integer,
    call_time bigint,
    main_phone_type integer,
    state integer DEFAULT 1
);


ALTER TABLE phone_info_tb OWNER TO postgres;

--
-- Name: COLUMN phone_info_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.name IS '名称';


--
-- Name: COLUMN phone_info_tb.tele_phone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.tele_phone IS '分机号';


--
-- Name: COLUMN phone_info_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.comid IS '所属车场';


--
-- Name: COLUMN phone_info_tb.park_phone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.park_phone IS '车场主机号';


--
-- Name: COLUMN phone_info_tb.group_phone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.group_phone IS '集团主机号';


--
-- Name: COLUMN phone_info_tb.monitor_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.monitor_id IS '监控id';


--
-- Name: COLUMN phone_info_tb.is_call; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.is_call IS '是否有分机呼叫进来 1-是(需要切换到当前视频) 0-否/处理完毕';


--
-- Name: COLUMN phone_info_tb.call_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.call_time IS '分机呼叫时间';


--
-- Name: COLUMN phone_info_tb.main_phone_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.main_phone_type IS '呼叫主机性质 1-集团 0-车场';


--
-- Name: COLUMN phone_info_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN phone_info_tb.state IS '状态 1-正常 0-删除';


--
-- Name: price_assist_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE price_assist_tb (
    id bigint NOT NULL,
    comid bigint,
    type integer DEFAULT 0,
    assist_unit integer,
    assist_price numeric(10,2) DEFAULT 0
);


ALTER TABLE price_assist_tb OWNER TO postgres;

--
-- Name: TABLE price_assist_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE price_assist_tb IS '价格辅助表';


--
-- Name: COLUMN price_assist_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN price_assist_tb.type IS '0:每X小时X元';


--
-- Name: price_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE price_tb (
    id bigint NOT NULL,
    comid bigint,
    price numeric(10,2) DEFAULT 0,
    state bigint DEFAULT 0,
    unit integer,
    pay_type integer,
    create_time bigint,
    b_time integer,
    e_time integer,
    is_sale integer DEFAULT 0,
    first_times integer DEFAULT 0,
    fprice numeric(10,2) DEFAULT 0,
    countless integer DEFAULT 0,
    free_time integer DEFAULT 0,
    fpay_type integer DEFAULT 0,
    isnight integer DEFAULT 0,
    isedit integer DEFAULT 0,
    car_type integer DEFAULT 0,
    is_fulldaytime integer DEFAULT 0,
    total24 numeric(10,2) DEFAULT '-1'::integer,
    b_minute integer DEFAULT 0,
    e_minute integer DEFAULT 0,
    update_time bigint,
    price_id character varying,
    car_type_zh character varying,
    describe character varying,
    operate_type integer DEFAULT 0,
    is_sync integer DEFAULT 0 NOT NULL,
    is_delete bigint DEFAULT 0
);


ALTER TABLE price_tb OWNER TO tracqdev;

--
-- Name: COLUMN price_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.state IS '0正常，1注销';


--
-- Name: COLUMN price_tb.pay_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.pay_type IS '0:按时段，1：按次';


--
-- Name: COLUMN price_tb.is_sale; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.is_sale IS '是否打折 0否，1是';


--
-- Name: COLUMN price_tb.first_times; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.first_times IS '首优惠时段，单位分钟';


--
-- Name: COLUMN price_tb.fprice; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.fprice IS '首优惠价格';


--
-- Name: COLUMN price_tb.countless; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.countless IS '零头计费时长，单位分钟';


--
-- Name: COLUMN price_tb.free_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.free_time IS '免费时长，单位:分钟';


--
-- Name: COLUMN price_tb.fpay_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.fpay_type IS '超免费时长计费方式，1:免费 ，0:收费 ';


--
-- Name: COLUMN price_tb.isnight; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.isnight IS '夜晚停车，0:支持，1不支持';


--
-- Name: COLUMN price_tb.isedit; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.isedit IS '是否可编辑价格，目前只对日间按时价格生效,0否，1是，默认0';


--
-- Name: COLUMN price_tb.car_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.car_type IS '0：通用，1：小车，2：大车';


--
-- Name: COLUMN price_tb.is_fulldaytime; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.is_fulldaytime IS '是否补足日间时长 0补全（默认）1不补全';


--
-- Name: COLUMN price_tb.total24; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.total24 IS '24小时封顶价';


--
-- Name: COLUMN price_tb.b_minute; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.b_minute IS '开始分钟';


--
-- Name: COLUMN price_tb.e_minute; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.e_minute IS '结束分钟';


--
-- Name: COLUMN price_tb.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.update_time IS '记录车场编辑价格时的修改时间';


--
-- Name: COLUMN price_tb.price_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.price_id IS '记录车场的价格编号';


--
-- Name: COLUMN price_tb.car_type_zh; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.car_type_zh IS '适配车场价格表中记录车辆类型的信息';


--
-- Name: COLUMN price_tb.describe; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.describe IS '车场价格描述信息记录';


--
-- Name: COLUMN price_tb.operate_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.operate_type IS '对数据的操作类型记录';


--
-- Name: COLUMN price_tb.is_sync; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.is_sync IS '记录数据信息是否同步';


--
-- Name: COLUMN price_tb.is_delete; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN price_tb.is_delete IS '记录云端价格是否被删除';


--
-- Name: product_package_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE product_package_tb (
    id bigint NOT NULL,
    p_name character varying(30),
    b_time integer,
    e_time integer,
    remain_number integer,
    state integer DEFAULT 0,
    comid bigint,
    price numeric(10,2),
    bmin integer DEFAULT 0,
    emin integer DEFAULT 0,
    resume character varying(1000),
    old_price numeric(10,2) DEFAULT 0,
    type integer DEFAULT 0,
    reserved integer DEFAULT 0,
    limitday bigint,
    favourable_precent integer DEFAULT 100,
    free_minutes integer DEFAULT 0,
    out_favourable_precent integer DEFAULT 0,
    scope bigint DEFAULT 0,
    card_id character varying,
    update_time bigint,
    create_time bigint,
    describe character varying,
    operate_type integer,
    is_sync integer,
    is_delete bigint DEFAULT 0,
    period character varying,
    car_type_id character varying
);


ALTER TABLE product_package_tb OWNER TO tracqdev;

--
-- Name: COLUMN product_package_tb.old_price; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.old_price IS '原价';


--
-- Name: COLUMN product_package_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.type IS '0:全天 1夜间 2日间 3月卡时间内优惠 4指定小时内免费';


--
-- Name: COLUMN product_package_tb.reserved; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.reserved IS '是否固定车位：0不固定；1固定
';


--
-- Name: COLUMN product_package_tb.limitday; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.limitday IS '有效期到';


--
-- Name: COLUMN product_package_tb.favourable_precent; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.favourable_precent IS '优惠百分比 100免费，其它按百分比计算';


--
-- Name: COLUMN product_package_tb.free_minutes; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.free_minutes IS '免费时长 单位：分钟';


--
-- Name: COLUMN product_package_tb.out_favourable_precent; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.out_favourable_precent IS '超过了时间段享受0%－100%的优惠幅度';


--
-- Name: COLUMN product_package_tb.scope; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.scope IS '作用范围  默认0本车场有效  1父车场和旗下子车场有效';


--
-- Name: COLUMN product_package_tb.card_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.card_id IS '车场月卡编号记录';


--
-- Name: COLUMN product_package_tb.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.update_time IS '车场月卡套餐修改时间';


--
-- Name: COLUMN product_package_tb.create_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.create_time IS '车场月卡套餐创建时间';


--
-- Name: COLUMN product_package_tb.describe; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.describe IS '车场月卡信息描述记录';


--
-- Name: COLUMN product_package_tb.operate_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.operate_type IS '记录停车场对月卡套餐的操作类型';


--
-- Name: COLUMN product_package_tb.is_sync; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.is_sync IS '记录月卡套餐信息是否已经同步到车场';


--
-- Name: COLUMN product_package_tb.is_delete; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.is_delete IS '记录云端月卡套餐是否被删除';


--
-- Name: COLUMN product_package_tb.period; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.period IS '缴费周期 月，季，半年，年';


--
-- Name: COLUMN product_package_tb.car_type_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN product_package_tb.car_type_id IS '车型表ID';


--
-- Name: qr_code_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qr_code_tb (
    id bigint NOT NULL,
    wid bigint,
    comid bigint,
    uid bigint,
    ctime bigint,
    type integer,
    state integer DEFAULT 0,
    code character(20),
    isuse integer DEFAULT 0,
    ticketid bigint,
    score numeric(10,2) DEFAULT 0
);


ALTER TABLE qr_code_tb OWNER TO postgres;

--
-- Name: COLUMN qr_code_tb.wid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.wid IS 'worksitetb_ID';


--
-- Name: COLUMN qr_code_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.uid IS '收费员ID';


--
-- Name: COLUMN qr_code_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.ctime IS '新建时间';


--
-- Name: COLUMN qr_code_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.type IS '0:NFC,1：收费员，2：车位，3:泊车员，4：车场 5：商户减免券 6:停车券';


--
-- Name: COLUMN qr_code_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.state IS '0正常 1不可用';


--
-- Name: COLUMN qr_code_tb.isuse; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.isuse IS '是否使用 0未使用，1已使用';


--
-- Name: COLUMN qr_code_tb.ticketid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.ticketid IS '停车券id';


--
-- Name: COLUMN qr_code_tb.score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_code_tb.score IS '收费员发专用券消耗的积分';


--
-- Name: qr_thirdpark_code; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qr_thirdpark_code (
    id bigint NOT NULL,
    park_id character varying,
    union_id bigint,
    code character varying
);


ALTER TABLE qr_thirdpark_code OWNER TO postgres;

--
-- Name: COLUMN qr_thirdpark_code.park_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_thirdpark_code.park_id IS '第三方车场编号';


--
-- Name: COLUMN qr_thirdpark_code.union_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_thirdpark_code.union_id IS '第三主厂商编号';


--
-- Name: COLUMN qr_thirdpark_code.code; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qr_thirdpark_code.code IS '二维码';


--
-- Name: recharge_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE recharge_tb (
    id bigint NOT NULL,
    uin bigint,
    amount numeric(15,2),
    create_time bigint,
    charge_type integer
);


ALTER TABLE recharge_tb OWNER TO tracqdev;

--
-- Name: COLUMN recharge_tb.charge_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recharge_tb.charge_type IS '0:支付宝，1:微信支付，2:网上银行';


--
-- Name: recom_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE recom_tb (
    id bigint NOT NULL,
    mobile character varying(20),
    uin bigint,
    type integer,
    state integer,
    create_time bigint
);


ALTER TABLE recom_tb OWNER TO tracqdev;

--
-- Name: TABLE recom_tb; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON TABLE recom_tb IS '用户，停车场推荐表';


--
-- Name: COLUMN recom_tb.mobile; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recom_tb.mobile IS '用户，车场手机号 ';


--
-- Name: COLUMN recom_tb.uin; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recom_tb.uin IS '车场收费员帐号';


--
-- Name: COLUMN recom_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recom_tb.type IS '类型 0用户 1车场';


--
-- Name: COLUMN recom_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recom_tb.state IS '状态 0推荐中，1成功';


--
-- Name: COLUMN recom_tb.create_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recom_tb.create_time IS '日期';


--
-- Name: recommend_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE recommend_tb (
    id bigint NOT NULL,
    pid bigint,
    nid bigint,
    type integer,
    state integer,
    create_time bigint,
    comid bigint DEFAULT '-1'::integer,
    money numeric(8,2) DEFAULT 0,
    openid character varying
);


ALTER TABLE recommend_tb OWNER TO tracqdev;

--
-- Name: COLUMN recommend_tb.pid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.pid IS '推荐人id';


--
-- Name: COLUMN recommend_tb.nid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.nid IS '被推荐人的id';


--
-- Name: COLUMN recommend_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.type IS '推荐目标：0：车主，1:车场，2：车主(虚拟账户)';


--
-- Name: COLUMN recommend_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.state IS '状态 0推荐中，1成功,3:推荐无效，用户绑定过微信公众号';


--
-- Name: COLUMN recommend_tb.create_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.create_time IS '日期';


--
-- Name: COLUMN recommend_tb.comid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.comid IS '用户通过注册月卡会员注册车主时所在的车场id';


--
-- Name: COLUMN recommend_tb.money; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.money IS '推荐奖励金额';


--
-- Name: COLUMN recommend_tb.openid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN recommend_tb.openid IS '微信公众号openid';


--
-- Name: reg_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE reg_anlysis_tb (
    id bigint NOT NULL,
    bonus_num integer,
    reg_num integer,
    amount integer,
    pv_number integer,
    hit_number integer,
    down_num integer,
    ctime bigint,
    atype integer,
    order_num integer
);


ALTER TABLE reg_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE reg_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE reg_anlysis_tb IS '红包-注册统计';


--
-- Name: COLUMN reg_anlysis_tb.bonus_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.bonus_num IS '红包数';


--
-- Name: COLUMN reg_anlysis_tb.reg_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.reg_num IS '注册数（车牌有效）';


--
-- Name: COLUMN reg_anlysis_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.amount IS '金额';


--
-- Name: COLUMN reg_anlysis_tb.pv_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.pv_number IS 'pv数';


--
-- Name: COLUMN reg_anlysis_tb.hit_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.hit_number IS '点击数';


--
-- Name: COLUMN reg_anlysis_tb.down_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.down_num IS '下载数';


--
-- Name: COLUMN reg_anlysis_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.ctime IS '日期';


--
-- Name: COLUMN reg_anlysis_tb.atype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.atype IS '类型：1今日头条，2传单红包，3节日红包，998直付红包，999收费员推荐，1000交易红包';


--
-- Name: COLUMN reg_anlysis_tb.order_num; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reg_anlysis_tb.order_num IS '产生消费数';


--
-- Name: register_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE register_anlysis_tb (
    id bigint NOT NULL,
    reg_time bigint,
    reg_count integer,
    carnumber_count integer
);


ALTER TABLE register_anlysis_tb OWNER TO postgres;

--
-- Name: COLUMN register_anlysis_tb.carnumber_count; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN register_anlysis_tb.carnumber_count IS '有车牌的注册用户';


--
-- Name: remain_berth_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE remain_berth_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    berthseg_id bigint DEFAULT '-1'::integer,
    amount bigint DEFAULT 0,
    update_time bigint,
    state integer DEFAULT 0,
    total bigint DEFAULT 0
);


ALTER TABLE remain_berth_tb OWNER TO postgres;

--
-- Name: TABLE remain_berth_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE remain_berth_tb IS '剩余泊位数表';


--
-- Name: COLUMN remain_berth_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.comid IS '车场编号';


--
-- Name: COLUMN remain_berth_tb.berthseg_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.berthseg_id IS '泊位段编号';


--
-- Name: COLUMN remain_berth_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.amount IS '泊位剩余数量';


--
-- Name: COLUMN remain_berth_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.update_time IS '数据更新时间';


--
-- Name: COLUMN remain_berth_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.state IS '0：正常 1：删除';


--
-- Name: COLUMN remain_berth_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN remain_berth_tb.total IS '泊位总数';


--
-- Name: reward_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE reward_account_tb (
    id bigint NOT NULL,
    uin bigint,
    score numeric(10,2),
    type integer,
    create_time bigint,
    remark character varying(100),
    target integer DEFAULT 0,
    reward_id bigint DEFAULT '-1'::integer,
    orderticket_id bigint DEFAULT '-1'::integer,
    ticket_id bigint DEFAULT '-1'::integer
);


ALTER TABLE reward_account_tb OWNER TO postgres;

--
-- Name: COLUMN reward_account_tb.score; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.score IS '积分';


--
-- Name: COLUMN reward_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.type IS '0:充值积分 1：消费积分';


--
-- Name: COLUMN reward_account_tb.target; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.target IS '0:打赏 1：订单红包 2：专用停车券 3:停车宝充值';


--
-- Name: COLUMN reward_account_tb.reward_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.reward_id IS '打赏记录id';


--
-- Name: COLUMN reward_account_tb.orderticket_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.orderticket_id IS '订单红包id';


--
-- Name: COLUMN reward_account_tb.ticket_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN reward_account_tb.ticket_id IS '停车券id';


--
-- Name: role_auth_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE role_auth_tb (
    id bigint NOT NULL,
    auth character varying(2000),
    role_id bigint
);


ALTER TABLE role_auth_tb OWNER TO postgres;

--
-- Name: sensor_online_anlysis_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sensor_online_anlysis_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    create_time bigint,
    online integer DEFAULT 0,
    total integer DEFAULT 0
);


ALTER TABLE sensor_online_anlysis_tb OWNER TO postgres;

--
-- Name: TABLE sensor_online_anlysis_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE sensor_online_anlysis_tb IS '车检器在线率统计';


--
-- Name: COLUMN sensor_online_anlysis_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sensor_online_anlysis_tb.comid IS '车场编号';


--
-- Name: COLUMN sensor_online_anlysis_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sensor_online_anlysis_tb.create_time IS '统计时间';


--
-- Name: COLUMN sensor_online_anlysis_tb.online; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sensor_online_anlysis_tb.online IS '在线车检器数量';


--
-- Name: COLUMN sensor_online_anlysis_tb.total; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sensor_online_anlysis_tb.total IS '总车检器数量';


--
-- Name: seq_advert_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_advert_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_advert_tb OWNER TO postgres;

--
-- Name: seq_alipay_log; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_alipay_log
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_alipay_log OWNER TO postgres;

--
-- Name: seq_area_ibeacon_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_area_ibeacon_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_area_ibeacon_tb OWNER TO postgres;

--
-- Name: seq_auth_role_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_auth_role_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_auth_role_tb OWNER TO postgres;

--
-- Name: seq_auth_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_auth_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_auth_tb OWNER TO postgres;

--
-- Name: seq_berth_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_berth_order_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_berth_order_tb OWNER TO postgres;

--
-- Name: seq_bizcircle_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bizcircle_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bizcircle_tb OWNER TO postgres;

--
-- Name: seq_bolink_ccount_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bolink_ccount_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bolink_ccount_tb OWNER TO postgres;

--
-- Name: seq_bolink_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bolink_order_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bolink_order_tb OWNER TO postgres;

--
-- Name: seq_bonus_record_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bonus_record_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bonus_record_tb OWNER TO postgres;

--
-- Name: seq_bonus_type_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bonus_type_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bonus_type_tb OWNER TO postgres;

--
-- Name: seq_bouns_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_bouns_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_bouns_tb OWNER TO postgres;

--
-- Name: seq_car_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_car_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_car_info_tb OWNER TO postgres;

--
-- Name: seq_car_number_type_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_car_number_type_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_car_number_type_tb OWNER TO postgres;

--
-- Name: seq_car_picturs_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_car_picturs_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_car_picturs_tb OWNER TO postgres;

--
-- Name: seq_car_stops_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_car_stops_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_car_stops_tb OWNER TO postgres;

--
-- Name: seq_car_type_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_car_type_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_car_type_tb OWNER TO postgres;

--
-- Name: seq_card_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_card_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_card_account_tb OWNER TO postgres;

--
-- Name: seq_card_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_card_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_card_anlysis_tb OWNER TO postgres;

--
-- Name: seq_card_carnumber_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_card_carnumber_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_card_carnumber_tb OWNER TO postgres;

--
-- Name: seq_carower_product; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_carower_product
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_carower_product OWNER TO postgres;

--
-- Name: seq_carstop_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_carstop_order_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_carstop_order_tb OWNER TO postgres;

--
-- Name: seq_carstops_price_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_carstops_price_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_carstops_price_tb OWNER TO postgres;

--
-- Name: seq_city_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_city_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_city_account_tb OWNER TO postgres;

--
-- Name: seq_city_hotarea_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_city_hotarea_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_city_hotarea_tb OWNER TO postgres;

--
-- Name: seq_city_peakalert_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_city_peakalert_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_city_peakalert_tb OWNER TO postgres;

--
-- Name: seq_city_video_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_city_video_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_city_video_tb OWNER TO postgres;

--
-- Name: seq_collect_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_collect_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_collect_anlysis_tb OWNER TO postgres;

--
-- Name: seq_collector_account_pic_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_collector_account_pic_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_collector_account_pic_tb OWNER TO postgres;

--
-- Name: seq_collector_scroe_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_collector_scroe_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_collector_scroe_tb OWNER TO postgres;

--
-- Name: seq_collector_set_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_collector_set_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_collector_set_tb OWNER TO postgres;

--
-- Name: seq_collector_sort; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_collector_sort
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_collector_sort OWNER TO postgres;

--
-- Name: seq_com_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_account_tb OWNER TO postgres;

--
-- Name: seq_com_alert_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_alert_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_alert_tb OWNER TO postgres;

--
-- Name: seq_com_berthsecs_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_berthsecs_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_berthsecs_tb OWNER TO postgres;

--
-- Name: seq_com_brake_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_brake_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_brake_tb OWNER TO postgres;

--
-- Name: seq_com_camera_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_camera_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_camera_tb OWNER TO postgres;

--
-- Name: seq_com_comment_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_comment_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_comment_tb OWNER TO postgres;

--
-- Name: seq_com_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_info_tb OWNER TO postgres;

--
-- Name: seq_com_led_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_led_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_led_tb OWNER TO postgres;

--
-- Name: seq_com_nfc_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_nfc_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_nfc_tb OWNER TO postgres;

--
-- Name: seq_com_park_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_park_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_park_tb OWNER TO postgres;

--
-- Name: seq_com_parkstatus_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_parkstatus_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_parkstatus_tb OWNER TO postgres;

--
-- Name: seq_com_pass_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_pass_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_pass_tb OWNER TO postgres;

--
-- Name: seq_com_picturs_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_picturs_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_picturs_tb OWNER TO postgres;

--
-- Name: seq_com_pos_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_pos_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_pos_tb OWNER TO postgres;

--
-- Name: seq_com_praise_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_praise_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_praise_tb OWNER TO postgres;

--
-- Name: seq_com_temp_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_temp_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_temp_tb OWNER TO postgres;

--
-- Name: seq_com_worksite_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_com_worksite_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_com_worksite_tb OWNER TO postgres;

--
-- Name: seq_confirm_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_confirm_order_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_confirm_order_tb OWNER TO postgres;

--
-- Name: seq_consume_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_consume_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_consume_anlysis_tb OWNER TO postgres;

--
-- Name: seq_dataauth_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dataauth_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_dataauth_tb OWNER TO postgres;

--
-- Name: seq_department_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_department_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_department_tb OWNER TO postgres;

--
-- Name: seq_device_fault_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_device_fault_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_device_fault_tb OWNER TO postgres;

--
-- Name: seq_dici_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dici_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_dici_tb OWNER TO postgres;

--
-- Name: seq_directpay_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_directpay_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_directpay_anlysis_tb OWNER TO postgres;

--
-- Name: seq_flygame_pool_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_flygame_pool_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_flygame_pool_tb OWNER TO postgres;

--
-- Name: seq_flygame_score_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_flygame_score_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_flygame_score_anlysis_tb OWNER TO postgres;

--
-- Name: seq_flygame_score_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_flygame_score_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_flygame_score_tb OWNER TO postgres;

--
-- Name: seq_free_reasons_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_free_reasons_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_free_reasons_tb OWNER TO postgres;

--
-- Name: seq_group_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_group_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_group_account_tb OWNER TO postgres;

--
-- Name: seq_hasparker_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_hasparker_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_hasparker_anlysis_tb OWNER TO postgres;

--
-- Name: seq_ibeacon_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_ibeacon_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_ibeacon_tb OWNER TO postgres;

--
-- Name: seq_induce_ad_history_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_induce_ad_history_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_induce_ad_history_tb OWNER TO postgres;

--
-- Name: seq_induce_ad_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_induce_ad_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_induce_ad_tb OWNER TO postgres;

--
-- Name: seq_induce_module_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_induce_module_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_induce_module_tb OWNER TO postgres;

--
-- Name: seq_induce_park_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_induce_park_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_induce_park_tb OWNER TO postgres;

--
-- Name: seq_induce_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_induce_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_induce_tb OWNER TO postgres;

--
-- Name: seq_inspect_event_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_inspect_event_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_inspect_event_tb OWNER TO postgres;

--
-- Name: seq_inspect_group_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_inspect_group_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_inspect_group_tb OWNER TO postgres;

--
-- Name: seq_lift_rod_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_lift_rod_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_lift_rod_tb OWNER TO postgres;

--
-- Name: seq_local_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_local_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_local_info_tb OWNER TO postgres;

--
-- Name: seq_logo_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_logo_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_logo_tb OWNER TO postgres;

--
-- Name: seq_lottery_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_lottery_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_lottery_tb OWNER TO postgres;

--
-- Name: seq_message_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_message_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_message_tb OWNER TO postgres;

--
-- Name: seq_mobile_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_mobile_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_mobile_tb OWNER TO postgres;

--
-- Name: seq_mobilepay_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_mobilepay_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_mobilepay_anlysis_tb OWNER TO postgres;

--
-- Name: seq_money_record_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_money_record_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_money_record_tb OWNER TO postgres;

--
-- Name: seq_money_set_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_money_set_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_money_set_tb OWNER TO postgres;

--
-- Name: seq_monitor_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_monitor_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_monitor_info_tb OWNER TO postgres;

--
-- Name: seq_no_payment_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_no_payment_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER TABLE seq_no_payment_tb OWNER TO postgres;

--
-- Name: seq_online_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_online_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_online_anlysis_tb OWNER TO postgres;

--
-- Name: seq_order_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_anlysis_tb OWNER TO postgres;

--
-- Name: seq_order_attach_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_attach_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_attach_tb OWNER TO postgres;

--
-- Name: seq_order_log_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_log_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_log_tb OWNER TO postgres;

--
-- Name: seq_order_message_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_message_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_message_tb OWNER TO postgres;

--
-- Name: seq_order_reserve_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_reserve_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_reserve_tb OWNER TO postgres;

--
-- Name: seq_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_tb OWNER TO postgres;

--
-- Name: seq_order_ticket_detail_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_ticket_detail_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_ticket_detail_tb OWNER TO postgres;

--
-- Name: seq_order_ticket_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_order_ticket_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_order_ticket_tb OWNER TO postgres;

--
-- Name: seq_org_area_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_org_area_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_org_area_tb OWNER TO postgres;

--
-- Name: seq_org_channel_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_org_channel_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_org_channel_tb OWNER TO postgres;

--
-- Name: seq_org_city_merchants; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_org_city_merchants
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_org_city_merchants OWNER TO postgres;

--
-- Name: seq_org_group_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_org_group_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_org_group_tb OWNER TO postgres;

--
-- Name: seq_park_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_account_tb OWNER TO postgres;

--
-- Name: seq_park_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_anlysis_tb OWNER TO postgres;

--
-- Name: seq_park_charge_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_charge_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_charge_tb OWNER TO postgres;

--
-- Name: seq_park_log_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_log_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_log_tb OWNER TO postgres;

--
-- Name: seq_park_ticket_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_ticket_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_ticket_tb OWNER TO postgres;

--
-- Name: seq_park_token_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_token_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_token_tb OWNER TO postgres;

--
-- Name: seq_park_verify_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_park_verify_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_park_verify_tb OWNER TO postgres;

--
-- Name: seq_parkuser_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_account_tb OWNER TO postgres;

--
-- Name: seq_parkuser_cash_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_cash_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_cash_tb OWNER TO postgres;

--
-- Name: seq_parkuser_comment_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_comment_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_comment_tb OWNER TO postgres;

--
-- Name: seq_parkuser_income_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_income_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_income_anlysis_tb OWNER TO postgres;

--
-- Name: seq_parkuser_message_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_message_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_message_tb OWNER TO postgres;

--
-- Name: seq_parkuser_reward_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_reward_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_reward_tb OWNER TO postgres;

--
-- Name: seq_parkuser_work_record_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_parkuser_work_record_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_parkuser_work_record_tb OWNER TO postgres;

--
-- Name: seq_peakalert_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_peakalert_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_peakalert_anlysis_tb OWNER TO postgres;

--
-- Name: seq_phone_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_phone_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_phone_info_tb OWNER TO postgres;

--
-- Name: seq_price_assist_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_price_assist_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_price_assist_tb OWNER TO postgres;

--
-- Name: seq_price_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_price_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_price_tb OWNER TO postgres;

--
-- Name: seq_product_package_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_product_package_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_product_package_tb OWNER TO postgres;

--
-- Name: seq_qr_code_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_qr_code_tb
    START WITH 100000
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_qr_code_tb OWNER TO postgres;

--
-- Name: seq_qr_thirdpark_code; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_qr_thirdpark_code
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_qr_thirdpark_code OWNER TO postgres;

--
-- Name: seq_recharge_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_recharge_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_recharge_tb OWNER TO postgres;

--
-- Name: seq_recom_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_recom_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_recom_tb OWNER TO postgres;

--
-- Name: seq_recommend_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_recommend_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_recommend_tb OWNER TO postgres;

--
-- Name: seq_reg_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reg_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_reg_anlysis_tb OWNER TO postgres;

--
-- Name: seq_register_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_register_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_register_anlysis_tb OWNER TO postgres;

--
-- Name: seq_remain_berth_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_remain_berth_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_remain_berth_tb OWNER TO postgres;

--
-- Name: seq_reward_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reward_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_reward_account_tb OWNER TO postgres;

--
-- Name: seq_role_auth_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_role_auth_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_role_auth_tb OWNER TO postgres;

--
-- Name: seq_sensor_online_anlysis_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sensor_online_anlysis_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sensor_online_anlysis_tb OWNER TO postgres;

--
-- Name: seq_share_log_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_share_log_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_share_log_tb OWNER TO postgres;

--
-- Name: seq_shop_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_shop_account_tb
    START WITH 188
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_shop_account_tb OWNER TO postgres;

--
-- Name: seq_shop_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_shop_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_shop_tb OWNER TO postgres;

--
-- Name: seq_sim_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sim_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sim_tb OWNER TO postgres;

--
-- Name: seq_sites_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sites_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sites_tb OWNER TO postgres;

--
-- Name: seq_sites_voltage_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sites_voltage_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sites_voltage_tb OWNER TO postgres;

--
-- Name: seq_slow_alert_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_slow_alert_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_slow_alert_tb OWNER TO postgres;

--
-- Name: seq_sub_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sub_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sub_account_tb OWNER TO postgres;

--
-- Name: seq_switch_line_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_switch_line_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_switch_line_tb OWNER TO postgres;

--
-- Name: seq_sync_info_pool_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_sync_info_pool_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_sync_info_pool_tb OWNER TO postgres;

--
-- Name: seq_thirdpay_order_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_thirdpay_order_tb
    START WITH 4390
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_thirdpay_order_tb OWNER TO postgres;

--
-- Name: seq_ticket_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_ticket_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_ticket_tb OWNER TO postgres;

--
-- Name: seq_ticket_uion_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_ticket_uion_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_ticket_uion_tb OWNER TO postgres;

--
-- Name: seq_tingchebao_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_tingchebao_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_tingchebao_account_tb OWNER TO postgres;

--
-- Name: seq_tmp_p4top5_primarykey; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_tmp_p4top5_primarykey
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_tmp_p4top5_primarykey OWNER TO postgres;

--
-- Name: seq_transfer_url_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_transfer_url_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_transfer_url_tb OWNER TO postgres;

--
-- Name: seq_union_park_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_union_park_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_union_park_tb OWNER TO postgres;

--
-- Name: seq_user_account_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_account_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_account_tb OWNER TO postgres;

--
-- Name: seq_user_friend_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_friend_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_friend_tb OWNER TO postgres;

--
-- Name: seq_user_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_info_tb OWNER TO postgres;

--
-- Name: seq_user_liuyan_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_liuyan_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_liuyan_tb OWNER TO postgres;

--
-- Name: seq_user_local_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_local_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_local_tb OWNER TO postgres;

--
-- Name: seq_user_log_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_log_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_log_tb OWNER TO postgres;

--
-- Name: seq_user_message_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_message_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_message_tb OWNER TO postgres;

--
-- Name: seq_user_payaccount_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_payaccount_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_payaccount_tb OWNER TO postgres;

--
-- Name: seq_user_pic_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_pic_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_pic_tb OWNER TO postgres;

--
-- Name: seq_user_preaddfriend_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_preaddfriend_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_preaddfriend_tb OWNER TO postgres;

--
-- Name: seq_user_profile_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_profile_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_profile_tb OWNER TO postgres;

--
-- Name: seq_user_role_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_role_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_role_tb OWNER TO postgres;

--
-- Name: seq_user_session_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_session_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_session_tb OWNER TO postgres;

--
-- Name: seq_user_worksite_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_user_worksite_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_user_worksite_tb OWNER TO postgres;

--
-- Name: seq_verification_code_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_verification_code_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_verification_code_tb OWNER TO postgres;

--
-- Name: seq_vip_apply_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_vip_apply_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_vip_apply_tb OWNER TO postgres;

--
-- Name: seq_visit_info_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_visit_info_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_visit_info_tb OWNER TO postgres;

--
-- Name: seq_withdrawer_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_withdrawer_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_withdrawer_tb OWNER TO postgres;

--
-- Name: seq_work_berthsec_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_berthsec_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_berthsec_tb OWNER TO postgres;

--
-- Name: seq_work_detail_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_detail_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_detail_tb OWNER TO postgres;

--
-- Name: seq_work_employee_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_employee_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_employee_tb OWNER TO postgres;

--
-- Name: seq_work_group_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_group_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_group_tb OWNER TO postgres;

--
-- Name: seq_work_inspector_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_inspector_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_inspector_tb OWNER TO postgres;

--
-- Name: seq_work_time_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_work_time_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_work_time_tb OWNER TO postgres;

--
-- Name: seq_wxp_user_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_wxp_user_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_wxp_user_tb OWNER TO postgres;

--
-- Name: seq_zld_black_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_zld_black_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_zld_black_tb OWNER TO postgres;

--
-- Name: seq_zld_game_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_zld_game_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_zld_game_tb OWNER TO postgres;

--
-- Name: seq_zld_organize_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_zld_organize_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_zld_organize_tb OWNER TO postgres;

--
-- Name: seq_zld_orgtype_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_zld_orgtype_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_zld_orgtype_tb OWNER TO postgres;

--
-- Name: seq_zld_protocol_tb; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_zld_protocol_tb
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE seq_zld_protocol_tb OWNER TO postgres;

--
-- Name: share_log_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE share_log_tb (
    id bigint NOT NULL,
    comid bigint,
    s_number integer DEFAULT 0,
    create_time bigint,
    uin bigint
);


ALTER TABLE share_log_tb OWNER TO tracqdev;

--
-- Name: shop_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE shop_account_tb (
    id integer NOT NULL,
    shop_id integer,
    shop_name character varying(255),
    ticket_limit integer,
    ticketfree_limit integer,
    ticket_money integer,
    operate_time bigint,
    park_id bigint,
    operator bigint,
    strid character varying(255),
    add_money numeric(10,2),
    operate_type integer DEFAULT 1
);


ALTER TABLE shop_account_tb OWNER TO postgres;

--
-- Name: COLUMN shop_account_tb.shop_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.shop_id IS '商户编号';


--
-- Name: COLUMN shop_account_tb.shop_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.shop_name IS '商户名称';


--
-- Name: COLUMN shop_account_tb.ticket_limit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.ticket_limit IS '减免劵(小时)';


--
-- Name: COLUMN shop_account_tb.ticketfree_limit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.ticketfree_limit IS '全免劵(张)';


--
-- Name: COLUMN shop_account_tb.ticket_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.ticket_money IS '减免金额(元)';


--
-- Name: COLUMN shop_account_tb.operate_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.operate_time IS '充值时间/减免劵生成时间';


--
-- Name: COLUMN shop_account_tb.park_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.park_id IS '车场编号';


--
-- Name: COLUMN shop_account_tb.operate_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_account_tb.operate_type IS '1-续费2回收充值';


--
-- Name: shop_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE shop_tb (
    id bigint NOT NULL,
    name character varying(100),
    address character varying(100),
    mobile character varying(15),
    phone character varying(50),
    comid bigint,
    ticket_limit integer DEFAULT 0,
    description character varying(200),
    state integer DEFAULT 0,
    create_time bigint,
    ticketfree_limit integer DEFAULT 0,
    ticket_type integer,
    ticket_money integer DEFAULT 0,
    default_limit character varying(255),
    discount_percent numeric(10,2),
    discount_money numeric(10,2),
    validite_time integer DEFAULT 24,
    ticket_unit integer,
    free_money numeric(10,2)
);


ALTER TABLE shop_tb OWNER TO postgres;

--
-- Name: COLUMN shop_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.name IS '商户名称';


--
-- Name: COLUMN shop_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.address IS '地址';


--
-- Name: COLUMN shop_tb.mobile; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.mobile IS '电话';


--
-- Name: COLUMN shop_tb.ticket_limit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.ticket_limit IS '停车券额度';


--
-- Name: COLUMN shop_tb.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.description IS '描述';


--
-- Name: COLUMN shop_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.state IS '0:正常 1：不可用';


--
-- Name: COLUMN shop_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.create_time IS '创建时间';


--
-- Name: COLUMN shop_tb.ticketfree_limit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.ticketfree_limit IS '全免券的张数上限';


--
-- Name: COLUMN shop_tb.ticket_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.ticket_type IS '减免劵类型 1-减免时长 2-减免金额';


--
-- Name: COLUMN shop_tb.ticket_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.ticket_money IS '减免金额';


--
-- Name: COLUMN shop_tb.default_limit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.default_limit IS '默认显示额度';


--
-- Name: COLUMN shop_tb.discount_percent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.discount_percent IS '商户折扣百分比';


--
-- Name: COLUMN shop_tb.discount_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.discount_money IS '商户折扣每小时/元';


--
-- Name: COLUMN shop_tb.validite_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.validite_time IS '有效期/小时';


--
-- Name: COLUMN shop_tb.ticket_unit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.ticket_unit IS '减免劵单位 1-分钟 2-小时 3-天 4-元';


--
-- Name: COLUMN shop_tb.free_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN shop_tb.free_money IS '全免劵单价 每张/元';


--
-- Name: sim_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sim_tb (
    id bigint NOT NULL,
    pin character varying,
    mobile character varying,
    money numeric(8,2) DEFAULT 0,
    create_time bigint,
    limit_time bigint,
    allot_time bigint,
    creator_id bigint DEFAULT '-1'::integer,
    type integer DEFAULT 0,
    device_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer,
    state integer DEFAULT 0
);


ALTER TABLE sim_tb OWNER TO postgres;

--
-- Name: COLUMN sim_tb.pin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.pin IS 'PIN码';


--
-- Name: COLUMN sim_tb.mobile; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.mobile IS '手机号码';


--
-- Name: COLUMN sim_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.money IS '首次充值额';


--
-- Name: COLUMN sim_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.create_time IS '入库时间';


--
-- Name: COLUMN sim_tb.limit_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.limit_time IS '套餐过期时间';


--
-- Name: COLUMN sim_tb.allot_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.allot_time IS '分配时间';


--
-- Name: COLUMN sim_tb.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.creator_id IS '入库人';


--
-- Name: COLUMN sim_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.type IS '绑定的设备类型 0：未绑定 1：POS机 2：基站';


--
-- Name: COLUMN sim_tb.device_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.device_id IS '设备编号';


--
-- Name: COLUMN sim_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.groupid IS '运营集团编号';


--
-- Name: COLUMN sim_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sim_tb.state IS '状态 0：正常 1：禁用';


--
-- Name: sites_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sites_tb (
    id bigint NOT NULL,
    uuid character varying,
    voltage numeric(8,2),
    update_time bigint,
    longitude numeric(10,6),
    latitude numeric(10,6),
    create_time bigint,
    heartbeat bigint,
    address character varying,
    cityid bigint DEFAULT '-1'::integer,
    name character varying,
    state integer,
    comid bigint,
    is_delete integer DEFAULT 0,
    groupid bigint DEFAULT '-1'::integer
);


ALTER TABLE sites_tb OWNER TO postgres;

--
-- Name: COLUMN sites_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.create_time IS '创建时间';


--
-- Name: COLUMN sites_tb.heartbeat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.heartbeat IS '心跳时间';


--
-- Name: COLUMN sites_tb.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.address IS '基站地址';


--
-- Name: COLUMN sites_tb.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.cityid IS '城市商户编号';


--
-- Name: COLUMN sites_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.name IS '基站名称';


--
-- Name: COLUMN sites_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.state IS '基站状态 0:故障 1:正常 2:删除';


--
-- Name: COLUMN sites_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.comid IS '车场编号';


--
-- Name: COLUMN sites_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.is_delete IS '0：正常 1：禁用';


--
-- Name: COLUMN sites_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_tb.groupid IS '运营集团编号';


--
-- Name: sites_voltage_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sites_voltage_tb (
    id bigint NOT NULL,
    voltage numeric(8,2),
    create_time bigint,
    site_id bigint DEFAULT '-1'::integer
);


ALTER TABLE sites_voltage_tb OWNER TO postgres;

--
-- Name: TABLE sites_voltage_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE sites_voltage_tb IS '基站电压历史表';


--
-- Name: COLUMN sites_voltage_tb.voltage; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_voltage_tb.voltage IS '基站电压';


--
-- Name: COLUMN sites_voltage_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_voltage_tb.create_time IS ' 录入时间';


--
-- Name: COLUMN sites_voltage_tb.site_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sites_voltage_tb.site_id IS '基站编号';


--
-- Name: slow_alert_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE slow_alert_tb (
    id bigint NOT NULL,
    url character varying,
    start_time bigint,
    end_time bigint,
    local_host character varying
);


ALTER TABLE slow_alert_tb OWNER TO postgres;

--
-- Name: TABLE slow_alert_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE slow_alert_tb IS '该表是记录慢的接口';


--
-- Name: COLUMN slow_alert_tb.url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN slow_alert_tb.url IS '地址';


--
-- Name: COLUMN slow_alert_tb.start_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN slow_alert_tb.start_time IS '接口开始时间';


--
-- Name: COLUMN slow_alert_tb.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN slow_alert_tb.end_time IS '接口结束时间';


--
-- Name: COLUMN slow_alert_tb.local_host; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN slow_alert_tb.local_host IS '服务器地址';


--
-- Name: sub_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sub_account_tb (
    id bigint NOT NULL,
    groupid bigint DEFAULT '-1'::integer,
    amount numeric(10,2) DEFAULT 0,
    sub_orderid character varying,
    create_time bigint,
    card_account_id bigint DEFAULT '-1'::integer,
    uin bigint DEFAULT '-1'::integer,
    type integer DEFAULT 0
);


ALTER TABLE sub_account_tb OWNER TO postgres;

--
-- Name: TABLE sub_account_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE sub_account_tb IS '第三方支付子账户充值流水';


--
-- Name: COLUMN sub_account_tb.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.groupid IS '运营集团编号';


--
-- Name: COLUMN sub_account_tb.amount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.amount IS '金额';


--
-- Name: COLUMN sub_account_tb.sub_orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.sub_orderid IS '第三方的订单号';


--
-- Name: COLUMN sub_account_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.create_time IS '记录时间';


--
-- Name: COLUMN sub_account_tb.card_account_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.card_account_id IS '卡片充值流水编号';


--
-- Name: COLUMN sub_account_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.uin IS '车主编号';


--
-- Name: COLUMN sub_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sub_account_tb.type IS '充值方式 0：微信公众号 1：微信客户端 2：支付宝客户端';


--
-- Name: switch_line_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE switch_line_tb (
    id bigint NOT NULL,
    comid bigint,
    create_time bigint,
    end_time bigint
);


ALTER TABLE switch_line_tb OWNER TO postgres;

--
-- Name: sync_info_pool_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE sync_info_pool_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    table_name character varying(50),
    table_id bigint,
    create_time bigint,
    operate integer DEFAULT 0,
    state integer DEFAULT 0
);


ALTER TABLE sync_info_pool_tb OWNER TO postgres;

--
-- Name: TABLE sync_info_pool_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE sync_info_pool_tb IS '线下同步线上信息池';


--
-- Name: COLUMN sync_info_pool_tb.table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sync_info_pool_tb.table_name IS '表名';


--
-- Name: COLUMN sync_info_pool_tb.table_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sync_info_pool_tb.table_id IS '表记录中的id';


--
-- Name: COLUMN sync_info_pool_tb.operate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sync_info_pool_tb.operate IS '0添加 1修改2删除';


--
-- Name: COLUMN sync_info_pool_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN sync_info_pool_tb.state IS '同步状态  0 未同步 1已同步';


--
-- Name: thirdpay_order_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE thirdpay_order_tb (
    out_trade_no character varying(100),
    id integer NOT NULL,
    order_id_local character varying(255)
);


ALTER TABLE thirdpay_order_tb OWNER TO postgres;

--
-- Name: ticket_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE ticket_tb (
    id bigint NOT NULL,
    create_time bigint,
    limit_day bigint,
    money integer,
    state integer,
    uin bigint,
    comid bigint,
    utime bigint DEFAULT 0,
    umoney numeric(8,2) DEFAULT 0,
    type integer DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer,
    bmoney numeric(8,2),
    wxp_orderid character varying,
    shop_id bigint,
    resources integer DEFAULT 0,
    is_back_money integer DEFAULT 0,
    pmoney numeric(8,2) DEFAULT 0,
    need_sync integer DEFAULT '-1'::integer,
    ticket_id character varying,
    operate_user character varying,
    state_zh character varying,
    car_number character varying,
    type_zh character varying,
    remark character varying
);


ALTER TABLE ticket_tb OWNER TO postgres;

--
-- Name: COLUMN ticket_tb.money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.money IS '减免时长';


--
-- Name: COLUMN ticket_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.state IS '0-未使用,1-已使用，2-回收作废';


--
-- Name: COLUMN ticket_tb.utime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.utime IS '使用时间';


--
-- Name: COLUMN ticket_tb.umoney; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.umoney IS '作用金额';


--
-- Name: COLUMN ticket_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.type IS '0普通停车券，1专用停车券 2微信专用打折券,3减时券,4全免券,5减免金额劵';


--
-- Name: COLUMN ticket_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.orderid IS '订单id';


--
-- Name: COLUMN ticket_tb.bmoney; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.bmoney IS '0普通停车券，1专用停车券 2微信专用打折券,3减时券,4全免券,5减免金额劵';


--
-- Name: COLUMN ticket_tb.wxp_orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.wxp_orderid IS '微信公众号订单号';


--
-- Name: COLUMN ticket_tb.shop_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.shop_id IS '商户id';


--
-- Name: COLUMN ticket_tb.resources; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.resources IS '来源 0停车宝，1购买';


--
-- Name: COLUMN ticket_tb.is_back_money; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.is_back_money IS ' 车主购买的停车券，未使用过期退款，0未退款，1已退款';


--
-- Name: COLUMN ticket_tb.pmoney; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.pmoney IS '购买券车主支付金额';


--
-- Name: COLUMN ticket_tb.need_sync; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.need_sync IS '-1默认不需要同步   0需要同步  1同步完成';


--
-- Name: COLUMN ticket_tb.ticket_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.ticket_id IS '车场减免券编号';


--
-- Name: COLUMN ticket_tb.operate_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.operate_user IS '车场收费员（可以是车场收费员编号）';


--
-- Name: COLUMN ticket_tb.state_zh; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.state_zh IS '减免券状态';


--
-- Name: COLUMN ticket_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.car_number IS '车牌编号';


--
-- Name: COLUMN ticket_tb.type_zh; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.type_zh IS '类型';


--
-- Name: COLUMN ticket_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_tb.remark IS '备注';


--
-- Name: ticket_uion_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE ticket_uion_tb (
    id bigint NOT NULL,
    req_uin bigint,
    res_uin bigint,
    req_tid bigint,
    res_tid bigint,
    req_time bigint,
    res_time bigint,
    win_uin bigint,
    state integer DEFAULT 0,
    req_money integer DEFAULT 0,
    res_money integer DEFAULT 0
);


ALTER TABLE ticket_uion_tb OWNER TO postgres;

--
-- Name: TABLE ticket_uion_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE ticket_uion_tb IS '合体表';


--
-- Name: COLUMN ticket_uion_tb.req_uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.req_uin IS '求合体车主';


--
-- Name: COLUMN ticket_uion_tb.res_uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.res_uin IS '响应合体车主';


--
-- Name: COLUMN ticket_uion_tb.req_tid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.req_tid IS '求合体车主券编号';


--
-- Name: COLUMN ticket_uion_tb.res_tid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.res_tid IS '响应合体车主券编号';


--
-- Name: COLUMN ticket_uion_tb.req_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.req_time IS '开始时间';


--
-- Name: COLUMN ticket_uion_tb.res_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.res_time IS '响应时间';


--
-- Name: COLUMN ticket_uion_tb.win_uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.win_uin IS '获胜者，-1失败，其它是获胜车主账户';


--
-- Name: COLUMN ticket_uion_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN ticket_uion_tb.state IS '合体状态，0等待合体，1合体完成';


--
-- Name: ticket_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW ticket_view AS
 SELECT ticket_tb.uin,
    max(ticket_tb.limit_day) AS limittime
   FROM ticket_tb
  WHERE (ticket_tb.state = 0)
  GROUP BY ticket_tb.uin;


ALTER TABLE ticket_view OWNER TO postgres;

--
-- Name: tingchebao_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE tingchebao_account_tb (
    id bigint NOT NULL,
    amount numeric(10,2),
    type integer,
    create_time bigint,
    remark character varying(100),
    utype integer,
    orderid bigint DEFAULT '-1'::integer,
    withdraw_id bigint DEFAULT '-1'::integer,
    online_orderid character varying,
    uin bigint DEFAULT '-1'::integer
);


ALTER TABLE tingchebao_account_tb OWNER TO postgres;

--
-- Name: COLUMN tingchebao_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tingchebao_account_tb.type IS '0:充值，1消费';


--
-- Name: COLUMN tingchebao_account_tb.utype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tingchebao_account_tb.utype IS '0：停车代金券，1：支付宝服务费，2：微信服务费，3：车场返现，4：车主返现 5：泊车费 6：微信充值 7：支付宝充值 8：提现';


--
-- Name: COLUMN tingchebao_account_tb.withdraw_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tingchebao_account_tb.withdraw_id IS '提现记录编号';


--
-- Name: COLUMN tingchebao_account_tb.online_orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tingchebao_account_tb.online_orderid IS '第三方支付的订单号';


--
-- Name: COLUMN tingchebao_account_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tingchebao_account_tb.uin IS '操作人账号';


--
-- Name: tmp_p4top5_primarykey; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE tmp_p4top5_primarykey (
    id bigint NOT NULL,
    table_type integer,
    p4_id bigint DEFAULT '-1'::integer,
    p5_id bigint DEFAULT '-1'::integer,
    groupid bigint DEFAULT '-1'::integer
);


ALTER TABLE tmp_p4top5_primarykey OWNER TO postgres;

--
-- Name: TABLE tmp_p4top5_primarykey; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE tmp_p4top5_primarykey IS '这是个p4到p5导数据用的临时表，主要存储p4和p5的主键对应，因为p5添加字段代价太大';


--
-- Name: COLUMN tmp_p4top5_primarykey.table_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tmp_p4top5_primarykey.table_type IS '表 0：卡片表 1：车场表 2：泊位段表 3：泊位表 4：订单表 5：收费员表 6：车牌表 7：工作组表 8：工作组和泊位段对应表 9：工作组和收费员对应表  11：基站表 12：车检器表 13：用户表（车主）';


--
-- Name: COLUMN tmp_p4top5_primarykey.p4_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tmp_p4top5_primarykey.p4_id IS 'p4表主键';


--
-- Name: COLUMN tmp_p4top5_primarykey.p5_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tmp_p4top5_primarykey.p5_id IS 'p5表主键';


--
-- Name: COLUMN tmp_p4top5_primarykey.groupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN tmp_p4top5_primarykey.groupid IS '运营集团编号';


--
-- Name: transfer_url_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE transfer_url_tb (
    id bigint NOT NULL,
    url character varying(300),
    ctime bigint,
    state integer DEFAULT 0
);


ALTER TABLE transfer_url_tb OWNER TO postgres;

--
-- Name: COLUMN transfer_url_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN transfer_url_tb.ctime IS '创建时间';


--
-- Name: COLUMN transfer_url_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN transfer_url_tb.state IS '0：正在推荐，1：推荐成功';


--
-- Name: union_park_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE union_park_tb (
    id bigint NOT NULL,
    company_name character varying(100),
    phone character varying(50),
    address character varying(100),
    resume character varying(4000),
    longitude numeric(10,6),
    latitude numeric(10,6),
    parking_type integer DEFAULT 0,
    parking_total integer DEFAULT 0,
    share_number integer DEFAULT 0,
    money numeric(15,2) DEFAULT 0,
    type integer DEFAULT 0,
    isfixed integer DEFAULT 1,
    epay integer DEFAULT 1,
    remarks character varying,
    empty integer DEFAULT 0,
    union_state integer DEFAULT 0,
    monthlypay integer DEFAULT 0,
    ctime bigint
);


ALTER TABLE union_park_tb OWNER TO tracqdev;

--
-- Name: COLUMN union_park_tb.parking_type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.parking_type IS '-- 车位类型，0地面，1地下，2占道 3室外 4室内 5室内外';


--
-- Name: COLUMN union_park_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.type IS '停车场类型，0：付费，1免费';


--
-- Name: COLUMN union_park_tb.isfixed; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.isfixed IS '0：未校验，1：已校验，2：申请校验，-1：一次未通过，-2：二次未通过，-3：三次未通过';


--
-- Name: COLUMN union_park_tb.epay; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.epay IS '电子支付，0不支持，1支持';


--
-- Name: COLUMN union_park_tb.remarks; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.remarks IS '备注';


--
-- Name: COLUMN union_park_tb.empty; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.empty IS '空闲车位数';


--
-- Name: COLUMN union_park_tb.union_state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN union_park_tb.union_state IS '0 未上传 1已上传在使用 2已上传未审核 3已上传并禁用';


--
-- Name: user_account_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_account_tb (
    id bigint NOT NULL,
    uin bigint,
    amount numeric(10,2),
    type integer,
    create_time bigint,
    remark character varying(100),
    pay_type integer DEFAULT 0,
    uid bigint DEFAULT '-1'::integer,
    target integer DEFAULT 0,
    orderid bigint DEFAULT '-1'::integer
);


ALTER TABLE user_account_tb OWNER TO postgres;

--
-- Name: COLUMN user_account_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.uin IS '车主账户号，根据手机号查询';


--
-- Name: COLUMN user_account_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.type IS '0:充值，1:消费,';


--
-- Name: COLUMN user_account_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.remark IS ' 标题';


--
-- Name: COLUMN user_account_tb.pay_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.pay_type IS ' 0余额，1支付宝，2微信，3网银，4余额+支付宝,5余额+微信,6余额+网银 ,7停车券,8活动奖励,9微信公众号，10微信公众号+余额，11微信打折券,12预支付返款 13停车券退款 14：停车宝';


--
-- Name: COLUMN user_account_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.uid IS '支付给收费员的账户';


--
-- Name: COLUMN user_account_tb.target; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_account_tb.target IS '0:普通支付，1直接支付给收费员，没有订单  2购买停车券 3停车券退款 4：账户余额退回第三方支付';


--
-- Name: user_friend_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_friend_tb (
    id bigint NOT NULL,
    buin bigint,
    euin bigint,
    ctime bigint,
    atype integer DEFAULT 0,
    is_add_hx integer DEFAULT 0
);


ALTER TABLE user_friend_tb OWNER TO postgres;

--
-- Name: TABLE user_friend_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_friend_tb IS '车友表';


--
-- Name: COLUMN user_friend_tb.buin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_friend_tb.buin IS '发起人';


--
-- Name: COLUMN user_friend_tb.euin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_friend_tb.euin IS '好友 ';


--
-- Name: COLUMN user_friend_tb.atype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_friend_tb.atype IS '加入原因 0打灰机';


--
-- Name: COLUMN user_friend_tb.is_add_hx; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_friend_tb.is_add_hx IS '是否加入环信好友，0否，1是';


--
-- Name: user_liuyan_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_liuyan_tb (
    id bigint NOT NULL,
    fuin bigint,
    message character varying,
    ctime bigint,
    is_read integer,
    tuin bigint
);


ALTER TABLE user_liuyan_tb OWNER TO postgres;

--
-- Name: TABLE user_liuyan_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_liuyan_tb IS '留言表';


--
-- Name: COLUMN user_liuyan_tb.fuin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_liuyan_tb.fuin IS '发消息人';


--
-- Name: COLUMN user_liuyan_tb.message; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_liuyan_tb.message IS '留言内容';


--
-- Name: COLUMN user_liuyan_tb.is_read; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_liuyan_tb.is_read IS '是否已读 0未读，1已读';


--
-- Name: COLUMN user_liuyan_tb.tuin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_liuyan_tb.tuin IS '接收人';


--
-- Name: user_local_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_local_tb (
    id bigint NOT NULL,
    uid bigint,
    distance numeric(10,2),
    is_onseat integer,
    lat numeric(10,6),
    lon numeric(10,6),
    ctime bigint
);


ALTER TABLE user_local_tb OWNER TO postgres;

--
-- Name: COLUMN user_local_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_local_tb.uid IS '收费员账号';


--
-- Name: COLUMN user_local_tb.is_onseat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_local_tb.is_onseat IS '是否在位，0否，1是';


--
-- Name: COLUMN user_local_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_local_tb.ctime IS 'h ';


--
-- Name: user_log_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE user_log_tb (
    id bigint NOT NULL,
    comid bigint NOT NULL,
    create_time bigint NOT NULL,
    logs character varying(4000),
    type integer,
    uid character varying(20)
);


ALTER TABLE user_log_tb OWNER TO tracqdev;

--
-- Name: COLUMN user_log_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_log_tb.type IS '100:创建停车场，101：修改停车场，102：删除停车场，201：修改管理员，202：创建停车员，203：修改停车员，204：禁用停车员，205：删除停车员，206：修改密码，207：添加价格，208：修改价格，209：删除价格，210：添加包月产品，211：删除包月，300：添加市场专员，301修改市场专员，302删除市场专员，400：添加商圈，401：编辑商圈，402：删除商圈';


--
-- Name: COLUMN user_log_tb.uid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_log_tb.uid IS '登录帐号';


--
-- Name: user_message_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_message_tb (
    id bigint NOT NULL,
    type integer,
    hasread integer DEFAULT 0,
    ctime bigint,
    content character varying(1000),
    uin bigint,
    title character varying
);


ALTER TABLE user_message_tb OWNER TO postgres;

--
-- Name: TABLE user_message_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_message_tb IS '车主消息表';


--
-- Name: COLUMN user_message_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_message_tb.type IS '0 支付失败提醒1 红包提醒2 自动支付提醒3 注册提醒 4停车入场提醒5活动提醒6 推荐停车员 7收款提醒 8充值消息 9退款消息';


--
-- Name: COLUMN user_message_tb.hasread; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_message_tb.hasread IS ' 是否已读：0未读，1已读';


--
-- Name: COLUMN user_message_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_message_tb.uin IS '用户/收费员帐号';


--
-- Name: user_payaccount_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_payaccount_tb (
    id bigint NOT NULL,
    uin bigint,
    type integer,
    account character varying(100),
    ctime bigint
);


ALTER TABLE user_payaccount_tb OWNER TO postgres;

--
-- Name: TABLE user_payaccount_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_payaccount_tb IS '用户支付账号表，记录用户支付宝或微信等支付账户';


--
-- Name: COLUMN user_payaccount_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_payaccount_tb.uin IS '车主账号';


--
-- Name: COLUMN user_payaccount_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_payaccount_tb.type IS '0:支付宝，1:微信';


--
-- Name: user_pic_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_pic_tb (
    id bigint NOT NULL,
    pic_url character varying,
    state integer,
    ctime bigint,
    uin bigint,
    driver_year numeric(5,1),
    driver_pic character varying,
    utime bigint,
    resume character varying
);


ALTER TABLE user_pic_tb OWNER TO postgres;

--
-- Name: TABLE user_pic_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_pic_tb IS '用户照片表';


--
-- Name: COLUMN user_pic_tb.pic_url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.pic_url IS '头像地址';


--
-- Name: COLUMN user_pic_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.state IS '状态 0在用 1备用';


--
-- Name: COLUMN user_pic_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.ctime IS '上传日期';


--
-- Name: COLUMN user_pic_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.uin IS '用户账号';


--
-- Name: COLUMN user_pic_tb.driver_year; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.driver_year IS '驾龄';


--
-- Name: COLUMN user_pic_tb.driver_pic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.driver_pic IS '证件照片';


--
-- Name: COLUMN user_pic_tb.utime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.utime IS '更新时间';


--
-- Name: COLUMN user_pic_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_pic_tb.resume IS '批注';


--
-- Name: user_preaddfriend_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_preaddfriend_tb (
    id bigint NOT NULL,
    buin bigint,
    euin bigint,
    atype integer,
    resume character varying,
    ctime bigint,
    utime bigint
);


ALTER TABLE user_preaddfriend_tb OWNER TO postgres;

--
-- Name: TABLE user_preaddfriend_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE user_preaddfriend_tb IS '环信准备加好友表';


--
-- Name: COLUMN user_preaddfriend_tb.buin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.buin IS '自己账号';


--
-- Name: COLUMN user_preaddfriend_tb.euin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.euin IS '车友账号';


--
-- Name: COLUMN user_preaddfriend_tb.atype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.atype IS '好友来源 1同车场车友 2....';


--
-- Name: COLUMN user_preaddfriend_tb.resume; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.resume IS '好友类型说明';


--
-- Name: COLUMN user_preaddfriend_tb.ctime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.ctime IS '添加日期';


--
-- Name: COLUMN user_preaddfriend_tb.utime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_preaddfriend_tb.utime IS '更新日期';


--
-- Name: user_profile_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE user_profile_tb (
    id bigint NOT NULL,
    uin bigint,
    low_recharge integer DEFAULT 30,
    voice_warn integer DEFAULT 0,
    auto_cash integer DEFAULT 0,
    enter_warn integer DEFAULT 0,
    create_time bigint,
    update_time bigint,
    limit_money integer DEFAULT '-100'::integer,
    bolink_limit numeric(10,2) DEFAULT 0
);


ALTER TABLE user_profile_tb OWNER TO tracqdev;

--
-- Name: TABLE user_profile_tb; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON TABLE user_profile_tb IS '所有开关，0是关闭，1是开启';


--
-- Name: COLUMN user_profile_tb.low_recharge; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.low_recharge IS '帐号余额最低冲值提醒';


--
-- Name: COLUMN user_profile_tb.voice_warn; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.voice_warn IS '自动结算';


--
-- Name: COLUMN user_profile_tb.auto_cash; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.auto_cash IS '自动结算';


--
-- Name: COLUMN user_profile_tb.enter_warn; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.enter_warn IS '入场提醒';


--
-- Name: COLUMN user_profile_tb.limit_money; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.limit_money IS '最高自动支付金额,0不自动支付,-1总是自动支付';


--
-- Name: COLUMN user_profile_tb.bolink_limit; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_profile_tb.bolink_limit IS '泊链限额';


--
-- Name: user_role_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE user_role_tb (
    role_name character varying(50),
    state integer DEFAULT 0,
    id bigint NOT NULL,
    oid bigint,
    resume character varying,
    type integer,
    adminid bigint,
    is_inspect integer DEFAULT 0,
    is_collector integer DEFAULT 0,
    is_opencard integer DEFAULT 0
);


ALTER TABLE user_role_tb OWNER TO tracqdev;

--
-- Name: COLUMN user_role_tb.oid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.oid IS '组织类型';


--
-- Name: COLUMN user_role_tb.resume; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.resume IS '说明';


--
-- Name: COLUMN user_role_tb.type; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.type IS '0 管理员 其它成员';


--
-- Name: COLUMN user_role_tb.adminid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.adminid IS '所属管理员账户';


--
-- Name: COLUMN user_role_tb.is_inspect; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.is_inspect IS '是否有巡查功能  默认0无  1有';


--
-- Name: COLUMN user_role_tb.is_collector; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.is_collector IS '是否有收费功能 0：无 1：有';


--
-- Name: COLUMN user_role_tb.is_opencard; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_role_tb.is_opencard IS '是否有激活卡片功能 0：无 1：有';


--
-- Name: user_session_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE user_session_tb (
    id bigint NOT NULL,
    token character varying(40) NOT NULL,
    uin bigint NOT NULL,
    create_time bigint NOT NULL,
    comid bigint,
    version character varying(20),
    groupid bigint
);


ALTER TABLE user_session_tb OWNER TO tracqdev;

--
-- Name: COLUMN user_session_tb.version; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_session_tb.version IS '客户端版本号';


--
-- Name: COLUMN user_session_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN user_session_tb.groupid IS '集团编号';


--
-- Name: user_worksite_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE user_worksite_tb (
    id bigint NOT NULL,
    worksite_id bigint,
    uin bigint
);


ALTER TABLE user_worksite_tb OWNER TO postgres;

--
-- Name: COLUMN user_worksite_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN user_worksite_tb.uin IS '收费员账号';


--
-- Name: verification_code_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE verification_code_tb (
    id bigint NOT NULL,
    verification_code integer,
    uin bigint,
    create_time bigint,
    state bigint
);


ALTER TABLE verification_code_tb OWNER TO tracqdev;

--
-- Name: vip_apply_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE vip_apply_tb (
    id bigint NOT NULL,
    uin bigint,
    mobile character varying(12),
    address character varying(200),
    cname character varying(50),
    car_image character varying(100),
    state integer,
    uid bigint
);


ALTER TABLE vip_apply_tb OWNER TO postgres;

--
-- Name: vip_tb; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW vip_tb AS
 SELECT c.uin,
    p.comid,
    count(c.id) AS bcount,
    sum(c.act_total) AS acttotal,
    sum(c.total) AS atotal,
    max(c.create_time) AS create_time,
    max(c.e_time) AS e_time,
    min(c.id) AS id
   FROM carower_product c,
    product_package_tb p
  WHERE (c.pid = p.id)
  GROUP BY c.uin, p.comid;


ALTER TABLE vip_tb OWNER TO postgres;

--
-- Name: visit_info_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE visit_info_tb (
    id bigint NOT NULL,
    uid bigint NOT NULL,
    contacts bigint,
    address character varying(200),
    create_time bigint,
    state integer,
    visit_content character varying(1000)
);


ALTER TABLE visit_info_tb OWNER TO postgres;

--
-- Name: withdrawer_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE withdrawer_tb (
    id bigint NOT NULL,
    comid bigint DEFAULT '-1'::integer,
    create_time bigint,
    amount numeric(15,2) DEFAULT 0,
    state integer DEFAULT 0,
    update_time bigint,
    acc_id bigint,
    uin bigint DEFAULT '-1'::integer,
    wtype integer DEFAULT 0,
    remark character varying,
    groupid bigint DEFAULT '-1'::integer,
    cityid bigint DEFAULT '-1'::integer
);


ALTER TABLE withdrawer_tb OWNER TO tracqdev;

--
-- Name: COLUMN withdrawer_tb.state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.state IS ' -- 0:等待审核，2已审核，3已到帐，4提现失败';


--
-- Name: COLUMN withdrawer_tb.update_time; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.update_time IS '处理日期';


--
-- Name: COLUMN withdrawer_tb.acc_id; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.acc_id IS '帐号编号';


--
-- Name: COLUMN withdrawer_tb.uin; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.uin IS ' 操作人账号';


--
-- Name: COLUMN withdrawer_tb.wtype; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.wtype IS ' 1个人提现，0公司提现  2对公提现';


--
-- Name: COLUMN withdrawer_tb.remark; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.remark IS '备注';


--
-- Name: COLUMN withdrawer_tb.groupid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.groupid IS ' 运营集团编号';


--
-- Name: COLUMN withdrawer_tb.cityid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN withdrawer_tb.cityid IS ' 城市商户编号';


--
-- Name: work_berthsec_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_berthsec_tb (
    berthsec_id bigint,
    work_group_id bigint DEFAULT '-1'::integer,
    id bigint NOT NULL,
    state integer,
    is_delete integer DEFAULT 0,
    inspect_group_id bigint DEFAULT '-1'::integer
);


ALTER TABLE work_berthsec_tb OWNER TO postgres;

--
-- Name: TABLE work_berthsec_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE work_berthsec_tb IS '工作组对应泊位段表';


--
-- Name: COLUMN work_berthsec_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_berthsec_tb.berthsec_id IS '泊位段编号';


--
-- Name: COLUMN work_berthsec_tb.work_group_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_berthsec_tb.work_group_id IS '工作组编号';


--
-- Name: COLUMN work_berthsec_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_berthsec_tb.state IS '是否已签到 0：否 1: 是';


--
-- Name: COLUMN work_berthsec_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_berthsec_tb.is_delete IS '0 正常 1 已删除 ';


--
-- Name: COLUMN work_berthsec_tb.inspect_group_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_berthsec_tb.inspect_group_id IS '巡查组id';


--
-- Name: work_detail_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_detail_tb (
    id bigint NOT NULL,
    workid bigint,
    uid bigint,
    create_time bigint,
    orderid bigint,
    bid bigint,
    berthsec_id bigint
);


ALTER TABLE work_detail_tb OWNER TO postgres;

--
-- Name: TABLE work_detail_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE work_detail_tb IS '上班详情表';


--
-- Name: COLUMN work_detail_tb.workid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.workid IS '签到表编号';


--
-- Name: COLUMN work_detail_tb.uid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.uid IS '收费员编号';


--
-- Name: COLUMN work_detail_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.create_time IS '时间';


--
-- Name: COLUMN work_detail_tb.orderid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.orderid IS '进场订单编号';


--
-- Name: COLUMN work_detail_tb.bid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.bid IS '泊位编号';


--
-- Name: COLUMN work_detail_tb.berthsec_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_detail_tb.berthsec_id IS '泊位段编号';


--
-- Name: work_employee_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_employee_tb (
    work_group_id bigint,
    employee_id bigint,
    id bigint NOT NULL,
    state integer
);


ALTER TABLE work_employee_tb OWNER TO postgres;

--
-- Name: TABLE work_employee_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE work_employee_tb IS '工作组收费员对应表';


--
-- Name: COLUMN work_employee_tb.work_group_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_employee_tb.work_group_id IS '工作组编号';


--
-- Name: COLUMN work_employee_tb.employee_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_employee_tb.employee_id IS '收费员编号';


--
-- Name: COLUMN work_employee_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_employee_tb.state IS '是否删除 0：否 1 ：是';


--
-- Name: work_group_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_group_tb (
    id bigint NOT NULL,
    uuid character(36),
    workgroup_name character(50),
    company_id bigint,
    create_time bigint,
    update_time bigint,
    is_active integer,
    chanid bigint
);


ALTER TABLE work_group_tb OWNER TO postgres;

--
-- Name: COLUMN work_group_tb.uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_group_tb.uuid IS '唯一编号';


--
-- Name: COLUMN work_group_tb.workgroup_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_group_tb.workgroup_name IS '工作组名称';


--
-- Name: COLUMN work_group_tb.company_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_group_tb.company_id IS '运营公司';


--
-- Name: COLUMN work_group_tb.is_active; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_group_tb.is_active IS '是否可用 0 否1是';


--
-- Name: COLUMN work_group_tb.chanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_group_tb.chanid IS '合作方号';


--
-- Name: work_inspector_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_inspector_tb (
    id bigint NOT NULL,
    inspect_group_id bigint,
    inspector_id bigint,
    state integer
);


ALTER TABLE work_inspector_tb OWNER TO postgres;

--
-- Name: TABLE work_inspector_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE work_inspector_tb IS '工作组巡查员对应表';


--
-- Name: COLUMN work_inspector_tb.inspect_group_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_inspector_tb.inspect_group_id IS '巡查组编号';


--
-- Name: COLUMN work_inspector_tb.inspector_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_inspector_tb.inspector_id IS '巡查员编号';


--
-- Name: COLUMN work_inspector_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_inspector_tb.state IS '是否删除 0：否 1 ：是';


--
-- Name: work_time_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE work_time_tb (
    id bigint NOT NULL,
    b_hour smallint DEFAULT 0,
    b_minute smallint DEFAULT 0,
    e_hour smallint DEFAULT 0,
    e_minute smallint DEFAULT 0,
    role_id bigint DEFAULT '-1'::integer,
    is_delete smallint DEFAULT 0
);


ALTER TABLE work_time_tb OWNER TO postgres;

--
-- Name: TABLE work_time_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE work_time_tb IS '该表存放收费员上班时间段，在该时间段内上班表示正常 ，超出表示迟到早退';


--
-- Name: COLUMN work_time_tb.b_hour; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.b_hour IS '上班(小时)';


--
-- Name: COLUMN work_time_tb.b_minute; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.b_minute IS '上班（分钟）';


--
-- Name: COLUMN work_time_tb.e_hour; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.e_hour IS '下班(小时)';


--
-- Name: COLUMN work_time_tb.e_minute; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.e_minute IS '下班(分钟)';


--
-- Name: COLUMN work_time_tb.role_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.role_id IS '角色编号';


--
-- Name: COLUMN work_time_tb.is_delete; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN work_time_tb.is_delete IS '0：正常 1：删除';


--
-- Name: wxp_user_tb; Type: TABLE; Schema: public; Owner: tracqdev
--

CREATE TABLE wxp_user_tb (
    id bigint NOT NULL,
    openid character varying,
    create_time bigint,
    uin bigint,
    balance numeric(10,2) DEFAULT 0,
    car_number character varying(50),
    union_state integer DEFAULT 0
);


ALTER TABLE wxp_user_tb OWNER TO tracqdev;

--
-- Name: TABLE wxp_user_tb; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON TABLE wxp_user_tb IS '微信用户表';


--
-- Name: COLUMN wxp_user_tb.openid; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN wxp_user_tb.openid IS '微信公众号用户openid';


--
-- Name: COLUMN wxp_user_tb.uin; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN wxp_user_tb.uin IS '用户ID';


--
-- Name: COLUMN wxp_user_tb.balance; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN wxp_user_tb.balance IS '余额';


--
-- Name: COLUMN wxp_user_tb.car_number; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN wxp_user_tb.car_number IS '车牌号';


--
-- Name: COLUMN wxp_user_tb.union_state; Type: COMMENT; Schema: public; Owner: tracqdev
--

COMMENT ON COLUMN wxp_user_tb.union_state IS '是否已同步到泊链 0未同步 1已同步';


--
-- Name: zld_black_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE zld_black_tb (
    id bigint NOT NULL,
    ctime bigint,
    utime bigint,
    uin bigint,
    state integer,
    remark character varying,
    comid bigint DEFAULT '-1'::integer,
    car_number character varying,
    black_uuid character varying,
    operator character varying
);


ALTER TABLE zld_black_tb OWNER TO postgres;

--
-- Name: COLUMN zld_black_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.uin IS '车主账户';


--
-- Name: COLUMN zld_black_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.state IS '状态 0正常，1漂白';


--
-- Name: COLUMN zld_black_tb.remark; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.remark IS '原因';


--
-- Name: COLUMN zld_black_tb.comid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.comid IS '车场编号';


--
-- Name: COLUMN zld_black_tb.car_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.car_number IS '车牌号';


--
-- Name: COLUMN zld_black_tb.black_uuid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.black_uuid IS '收费系统唯一编号';


--
-- Name: COLUMN zld_black_tb.operator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_black_tb.operator IS '操作人';


--
-- Name: zld_game_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE zld_game_tb (
    id bigint NOT NULL,
    uin bigint,
    scroe integer,
    ctime bigint,
    iswin integer DEFAULT 0,
    type integer,
    tid bigint
);


ALTER TABLE zld_game_tb OWNER TO postgres;

--
-- Name: COLUMN zld_game_tb.iswin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_game_tb.iswin IS '是否获胜 0否 1是';


--
-- Name: COLUMN zld_game_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_game_tb.type IS '类型，0普通红包，1打折红包';


--
-- Name: COLUMN zld_game_tb.tid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_game_tb.tid IS '券编号';


--
-- Name: zld_organize_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE zld_organize_tb (
    id bigint NOT NULL,
    name character varying,
    pid bigint,
    type bigint
);


ALTER TABLE zld_organize_tb OWNER TO postgres;

--
-- Name: TABLE zld_organize_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE zld_organize_tb IS '组织表';


--
-- Name: COLUMN zld_organize_tb.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_organize_tb.name IS '名称';


--
-- Name: COLUMN zld_organize_tb.pid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_organize_tb.pid IS '上级编号';


--
-- Name: COLUMN zld_organize_tb.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_organize_tb.type IS '类型 ---zld_orgtype_tb';


--
-- Name: zld_orgtype_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE zld_orgtype_tb (
    id bigint NOT NULL,
    name character varying,
    pid bigint DEFAULT 0,
    state integer DEFAULT 0,
    create_time bigint,
    delete_time bigint,
    update_time bigint,
    sort integer,
    creator_id bigint,
    deletor_id bigint
);


ALTER TABLE zld_orgtype_tb OWNER TO postgres;

--
-- Name: TABLE zld_orgtype_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE zld_orgtype_tb IS '组织机构类型表';


--
-- Name: COLUMN zld_orgtype_tb.pid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.pid IS '父级组织类型编号';


--
-- Name: COLUMN zld_orgtype_tb.state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.state IS '状态 0：正常 1：禁用';


--
-- Name: COLUMN zld_orgtype_tb.create_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.create_time IS '创建时间';


--
-- Name: COLUMN zld_orgtype_tb.delete_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.delete_time IS '删除时间';


--
-- Name: COLUMN zld_orgtype_tb.update_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.update_time IS ' 最后一次更新时间';


--
-- Name: COLUMN zld_orgtype_tb.sort; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.sort IS ' 排序';


--
-- Name: COLUMN zld_orgtype_tb.creator_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.creator_id IS '创建者编号';


--
-- Name: COLUMN zld_orgtype_tb.deletor_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_orgtype_tb.deletor_id IS '删除者编号';


--
-- Name: zld_protocol_tb; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE zld_protocol_tb (
    id bigint NOT NULL,
    uin bigint,
    ctime bigint,
    is_remind integer,
    agree integer
);


ALTER TABLE zld_protocol_tb OWNER TO postgres;

--
-- Name: TABLE zld_protocol_tb; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE zld_protocol_tb IS '协议';


--
-- Name: COLUMN zld_protocol_tb.uin; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_protocol_tb.uin IS '车主账户';


--
-- Name: COLUMN zld_protocol_tb.is_remind; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_protocol_tb.is_remind IS '是否再次提醒 0不提醒 ，1提醒';


--
-- Name: COLUMN zld_protocol_tb.agree; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN zld_protocol_tb.agree IS '是否同意 0不同意，1同意';


--
-- Data for Name: advert_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY advert_tb (id, aname, aurl, ctime, open, hits, appurl, tname) FROM stdin;
\.


--
-- Data for Name: alipay_log; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY alipay_log (id, comid, uin, notify_no, create_time, money, wxp_orderid, orderid) FROM stdin;
\.


--
-- Data for Name: area_ibeacon_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY area_ibeacon_tb (id, ibcid, comid, reg_time, state, pass, major, minor, lng, lat) FROM stdin;
\.


--
-- Data for Name: auth_role_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY auth_role_tb (id, auth_id, role_id, sub_auth, creator_id) FROM stdin;
7007	102	27	0,1,2	\N
7008	81	27	\N	\N
7009	82	27	\N	\N
7010	77	27	\N	\N
7011	78	27	0,1,2,3,4	\N
7012	79	27	0,1,2,3,4	\N
7013	74	27	0,1,2,3	\N
7014	75	27	\N	\N
31356	69	30	\N	\N
31357	2	30	\N	\N
31358	71	30	\N	\N
31359	7	30	\N	\N
31360	11	30	\N	\N
31361	12	30	\N	\N
31362	72	30	0,1,2,3	\N
31363	17	30	0,1,2,3	\N
31364	16	30	\N	\N
31365	84	30	0,1	\N
31366	259	30	0,1,2,3,4	\N
31367	18	30	0,1,2,3,4	\N
31368	21	30	\N	\N
31369	80	30	0,1	\N
30026	69	622	\N	\N
30027	2	622	\N	\N
30028	71	622	0,1,2,3,4	\N
30029	7	622	\N	\N
30030	8	622	\N	\N
30031	10	622	0	\N
30032	11	622	\N	\N
30033	12	622	\N	\N
30034	72	622	0,1,2,3	\N
30035	17	622	0,1,2,3	\N
30036	16	622	\N	\N
30037	84	622	0,1	\N
30038	259	622	0,1,2,3,4	\N
30039	19	622	0,1,2,3,4	\N
30040	18	622	0,1,2,3,4	\N
30041	80	622	0,1	\N
30042	20	622	0,1,2,3	\N
30043	83	622	0,1,2	\N
30044	260	622	0,1,2,3	\N
30045	25	622	0,1,2	\N
30046	24	622	\N	\N
30047	27	622	0,1,2,3,4,5,6,259,260	\N
30048	26	622	0,1	\N
30049	29	622	0,1,2,3	\N
30050	28	622	0,1,2,3,4	\N
30051	297	622	0,1	\N
30052	298	622	0,1	\N
31370	83	30	0,1	\N
31371	23	30	0,1,2,3,4,5	\N
31372	22	30	0,1,2,3,4	\N
31373	25	30	0,1,2	\N
31374	24	30	\N	\N
31375	27	30	0,1,2,3,4,259	\N
31376	26	30	0,1	\N
31377	29	30	0,1,2,3	\N
31378	28	30	0,1,2,3,4	\N
31379	306	30	0,1,2	\N
31380	311	30	0	\N
31381	310	30	0,1,2,3	\N
31382	313	30	0,1,2,3,4	\N
31383	312	30	0,1	\N
31384	297	30	0,1	\N
31385	298	30	0,1,2,3,4,5,6	\N
31386	299	30	0,1,2,3,4,5	\N
31387	300	30	0	\N
31388	302	30	0	\N
31634	139	29	0	\N
31635	138	29	0,1	\N
31636	140	29	0,1	\N
30699	71	628	\N	\N
30700	21	628	\N	\N
30701	23	628	0,1,2,4,5	\N
30702	299	628	0,1,2,3,4	\N
30703	300	628	0	\N
31637	129	29	130,131,132	\N
31638	197	29	0,1,2,3	\N
31639	128	29	133,134	\N
31640	281	29	0	\N
31641	131	29	0,1,2,3,4	\N
31642	130	29	0,1	\N
31643	198	29	0,1,2,3	\N
31644	133	29	0,1,2,3,4	\N
31645	132	29	0,1,2,3	\N
31646	195	29	197,198	\N
31647	135	29	0,1,2,3,4	\N
31648	134	29	0,1,2,3,4	\N
31649	257	29	0	\N
31650	145	29	0	\N
31651	147	29	0,1,2,3,4	\N
31652	149	29	0,1	\N
31653	171	29	180,257,281	\N
31654	304	29	0,1	\N
31655	173	29	304	\N
31656	172	29	255,293	\N
31657	119	29	\N	\N
31658	255	29	0	\N
31659	293	29	0	\N
31660	294	29	295,296	\N
31661	295	29	0	\N
31662	296	29	0	\N
31663	127	29	\N	\N
31664	123	29	\N	\N
31665	122	29	\N	\N
31666	180	29	0	\N
31667	120	29	\N	\N
31668	303	29	0,1	\N
31341	2	631	\N	\N
31342	71	631	\N	\N
31343	311	631	0	\N
31344	11	631	\N	\N
31345	12	631	\N	\N
31346	84	631	0,1	\N
31347	21	631	\N	\N
31348	83	631	0,1	\N
31349	23	631	0,1,2,3,4,5	\N
31350	22	631	0,1,2,3,4	\N
31351	25	631	0,1,2	\N
31352	24	631	\N	\N
31353	299	631	0,1,2,3,4,5	\N
31354	300	631	0	\N
31355	302	631	0	\N
29517	69	621	\N	\N
29518	2	621	\N	\N
29519	70	621	\N	\N
29520	71	621	0,1,2,3,4	\N
29521	7	621	\N	\N
29522	8	621	\N	\N
29523	9	621	0,1	\N
29524	10	621	0	\N
29525	11	621	\N	\N
29526	72	621	0,1,2,3	\N
29527	12	621	\N	\N
29528	13	621	\N	\N
29529	73	621	\N	\N
29530	14	621	\N	\N
29531	15	621	0,1,2,3	\N
29532	17	621	0,1,2,3	\N
29533	259	621	0,1,2,3,4	\N
29534	84	621	0,1	\N
29535	16	621	\N	\N
29536	19	621	0,1,2,3,4	\N
29537	18	621	0,1,2,3,4	\N
29538	21	621	\N	\N
29539	80	621	0,1	\N
29540	20	621	0,1,2,3	\N
29541	260	621	0,1,2,3	\N
29542	83	621	0,1,2	\N
29543	23	621	0,1,2,3,4,5	\N
29544	22	621	0,1,2,3,4	\N
29545	25	621	0,1,2	\N
29546	24	621	\N	\N
29547	27	621	0,1,2,3,4,5,6,259,260	\N
29548	26	621	0,1	\N
29549	29	621	0,1,2,3	\N
29550	28	621	0,1,2,3,4	\N
29551	297	621	0,1	\N
29552	298	621	0,1	\N
17787	1	0	0,1,2,3,4,5,6,7	\N
17788	267	0	0,1,2,3	\N
17789	31	0	0,1,2,3	\N
17790	34	0	0,1,2	\N
17791	35	0	0,1,2,3	\N
17792	32	0	0,1,2	\N
17793	33	0	0,1,2,3,4,5,6	\N
17794	38	0	\N	\N
17795	39	0	\N	\N
17796	36	0	\N	\N
17797	37	0	0,1	\N
17798	42	0	\N	\N
17799	43	0	\N	\N
17800	40	0	\N	\N
17801	41	0	\N	\N
17802	46	0	\N	\N
17803	47	0	\N	\N
17804	44	0	\N	\N
17805	45	0	\N	\N
17806	51	0	\N	\N
17807	50	0	\N	\N
17808	49	0	\N	\N
17809	48	0	\N	\N
17810	54	0	0,1,2,3,4	\N
17811	53	0	89,90,118	\N
17812	52	0	0,1,2,3,4	\N
17813	59	0	0,1,2,3,4	\N
17814	58	0	\N	\N
17815	57	0	0,1,2,3	\N
17816	56	0	\N	\N
17817	63	0	0,1,2	\N
17818	61	0	0,1,2,3,4,5	\N
17819	60	0	0,1,2,3	\N
17820	64	0	0,1,2,3,4,5	\N
17821	65	0	\N	\N
17822	66	0	\N	\N
17823	67	0	0,1,2	\N
17824	93	0	0	\N
17825	92	0	93,94,95,96	\N
17826	95	0	0	\N
17827	94	0	0	\N
17828	89	0	0,1,2,3,4	\N
17829	91	0	0,1,2,3,4	\N
17830	90	0	0,1,2,3,4	\N
17831	100	0	0,1	\N
17832	101	0	0	\N
17833	98	0	0,1	\N
17834	99	0	0,1	\N
17835	96	0	0	\N
17836	97	0	98,99,100,101	\N
17837	118	0	0,1,2,3,4	\N
17838	117	0	\N	\N
30945	283	26	0	\N
30946	282	26	0	\N
30947	284	26	0,1	\N
30948	220	26	225,258,282	\N
30949	258	26	0	\N
30950	223	26	305	\N
30951	219	26	\N	\N
30656	220	627	225	\N
30657	219	627	\N	\N
30658	208	627	0,1	\N
30659	106	627	0,1	\N
30660	209	627	0	\N
30661	225	627	0	\N
30662	104	627	0,1	\N
30663	105	627	\N	\N
30952	212	26	\N	\N
30953	214	26	0,1,2,3,4	\N
30954	215	26	0,1	\N
30955	208	26	0	\N
30956	305	26	0,1	\N
30957	239	26	245,246	\N
30958	238	26	\N	\N
30959	309	26	0	\N
30960	308	26	0,1,2,3	\N
30961	233	26	0,1,2,3	\N
30962	232	26	0,1,2,3	\N
30963	229	26	232,233,308,309	\N
30964	106	26	0,1	\N
30965	104	26	0,1	\N
30966	225	26	0	\N
30967	105	26	\N	\N
30968	115	26	\N	\N
30969	114	26	\N	\N
30970	248	26	0,1,2,3	\N
30971	246	26	0,1,2,3,4	\N
30972	247	26	0,1	\N
30973	244	26	0,1,283,284	\N
30974	245	26	0,1,2,3,4	\N
30975	301	26	0	\N
30976	243	26	0,1,2,3,4	\N
30977	240	26	247,248	\N
30610	69	626	\N	\N
30611	2	626	\N	\N
30612	71	626	\N	\N
30613	7	626	\N	\N
30614	11	626	\N	\N
30615	72	626	0,1,2,3	\N
30616	12	626	\N	\N
30617	17	626	0,1,2,3	\N
30618	16	626	\N	\N
30619	84	626	0,1	\N
30620	259	626	0,1,2,3,4	\N
30621	19	626	0,1,2,3,4	\N
30622	18	626	0,1,2,3,4	\N
30623	21	626	\N	\N
30624	80	626	0,1	\N
30625	20	626	0,1,2,3	\N
30626	83	626	0,1,2	\N
30627	23	626	0,1,2,3,4,5	\N
30628	260	626	0,1,2,3	\N
30629	22	626	0,1,2,3,4	\N
30630	25	626	0,1,2	\N
30631	24	626	\N	\N
30632	27	626	0,1,2,3,4,5,6,259,260	\N
30633	26	626	0,1	\N
30634	29	626	0,1,2,3	\N
30635	28	626	0,1,2,3,4	\N
30636	297	626	0,1	\N
30637	298	626	0,1	\N
30638	299	626	0,1,2,3,4,5	\N
30639	300	626	0	\N
31295	69	630	\N	\N
31296	2	630	\N	\N
31297	71	630	\N	\N
31298	7	630	\N	\N
31299	11	630	\N	\N
31300	12	630	\N	\N
31301	72	630	0,1,2,3	\N
31302	17	630	0,1,2,3	\N
31303	16	630	\N	\N
31304	84	630	0,1	\N
31305	259	630	0,1,2,3,4	\N
31306	18	630	0,1,2,3,4	\N
31307	80	630	0,1	\N
31308	83	630	0,1	\N
31309	260	630	0,1,2,3	\N
31310	25	630	0,1,2	\N
31311	24	630	\N	\N
31312	27	630	0,1,2,3,4,5,6,259,260	\N
31313	26	630	0,1	\N
31314	29	630	0,1,2,3	\N
31315	28	630	0,1,2,3,4	\N
31316	306	630	0,1,2	\N
31317	311	630	0	\N
31318	310	630	0,1,2,3	\N
31319	313	630	0,1,2,3,4	\N
31320	312	630	0,1	\N
31321	297	630	0,1	\N
31322	298	630	0,1,2,3,4,5,6	\N
31323	299	630	0,1,2,3,4,5	\N
31324	300	630	0	\N
31325	302	630	0	\N
\.


--
-- Data for Name: auth_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY auth_tb (id, nname, state, isparent, nid, pid, sub_auth, url, oid, sort, actions, create_time, delete_time, update_time, creator_id, deletor_id, show) FROM stdin;
10	电子收款	0	f	0	8	查看	parkaccountaly.do?isparkcloud=1	8	81	query	\N	\N	\N	\N	\N	0
8	电子支付	0	f	0	0		parkepaymenu.do	8	3	\N	\N	\N	\N	\N	\N	0
11	统计分析	0	f	0	0		parkanlysis.do	8	4	\N	\N	\N	\N	\N	\N	0
9	提现管理	0	f	0	8	查看,提现申请	withdraw.do	8	80	query,parkinfo.do?action=withdraw	\N	\N	\N	\N	\N	0
16	设备管理	0	f	0	0		carplate.do	8	7	\N	\N	\N	\N	\N	\N	0
21	员工权限	0	f	0	0		membermanage.do	8	8	\N	\N	\N	\N	\N	\N	0
24	系统管理	0	f	0	0		parkmanagemenu.do	8	9	\N	\N	\N	\N	\N	\N	0
12	时租订单统计	0	f	0	11		orderanly.do	8	110	\N	\N	\N	\N	\N	\N	0
13	月卡套餐统计	0	f	0	11		productanlysis.do	8	111	\N	\N	\N	\N	\N	\N	0
14	中央预支付统计	0	f	0	11		midpreanlysis.do	8	112	\N	\N	\N	\N	\N	\N	0
19	摄像头管理	0	f	0	16	查看,添加,编辑,删除,修改密码	parkcamera.do	8	162	query,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
22	角色管理	0	f	0	21	查看,添加,编辑,删除,编辑权限	adminrole.do	8	210	query,create,edit,delete,editrole	\N	\N	\N	\N	\N	0
23	员工管理	0	f	0	21	查看,注册,编辑,不可收费,删除,修改密码	member.do	8	211	query,create,edit,isview,delete,editpass	\N	\N	\N	\N	\N	0
25	账户管理	0	f	0	24	查看,保存,提现申请	parkinfo.do	8	240	,edit,withdraw	\N	\N	\N	\N	\N	0
26	参数设置	0	f	0	24	查看,保存	parkinfo.do?type=set	8	241	,parkset	\N	\N	\N	\N	\N	0
17	工作站管理	0	f	0	16	查看,添加,编辑,删除	parkworksite.do	8	160	worksitequery,create,edit,delete	\N	\N	\N	\N	\N	0
29	月卡套餐管理	0	f	0	24	查看,添加,编辑,删除	package.do	8	245	query,create,edit,delete	\N	\N	\N	\N	\N	0
1	停车场管理	0	t	0	0	查看,注册,编辑,删除,不显示在APP,设置,车场趋势,审核UGC车场	parking.do	5	0	query,create,modify,delete,isview,parksetting.do,parklalaanly.do?action=parkidle,ugc	\N	\N	\N	\N	\N	0
31	会员管理	0	f	0	0	查看,认证,发送短信,审核车牌	carower.do	5	1	query,authuser,sendmesg,	\N	\N	\N	\N	\N	0
47	来源统计	0	f	0	36		bonusanly.do	5	370	\N	\N	\N	\N	\N	\N	0
53	组织机构管理	0	f	0	51		organize.do	5	511	\N	\N	\N	\N	\N	\N	0
57	商圈管理	0	f	0	56	查看,注册,编辑,删除	bizcircle.do	5	561	query,create,edit,delete	\N	\N	\N	\N	\N	0
36	统计分析	0	f	0	0		anlysismenu.do	5	6	\N	\N	\N	\N	\N	\N	0
56	综合设置	0	f	0	0		syssetmenu.do	5	8	\N	\N	\N	\N	\N	\N	0
58	推荐查询	0	f	0	56		recomview.do	5	562	\N	\N	\N	\N	\N	\N	0
63	手机管理	0	f	0	56	查看,添加,编辑	mobilemanage.do	5	567	query,create,edit	\N	\N	\N	\N	\N	0
32	停车券管理	0	f	0	0	查看,车场专用券,导出	ticket.do	5	2	query,parkticket.do,exportExcel	\N	\N	\N	\N	\N	0
37	停车员积分排名	0	f	0	36	查看,发放奖金	collectorsort.do	5	360	query,sendmoney	\N	\N	\N	\N	\N	0
52	组织机构类型	0	f	0	51	查看,添加,编辑,删除,修改权限	orgtype.do	5	510	query,create,edit,delete,editauthrole	\N	\N	\N	\N	\N	0
27	车型管理	0	f	0	24	查看,添加,编辑,删除,设置区分大小车	cartype.do	8	243	query,create,edit,delete,setusecartype	\N	\N	\N	\N	\N	0
38	联网车场订单统计	0	f	0	36		nfcanlysis.do	5	361	\N	\N	\N	\N	\N	\N	0
39	车场交易统计	0	f	0	36		mobileanlysis.do	5	362	\N	\N	\N	\N	\N	\N	0
40	总交易统计	0	f	0	36		mobileanlysis.do	5	363	\N	\N	\N	\N	\N	\N	0
41	注册统计	0	f	0	36		reganlysis.do	5	364	\N	\N	\N	\N	\N	\N	0
42	拜访记录	0	f	0	36		visitanlysis.do	5	365	\N	\N	\N	\N	\N	\N	0
43	速通卡统计	0	f	0	36		easypass.do	5	366	\N	\N	\N	\N	\N	\N	0
44	收费员在岗车场统计	0	f	0	36		hasparker.do	5	367	\N	\N	\N	\N	\N	\N	0
45	支付宝微信充值统计	0	f	0	36		charge.do	5	368	\N	\N	\N	\N	\N	\N	0
46	新增交易用户数统计	0	f	0	36		consumeanlysis.do	5	369	\N	\N	\N	\N	\N	\N	0
48	补贴和停车费统计	0	f	0	36		allowance.do	5	371	\N	\N	\N	\N	\N	\N	0
49	已校验可支付车场统计	0	f	0	36		efparkanlysis.do	5	372	\N	\N	\N	\N	\N	\N	0
50	打赏统计	0	f	0	36		reward.do	5	373	\N	\N	\N	\N	\N	\N	0
51	权限管理	0	f	0	0		authmenu.do	5	7	\N	\N	\N	\N	\N	\N	0
290	储值卡收入分析	0	f	\N	223	查看	cardanlysis.do	2	0	query	\N	\N	\N	\N	\N	0
59	NFC号管理	0	f	0	56	查看,编辑,启用_停用,添加,速通卡用户	nfcmanage.do	5	563	query,edit,modify,create,sutong	\N	\N	\N	\N	\N	0
60	Ibeacon管理	0	f	0	56	查看,添加,编辑,删除	ibeacon.do	5	564	query,create,edit,delete	\N	\N	\N	\N	\N	0
64	黑名单管理	0	f	0	56	查看,漂白_还原,重置黑名单缓存,查看黑名单缓存,重置白名单缓存,查看白名单缓存	blackuser.do	5	568	query,edit,reload,viewmemcache,reloadwhite,viewwhitememcache	\N	\N	\N	\N	\N	0
65	查看评论	0	f	0	56		parkpraise.do	5	569	\N	\N	\N	\N	\N	\N	0
30	城市管理	1	f	0	0	查询,添加,修改,删除	city.do	7	0	\N	\N	1460805751	\N	\N	1000001	0
291	泊位收费分析	0	f	\N	222	查看	statsberth.do	2	0	query	\N	\N	\N	\N	\N	0
292	服务器同步管理	0	f	\N	66	查看	serverasync.do	5	0	query	\N	\N	\N	\N	\N	0
15	车位管理	0	f	0	0	查看,添加,编辑,删除	compark.do	8	6	query,create,edit,delete	\N	\N	\N	\N	\N	0
66	设备管理	0	f	0	0		devicemenu.do	5	9	\N	\N	\N	\N	\N	\N	0
69	概况	0	f	0	0		survey.do	8	0	\N	\N	\N	\N	\N	\N	0
93	停车宝账户	0	f	0	92	查看	tcbaccountaly.do	5	900	query	\N	\N	\N	\N	\N	0
79	员工管理	0	f	0	75	查看,注册,编辑,删除,修改密码	chanmember.do	3	0	query,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
102	服务器管理	0	f	0	77	查看,添加,编辑	localserver.do	3	0	localserver,add,edit	\N	\N	\N	\N	\N	0
75	员工权限	0	f	0	0		membermanage.do	3	3	\N	\N	\N	\N	\N	\N	0
82	LOGO品牌自定义	0	f	0	81		cloudlogo.do?action=cloud	3	0	\N	\N	\N	\N	\N	\N	0
81	系统管理	0	f	0	0		logomanage.do	3	4	\N	\N	\N	\N	\N	\N	0
2	订单管理	0	f	0	0		parkordermenu.do	8	1	\N	\N	\N	\N	\N	\N	0
72	免费原因	0	f	0	24	查看,添加,编辑,删除	freereasons.do	8	242	query,create,edit,delete	\N	\N	\N	\N	\N	0
33	停车员管理	0	f	0	0	查看,编辑,删除,禁用,发送短信,待审核停车员,待绑定停车员账户	collector.do	5	3	query,editquota,delcollector,delete,sendmesg,validateuser,useraccount	\N	\N	\N	\N	\N	0
70	商户减免券统计	0	f	0	11		shopticketanlysis.do	8	113	\N	\N	\N	\N	\N	\N	0
73	停车位月卡收费台账	0	f	0	11		plotprod.do	8	114	\N	\N	\N	\N	\N	\N	0
20	LED屏管理	0	f	0	16	查看,编辑,添加,删除	led.do	8	163	query,edit,create,delete	\N	\N	\N	\N	\N	0
28	时租价格管理	0	f	0	24	查看,添加,编辑,删除,编辑辅助价格	price.do	8	244	query,create,edit,delete,createassist	\N	\N	\N	\N	\N	0
293	停车场收费历史汇总	0	f	\N	172	查看	staticfeebypark.do	7	0	query	\N	\N	\N	\N	\N	0
92	账户统计	0	f	0	36		a.do	5	374	\N	\N	\N	\N	\N	\N	0
97	泊车管理	0	f	0	56		b.do	5	570	\N	\N	\N	\N	\N	\N	0
95	收费员账户	0	f	0	92	查看	parkuseraccountaly.do	5	902	query	\N	\N	\N	\N	\N	0
96	停车场账户	0	f	0	92	查看	parkaccountaly.do	5	903	query	\N	\N	\N	\N	\N	0
98	泊车点管理	0	f	0	97	查看,添加	carstops.do	5	970	query,create	\N	\N	\N	\N	\N	0
77	设备管理	0	f	0	0		devicemenu.do	3	2	\N	\N	\N	\N	\N	\N	0
114	概况	0	f	0	0		gsurvey.do	2	1	\N	\N	\N	\N	\N	\N	0
100	泊车员管理	0	f	0	97	查看,编辑	parkattendant.do	5	972	query,edit	\N	\N	\N	\N	\N	0
101	泊车订单	0	f	0	97	查看	ctorders.do	5	973	query	\N	\N	\N	\N	\N	0
78	角色管理	0	f	0	75	查看,添加,编辑,删除,编辑权限	adminrole.do	3	0	query,create,edit,delete,editrole	\N	\N	\N	\N	\N	0
74	停车场管理	0	f	0	0	查看,注册,编辑,设置	channelpark.do	3	1	query,query,edit,set	\N	\N	\N	\N	\N	0
94	车主账户	0	f	0	92	查看	useraccountaly.do	5	901	query	\N	\N	\N	\N	\N	0
84	抬杆记录	0	f	0	2	查看,导出	liftrod.do	8	21	query,exportExcel	\N	\N	\N	\N	\N	0
18	通道管理	0	f	0	16	查看,添加,编辑,删除,道闸	parkpassedit.do	8	161	passquery,create,edit,delete,brake	\N	\N	\N	\N	\N	0
34	账户管理	0	f	0	0	查看,打开节日发送礼包,打开收费员消息	account.do	5	4	query,hbonous,cmessage	\N	\N	\N	\N	\N	0
35	提现管理	0	f	0	0	查看,处理,导出,批量处理	parkwithdraw.do	5	5	query,edit,excle,multiedit	\N	\N	\N	\N	\N	0
91	员工管理	0	f	0	51	查看,添加,编辑,重置密码,删除	marketer.do	5	514	query,create,edit,editpass,delete	\N	\N	\N	\N	\N	0
89	渠道管理	0	f	0	53	查看,添加,编辑,删除,设置	channel.do	5	530	quickquery,create,edit,delete,set	\N	\N	\N	\N	\N	0
294	运营集团收入分析	0	f	\N	127			7	0		\N	\N	\N	\N	\N	0
61	二维码管理	0	f	0	56	查看,编辑,删除,注册,导出,修改使用状态	qrmanage.do	5	565	query,edit,delete,create,excle,isuse	\N	\N	\N	\N	\N	0
67	服务器管理	0	f	0	66	查看,添加,编辑	localserver.do	5	660	quickquery,add,edit	\N	\N	\N	\N	\N	0
105	业务订单	0	f	0	0		parkordermenu.do	2	2		\N	\N	\N	\N	\N	0
113	电子收款	1	f	0	107	查看	parkaccountaly.do?isparkcloud=1	2	0	query	\N	1460820227	\N	\N	1000001	0
106	抬杆记录	0	f	0	105	查看,导出	liftrod.do	2	10508	query,exportExcel	\N	\N	\N	\N	\N	0
110	时租订单统计	1	f	0	109		orderanly.do	2	0	\N	\N	1460820475	\N	\N	1000001	0
109	统计分析	1	f	0	0		parkanlysis.do	2	7	\N	\N	1460820487	\N	\N	1000001	0
103	服务器管理	1	f	0	115	查看,添加,编辑	localserver.do	2	0	quickquery,add,edit	\N	1460820753	\N	\N	1000001	0
86	员工权限	1	f	0	0		membermanage.do	2	3	\N	\N	1460821177	\N	\N	1000001	0
107	支付	0	f	0	0		parkepaymenu.do	2	4		\N	\N	\N	\N	\N	0
115	设备	0	f	0	0		devicemenu.do	2	7		\N	\N	\N	\N	\N	0
108	提现管理	0	f	0	107	查看,提现申请	groupwithdraw.do	2	10702	query,withdraw	\N	\N	\N	\N	\N	0
112	中央预支付统计	1	f	0	109		midpreanlysis.do	2	0	\N	\N	1460820480	\N	\N	1000001	0
111	月卡套餐统计	1	f	0	109		productanlysis.do	2	0	\N	\N	1460820477	\N	\N	1000001	0
99	泊车价格管理	0	f	0	97	查看,添加	carstopsprice.do	5	971	query,create	\N	\N	\N	\N	\N	0
295	运营集团收费今日汇总	0	f	\N	294	查看	feebygroup.do	7	0	query	\N	\N	\N	\N	\N	0
117	功能管理	0	f	0	51		orgmanage.do?action=orgtree	5	0		\N	\N	\N	\N	\N	0
83	订单记录	0	f	0	2	查看,导出,0元结算	order.do	8	20	query,exportExcel,completezeroorder	\N	\N	\N	\N	\N	0
55	功能期限管理	1	f	0	51	查看,添加,编辑,删除	authmanage.do	5	513	query,create,edit,delete	\N	1460804725	\N	\N	1000001	0
118	城市管理	0	f	\N	53	查看,添加,编辑,删除,设置	city.do	5	0	quickquery,create,edit,delete,set	\N	\N	\N	\N	\N	0
90	集团管理	0	f	0	53	查看,添加,编辑,删除,设置	citygroup.do	5	531	quickquery,create,edit,delete,set	\N	\N	\N	\N	\N	0
121	指挥中心	0	f	\N	0		citycommand.do	7	4		\N	\N	\N	\N	\N	0
126	控制台	0	f	\N	0		cityindex.do	7	0		\N	\N	\N	\N	\N	0
127	决策分析	0	f	\N	0		cityanlysis.do	7	5		\N	\N	\N	\N	\N	0
129	企业信息	0	f	\N	119			7	11901		\N	\N	\N	\N	\N	0
139	在场车辆	0	f	\N	123	查看,0元结算	cityunorder.do	7	12301	query,completezeroorder	\N	\N	\N	\N	\N	0
155	城市商户账户	0	f	\N	151	查看	cityaccount.do	7	0	query	\N	\N	\N	\N	\N	0
156	运营集团账户	0	f	\N	151	查看	groupaccount.do	7	0	query	\N	\N	\N	\N	\N	0
157	停车场账户	0	f	\N	151	查看	cityparkaccount.do	7	0	query	\N	\N	\N	\N	\N	0
152	总提现管理	1	f	\N	125	查看,处理,批量处理	3plwithdraw.do	7	0	query,edit,multiedit	\N	1460809456	\N	\N	1000001	0
161	综合监测	1	f	\N	125	查看	synthetictest.do	7	0	query	\N	1460809705	\N	\N	1000001	0
85	停车场管理	1	f	0	0	查看,注册,编辑,设置	grouppark.do	2	2	query,create,edit,set	\N	1460821147	\N	\N	1000001	0
87	角色管理	1	f	0	86	查看,添加,编辑,删除,编辑权限	adminrole.do	2	0	query,create,edit,delete,editrole	\N	1460821169	\N	\N	1000001	0
135	停车场管理	0	f	\N	119	查看,注册,编辑,删除,设置	citypark.do	7	11902	query,create,edit,delete,set	\N	\N	\N	\N	\N	0
136	泊位段管理	0	f	\N	119	查看,注册,编辑,删除,绑定泊位,解绑泊位	cityberthseg.do	7	11903	quickquery,create,edit,delete,bindberth,unbindberth	\N	\N	\N	\N	\N	0
141	预约订单	0	f	\N	123	查看	reserveorder.do	7	12304	query	\N	\N	\N	\N	\N	0
138	日志管理	0	f	\N	119	查看,导出	parklogs.do	7	11906	query,export	\N	\N	\N	\N	\N	0
130	账户信息设置	0	f	\N	129	查看,编辑	cityinfo.do	7	12901	,edit	\N	\N	\N	\N	\N	0
131	运营集团管理	0	f	\N	129	查看,添加,编辑,删除,设置	citygroup.do	7	12902	quickquery,create,edit,delete,set	\N	\N	\N	\N	\N	0
132	区域管理	0	f	\N	129	查看,添加,编辑,删除	cityarea.do	7	12903	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
133	角色管理	0	f	\N	128	查看,添加,编辑,删除,编辑权限	adminrole.do	7	12801	query,create,edit,delete,editrole	\N	\N	\N	\N	\N	0
134	人员管理	0	f	\N	128	查看,注册,编辑,删除,修改密码	citymember.do	7	12802	query,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
162	综合监测	0	f	\N	121	查看	synthetictest.do	7	12101	query	\N	\N	\N	\N	\N	0
146	全部会员	0	f	\N	122	查看,发送短信	citycarowner.do	7	12201	query,carower.do?action=sendmesg	\N	\N	\N	\N	\N	0
147	月卡会员	0	f	\N	122	查看,注册,编辑,修改车牌,续费	cityvip.do	7	12202	query,create,edit,vipuser.do?action=addcar,renew	\N	\N	\N	\N	\N	0
128	人力资源	0	f	\N	119			7	11905		\N	\N	\N	\N	\N	0
149	黑名单管理	0	f	\N	122	查看,漂白	cityblack.do	7	12204	query,blackuser.do?action=edit	\N	\N	\N	\N	\N	0
140	订单记录	0	f	\N	123	查看,导出订单	cityorder.do	7	12302	query,exportExcel	\N	\N	\N	\N	\N	0
142	大额订单	0	f	\N	123	查看	citybigorder.do	7	12305	query	\N	\N	\N	\N	\N	0
143	欠费会员	0	f	\N	123	查看	planmember.do	7	12306	query	\N	\N	\N	\N	\N	0
144	未缴明细	0	f	\N	123	查看	parkescape.do	7	12307	query	\N	\N	\N	\N	\N	0
145	异常抬杆	0	f	\N	123	查看	citylift.do	7	12308	query	\N	\N	\N	\N	\N	0
119	系统设置	0	f	\N	0		sysmanage.do	7	8		\N	\N	\N	\N	\N	0
124	诱导	0	f	\N	0		inducemenu.do	7	6		\N	\N	\N	\N	\N	0
151	结算账户明细	0	f	\N	125			7	12501		\N	\N	\N	\N	\N	0
150	城市提现管理	0	f	\N	125	查看,提现	citywithdraw.do	7	12502	query,withdraw	\N	\N	\N	\N	\N	0
104	订单记录	0	f	0	105	查看,导出订单	cityorder.do	2	10502	query,exportExcel	\N	\N	\N	\N	\N	0
158	车主会员账户	1	f	\N	151	查看	cityuseraccount.do	7	0	query	\N	1460991565	\N	\N	1000001	0
159	公司账户	1	f	\N	153	查看,注册,编辑,删除	bankaccount.do?type=0	7	0	query,comaccount.do?action=create,comaccount.do?action=edit,comaccount.do?action=editstate	\N	1460991790	\N	\N	1000001	0
160	对公账户	1	f	\N	153	查看,注册,编辑,删除	bankaccount.do?type=2	7	0	query,comaccount.do?action=create,comaccount.do?action=edit,comaccount.do?action=editstate	\N	1460991792	\N	\N	1000001	0
153	提现账户	1	f	\N	125			7	12503		\N	1460991821	\N	\N	1000001	0
125	支付	0	f	\N	0		paymenu.do	7	3		\N	\N	\N	\N	\N	0
123	业务订单	0	f	\N	0		parkordermenu.do	7	1		\N	\N	\N	\N	\N	0
148	储值卡会员	0	f	\N	122	查看,停用	cityrfid.do	7	12203	query,nfcmanage.do?action=modify	\N	\N	\N	\N	\N	0
120	设备	0	f	\N	0		devicemenu.do	7	7		\N	\N	\N	\N	\N	0
122	会员	0	f	\N	0		vipmanage.do	7	2		\N	\N	\N	\N	\N	0
163	基站监测	0	f	\N	121	地图,列表	transmittermonitor.do	7	12102	gettransmitter,gettransmitter.do	\N	\N	\N	\N	\N	0
167	告警事件管理	0	f	\N	166	查看,添加,导出,发布	alertevent.do	7	16601	query,create,export,send	\N	\N	\N	\N	\N	0
296	运营集团收费历史汇总	0	f	\N	294	查看	staticfeebygroup.do	7	0	query	\N	\N	\N	\N	\N	0
168	停车高峰预警	0	f	\N	166	查看,添加,导出,发布	citypeakalert.do	7	16602	query,create,export.send	\N	\N	\N	\N	\N	0
239	人力资源	0	f	\N	238			2	23805		\N	\N	\N	\N	\N	0
164	诱导监测	0	f	\N	121	地图,列表	cityinducedmonitor.do	7	12103	getinduce,cityinduce.do	\N	\N	\N	\N	\N	0
165	视频监控	0	f	\N	121	查看	videosurvillance.do	7	12104	query	\N	\N	\N	\N	\N	0
169	热点区域管理	0	f	\N	166	查看,添加,编辑,删除,导出,绑定车场	hotareamanage.do	7	16603	query,create,edit,delete,export,parkdetail	\N	\N	\N	\N	\N	0
179	停车场分布情况分析	0	f	\N	170	车场统计,泊位统计	cityparkanly.do	7	0	parkcolumn,berthcol	\N	\N	\N	\N	\N	0
181	中央预支付统计	0	f	\N	171	查看	midpreanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
182	收费趋势曲线	0	f	\N	172	查看	colltrend.do	7	0	querytrend	\N	\N	\N	\N	\N	0
183	月卡套餐统计	0	f	\N	173	查看	productanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
184	高峰预警时长	0	f	\N	174	车场高峰预警时长	peakgantt.do	7	0	peakgantt	\N	\N	\N	\N	\N	0
185	泊位周转率	0	f	\N	174	查看	parkingturnover.do	7	0	query	\N	\N	\N	\N	\N	0
186	泊位利用趋势	0	f	\N	174	查看	berthtrend.do	7	0	querytrend	\N	\N	\N	\N	\N	0
187	泊位平均收入	0	f	\N	175	查看	berthavgmoney.do	7	0	query	\N	\N	\N	\N	\N	0
213	储值卡会员	0	f	\N	212	查看,编辑,激活,充值,注销,删除	card.do	2	21202	query,edit,bind,charge,unbind,delete	\N	\N	\N	\N	\N	0
177	会员注册统计	0	f	\N	176	查看	reganlysis.do	7	0	query	\N	\N	\N	\N	\N	0
116	月卡会员	1	f	0	0	查看,注册,编辑,修改车牌,删除,导出,续费	vipuser.do	2	4	query,create,edit,getcar,delete,exportExcel,renew	\N	1460819812	\N	\N	1000001	0
194	道路停车设备	0	f	\N	120			7	12002		\N	\N	\N	\N	\N	0
195	封闭车场设备	0	f	\N	120			7	12003		\N	\N	\N	\N	\N	0
202	视频监控设备	0	f	\N	193	查看,添加,编辑,删除	cityvideo.do	7	19302	query,create,edit,delete	\N	\N	\N	\N	\N	0
205	基站管理	0	f	\N	194	查看,编辑	citytransmitter.do	7	19402	query,edit	\N	\N	\N	\N	\N	0
204	POS机管理	0	f	\N	194	查看,添加,修改,删除,导出	citypos.do	7	19401	query,create,edit,delete,exppos	\N	\N	\N	\N	\N	0
206	车检器管理	0	f	\N	194	查看	citysensor.do	7	19403	query	\N	\N	\N	\N	\N	0
196	服务器管理	0	f	\N	195	查看,添加,编辑	cityserver.do	7	19501	quickquery,create,edit	\N	\N	\N	\N	\N	0
197	工作站管理	0	f	\N	195	查看,注册,编辑,删除	cityworksite.do	7	19502	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
198	通道管理	0	f	\N	195	查看,注册,编辑,删除	citypass.do	7	19503	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
199	摄像头管理	0	f	\N	195	查看,注册,编辑,删除,修改密码	citycamera.do	7	19504	quickquery,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
212	会员	0	f	\N	0		vipmanage.do	2	3		\N	\N	\N	\N	\N	0
201	道闸机管理	0	f	\N	195	查看,注册,编辑,删除	citybrake.do	7	19506	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
166	预警管理	0	f	\N	121			7	12105		\N	\N	\N	\N	\N	0
219	决策分析	0	f	\N	0		cityanlysis.do	2	6		\N	\N	\N	\N	\N	0
189	全部诱导屏	0	f	\N	124	查看,编辑	cityinduce.do	7	12402	query,edit	\N	\N	\N	\N	\N	0
200	LED显示屏	0	f	\N	195	查看,注册,编辑,删除	cityled.do	7	19505	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
192	三级诱导屏	0	f	\N	124	查看,注册,编辑,删除	inducel3.do	7	12405	query,create,edit,delete	\N	\N	\N	\N	\N	0
170	综合分析	0	f	\N	127			7	12701		\N	\N	\N	\N	\N	0
174	停车效率分析	0	f	\N	127			7	12702		\N	\N	\N	\N	\N	0
176	公众使用情况分析	0	f	\N	127			7	12707		\N	\N	\N	\N	\N	0
171	收费员收入分析	0	f	\N	127			7	12704		\N	\N	\N	\N	\N	0
175	泊位收入分析	0	f	\N	127			7	12705		\N	\N	\N	\N	\N	0
172	运营收入分析	0	f	\N	127			7	12703		\N	\N	\N	\N	\N	0
173	会员卡收入分析	0	f	\N	127			7	12706		\N	\N	\N	\N	\N	0
188	诱导发布管理	0	f	\N	124	查看,绑定车场	publish.do	7	12401	query,inducel2.do?action=parkdetail	\N	\N	\N	\N	\N	0
210	未缴明细	0	f	\N	105	查看,追缴	parkescape.do	2	10507	query,recover	\N	\N	\N	\N	\N	0
207	大额订单	0	f	\N	105	查看	citybigorder.do	2	10505	query	\N	\N	\N	\N	\N	0
211	欠费会员	0	f	\N	105	查看	planmember.do	2	10506	query	\N	\N	\N	\N	\N	0
209	预约订单	0	f	\N	105	查看	reserveorder.do	2	10504	query	\N	\N	\N	\N	\N	0
216	结算账户明细	0	f	\N	107			2	10701		\N	\N	\N	\N	\N	0
217	运营集团账户	0	f	\N	216	查看	groupaccount.do	2	21601	query	\N	\N	\N	\N	\N	0
218	停车场账户	0	f	\N	216	查看	cityparkaccount.do	2	21602	query	\N	\N	\N	\N	\N	0
214	月卡会员	0	f	\N	212	查看,注册,编辑,修改车牌,续费	cityvip.do	2	21201	query,create,edit,vipuser.do?action=addcar,renew	\N	\N	\N	\N	\N	0
180	封闭车场订单统计	0	f	\N	171	查看	orderanly.do	7	0	query	\N	\N	\N	\N	\N	0
215	黑名单管理	0	f	\N	212	查看,漂白	cityblack.do	2	21203	query,blackuser.do?action=edit	\N	\N	\N	\N	\N	0
221	停车效率分析	0	f	\N	219			2	21901		\N	\N	\N	\N	\N	0
222	运营收入分析	0	f	\N	219			2	21902		\N	\N	\N	\N	\N	0
220	收费员收入分析	0	f	\N	219			2	21903		\N	\N	\N	\N	\N	0
223	会员卡收入分析	0	f	\N	219			2	21904		\N	\N	\N	\N	\N	0
178	停车场电子收费汇总	1	f	\N	170	查看	cityparkaccanlysis.do	7	0	query	\N	1461633139	\N	\N	1000001	0
208	在场车辆	0	f	\N	105	查看,0元结算	cityunorder.do	2	10501	query,completezeroorder	\N	\N	\N	\N	\N	0
191	二级诱导屏	0	f	\N	124	查看,注册,编辑,删除,绑定车场,编辑广告,显示区域	inducel2.do?type=1	7	12404	query,create,edit,delete,parkdetail,editadd,inducemodule.do	\N	\N	\N	\N	\N	0
224	月卡套餐统计	0	f	\N	223	查看	productanlysis.do	2	0	query	\N	\N	\N	\N	\N	0
227	泊位利用趋势	0	f	\N	221	查看	berthtrend.do	2	0	querytrend	\N	\N	\N	\N	\N	0
228	收费趋势曲线	0	f	\N	222	查看	colltrend.do	2	0	querytrend	\N	\N	\N	\N	\N	0
225	封闭车场订单统计	0	f	\N	220	查看	orderanly.do	2	0	query	\N	\N	\N	\N	\N	0
226	中央预支付统计	0	f	\N	220	查看	midpreanlysis.do	2	0	query	\N	\N	\N	\N	\N	0
229	封闭车场设备	0	f	\N	115			2	11502		\N	\N	\N	\N	\N	0
237	SIM卡管理	0	f	\N	230	查看,注册,编辑,删除	citysim.do	2	0	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
88	员工管理	1	f	0	86	查看,注册,编辑,删除,修改密码	groupmember.do	2	0	query,create,edit,delete,editpass	\N	1460821167	\N	\N	1000001	0
193	通用设备管理	0	f	\N	120			7	12001		\N	\N	\N	\N	\N	0
203	SIM卡管理	0	f	\N	193	查看,注册,编辑,删除	citysim.do	7	19301	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
250	电子收费汇总	0	f	\N	172	查看	cityparkaccanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
230	通用设备管理	0	f	\N	115			2	11501		\N	\N	\N	\N	\N	0
231	服务器管理	0	f	\N	229	查看,添加,编辑	cityserver.do	2	22901	quickquery,create,edit	\N	\N	\N	\N	\N	0
232	工作站管理	0	f	\N	229	查看,注册,编辑,删除	cityworksite.do	2	22902	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
233	通道管理	0	f	\N	229	查看,注册,编辑,删除	citypass.do	2	22903	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
234	摄像机管理	0	f	\N	229	查看,注册,编辑,删除,修改密码	citycamera.do	2	22904	quickquery,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
190	一级诱导屏	0	f	\N	124	查看,注册,编辑,删除,绑定车场,编辑广告,显示区域	inducel2.do?type=0	7	12403	query,create,edit,delete,parkdetail,editadd,inducemodule.do	\N	\N	\N	\N	\N	0
236	道闸机管理	0	f	\N	229	查看,注册,编辑,删除	citybrake.do	2	22906	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
247	账户信息	0	f	\N	240	查看,编辑	groupinfo.do	2	24001	,edit	\N	\N	\N	\N	\N	0
262	车检器订单	0	f	\N	105	查看	citysensororder.do	2	10503	query	\N	\N	\N	\N	\N	0
261	车检器订单	0	f	\N	123	查看	citysensororder.do	7	12303	query	\N	\N	\N	\N	\N	0
251	道路停车设备	0	f	\N	115			2	0		\N	\N	\N	\N	\N	0
240	企业信息	0	f	\N	238			2	23801		\N	\N	\N	\N	\N	0
244	日志管理	0	f	\N	238	查看,导出	parklogs.do	2	23806	query,export	\N	\N	\N	\N	\N	0
245	角色管理	0	f	\N	239	查看,添加,编辑,删除,编辑权限	adminrole.do	2	23901	query,create,edit,delete,editrole	\N	\N	\N	\N	\N	0
246	员工管理	0	f	\N	239	查看,注册,编辑,删除,修改密码	groupmember.do	2	23902	query,create,edit,delete,editpass	\N	\N	\N	\N	\N	0
243	停车场	0	f	\N	238	查看,注册,编辑,删除,设置	citypark.do	2	23802	query,create,edit,delete,set	\N	\N	\N	\N	\N	0
248	区域管理	0	f	\N	240	查看,添加,编辑,删除	cityarea.do	2	24002	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
154	清分规则设置	1	f	\N	125	查看,注册,编辑,删除	citymoneyset.do	7	12504	query,create,edit,delete	\N	1460991831	\N	\N	1000001	0
252	车检器管理	0	f	\N	251	查看	citysensor.do	2	0	query	\N	\N	\N	\N	\N	0
137	泊位管理	0	f	\N	119	查看,注册,编辑,删除,批量添加,绑定车检器,解绑车检器	cityberth.do	7	11904	quickquery,create,edit,delete,compark.do?action=create,bindsensor,unbindsensor	\N	\N	\N	\N	\N	0
242	泊位管理	0	f	\N	238	查看,注册,编辑,删除,批量添加,绑定车检器,解绑车检器	cityberth.do	2	23804	quickquery,create,edit,delete,compark.do?action=create,bindsensor,unbindsensor	\N	\N	\N	\N	\N	0
241	泊位段	0	f	\N	238	查看,注册,编辑,删除,绑定泊位,解绑泊位	cityberthseg.do	2	23803	quickquery,create,edit,delete,bindberth,unbindberth	\N	\N	\N	\N	\N	0
258	收费员收费今日汇总	0	f	\N	220	查看	feebycoll.do	2	0	query	\N	\N	\N	\N	\N	0
259	车型设定	0	f	\N	27	查看,添加,编辑,删除,设置区分大小车	cartype.do	8	0	query,create,edit,delete,setusecartype	\N	\N	\N	\N	\N	0
260	绑定车型	0	f	\N	27	查看,添加,编辑,删除	bindcartype.do	8	0	query,create,edit,delete	\N	\N	\N	\N	\N	0
255	停车场收费今日汇总	0	f	\N	172	查看	feebypark.do	7	0	query	\N	\N	\N	\N	\N	0
268	基站管理	0	f	\N	251	查看,编辑	citytransmitter.do	2	0	query,edit	\N	\N	\N	\N	\N	0
265	追缴情况分析	0	f	\N	172	查看	paymentanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
266	支付方式分析	0	f	\N	172	查看	paytypeanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
253	车检器心跳	0	f	\N	251	查看	sensorlog.do	2	0	query	\N	\N	\N	\N	\N	0
249	收费组管理	0	f	\N	239	查看,添加,编辑,删除,绑定泊位段,绑定收费员	workgroupmanage.do	2	0	query,create,edit,delete,addberthsec,addemployee	\N	\N	\N	\N	\N	0
273	车检器监测	0	f	\N	272	查看	sensorberth.do	2	0	query	\N	\N	\N	\N	\N	0
272	指挥中心	0	f	\N	0		citycommand.do	2	5		\N	\N	\N	\N	\N	0
263	特殊车型会员	0	f	\N	212	查看,添加,编辑,删除	groupbindcartype.do	2	0	query,create,edit,delete	\N	\N	\N	\N	\N	0
264	停车时长分析	0	f	\N	174	查看	berthtimeanlysis.do	7	0	query	\N	\N	\N	\N	\N	0
271	诱导余位信息	0	f	\N	124	查看	cityinduceleft.do	7	0	query	\N	\N	\N	\N	\N	0
269	车检器心跳	0	f	\N	194	查看	sensorlog.do	7	0	query	\N	\N	\N	\N	\N	0
270	进出场日志	0	f	\N	194	查看	sensorcarinout.do	7	0	query	\N	\N	\N	\N	\N	0
238	系统设置	0	f	\N	0		sysmanage.do	2	8		\N	\N	\N	\N	\N	0
254	进出场日志	0	f	\N	251	查看	sensorcarinout.do	2	0	query	\N	\N	\N	\N	\N	0
235	LED显示屏	0	f	\N	229	查看,注册,编辑,删除	cityled.do	2	22905	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
256	车场收费分析	0	f	\N	222	查看	feebypark.do	2	0	query	\N	\N	\N	\N	\N	0
257	收费员收费今日汇总	0	f	\N	171	查看	feebycoll.do	7	0	query	\N	\N	\N	\N	\N	0
267	地磁管理	0	f	\N	66	查看,绑定车场,取消绑定,导出	sensormanage.do	5	0	query,bindsensor,cancalbind,export	\N	\N	\N	\N	\N	0
274	车检器监测	0	f	\N	121	查看	sensorberth.do	7	12106	query	\N	\N	\N	\N	\N	0
285	储值卡明细	0	f	\N	107			2	0		\N	\N	\N	\N	\N	0
276	车检器管理	1	f	\N	275	查询	citysensor.do	7	0	query	\N	1463563781	\N	\N	400185	0
278	车检器心跳	1	f	\N	275	查看	sensorlog.do	7	0	query	\N	1463563785	\N	\N	400185	0
277	进出场日志	1	f	\N	275	查看	sensorlog.do	7	0	query	\N	1463563787	\N	\N	400185	0
275	车检器设备管理	1	f	\N	120			7	0		\N	1463563793	\N	\N	400185	0
279	巡查事件	0	f	\N	272	查看,注册,编辑,删除	inspectevent.do	2	0	quickquery,create,edit,delete	\N	\N	\N	\N	\N	0
280	巡查组管理	0	f	\N	239	查看,添加,编辑,删除,绑定泊位段,绑定巡查员	inspectgroupmanage.do	2	0	query,create,edit,delete,addberthsec,addinspect	\N	\N	\N	\N	\N	0
54	角色管理	0	f	0	51	查看,添加,编辑,删除,编辑权限	adminrole.do	5	512	query,create,edit,delete,authrole.do?action=editauthrole	\N	\N	\N	\N	\N	0
281	收费员收费历史汇总	0	f	\N	171	查看	staticfeebycoll.do	7	0	query	\N	\N	\N	\N	\N	0
282	收费员收费历史汇总	0	f	\N	220	查看	staticfeebycoll.do	2	0	query	\N	\N	\N	\N	\N	0
283	收费员日志	0	f	\N	244	查看	employeelogs.do	2	0	query	\N	\N	\N	\N	\N	0
284	操作日志管理	0	f	\N	244	查看,导出	parklogs.do	2	0	query,export	\N	\N	\N	\N	\N	0
286	卡片管理	0	f	\N	285	查看,编辑,激活,充值,注销,删除	card.do	2	0	query,edit,bind,charge,unbind,delete	\N	\N	\N	\N	\N	0
287	卡片明细	0	f	\N	285	查看	cardaccount.do	2	0	query	\N	\N	\N	\N	\N	0
288	车检器在线率	0	f	\N	251	查询	sensoronline.do	2	0	querytrend	\N	\N	\N	\N	\N	0
289	车检器在线率	0	f	\N	194	查询	sensoronline.do	7	0	querytrend	\N	\N	\N	\N	\N	0
7	月卡会员	0	f	0	0		parkepaymenu.do	8	2		\N	\N	\N	\N	\N	0
71	商户管理	0	f	0	0		shopmenu.do	8	5		\N	\N	\N	\N	\N	0
299	商户管理	0	f	\N	71	查看,添加,编辑,删除,设置,续费	shop.do	8	1	query,create,edit,delete,editrole,addmoney	\N	\N	\N	\N	\N	0
300	流水查询	0	f	\N	71	查看	shopaccount.do	8	2	query	\N	\N	\N	\N	\N	0
301	中央监控	0	f	\N	0	查看	monitor.do	2	301	show	\N	\N	\N	\N	\N	0
302	中央监控	0	f	\N	0	查看	monitor.do	8	302	show	\N	\N	\N	\N	\N	0
303	月卡续费	0	f	\N	122	查看,导出	buycardrecord.do	7	0	query,export	\N	\N	\N	\N	\N	0
304	月卡续费	0	f	\N	173	查询,导出	buycardrecord.do	7	0	query,export	\N	\N	\N	\N	\N	0
305	月卡续费	0	f	\N	223	查看,导出	buycardrecord.do	2	0	query,export	\N	\N	\N	\N	\N	0
306	对讲管理	0	f	\N	16	查看,添加,编辑	monitor.do?action=phoneManager	8	0	query,creat,edit	\N	\N	\N	\N	\N	0
308	对讲管理	0	f	\N	229	查看,添加,编辑,	monitor.do?action=phoneManager	2	0	query，create，edit	\N	\N	\N	\N	\N	0
309	监控管理	0	f	\N	229	查看，添加，编辑，播放	monitor.do?action=monitorManager	2	0	query,create,edit,play	\N	\N	\N	\N	\N	0
307	监控管理	1	f	\N	16	查看,添加,编辑,播放	monitor.do?action=monitorManager	8	0	query,creat,edit,play	\N	1511585490	\N	\N	1000001	0
310	监控管理	0	f	\N	16	查看,添加,编辑,播放	monitor.do?action=monitorManager	8	0	query,creat,edit,play	\N	\N	\N	\N	\N	0
298	月卡会员	0	f	\N	7	查看,注册会员,编辑,修改车牌,删除,导出,续费	vipuser.do	8	0	query,create,edit,addcar,delete,export,renew	\N	\N	\N	\N	\N	0
297	月卡续费记录	0	f	\N	7	查看,导出	buycardrecord.do	8	0	query,export	\N	\N	\N	\N	\N	0
311	优惠券管理	0	f	\N	71	查看	shopticket.do	8	0	query	\N	\N	\N	\N	\N	0
312	上下班记录	0	f	\N	24	查看,导出	workrecord.do	8	0	query,export	\N	\N	\N	\N	\N	0
313	黑名单管理	0	f	\N	24	查询,添加,编辑,删除,导出	zldblack.do	8	0	query,create,edit,delete,export	\N	\N	\N	\N	\N	0
80	系统日志	0	f	0	24	查看,导出	parklogs.do	8	246	query,export	\N	\N	\N	\N	\N	0
\.


--
-- Data for Name: berth_order_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY berth_order_tb (id, berth_id, in_time, out_time, total, state, orderid, in_uid, out_uid, order_total, comid, indicate, dici_id, bind_flag, berthseg_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: berth_order_tb_error; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY berth_order_tb_error (id, berth_id, in_time, out_time, total, state, orderid, in_uid, out_uid, order_total, comid, indicate, dici_id, bind_flag, berthseg_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: bizcircle_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY bizcircle_tb (id, name, resume, state, create_time) FROM stdin;
\.


--
-- Data for Name: bolink_ccount_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bolink_ccount_tb (id, comid, groupid, money, giveto, ctime, uin, type, orderid) FROM stdin;
\.


--
-- Data for Name: bolink_order_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bolink_order_tb (id, union_id, money, start_time, end_time, state, in_time, out_time, update_time, union_name, park_name, order_id, plate_number, uin, pay_type, pay_union_id, prepay, park_id, duration, prepay_time) FROM stdin;
\.


--
-- Data for Name: bonus_record_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bonus_record_tb (id, bid, ctime, mobile, state, amount, type) FROM stdin;
\.


--
-- Data for Name: bonus_type_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bonus_type_tb (id, name, ctime, state) FROM stdin;
\.


--
-- Data for Name: car_info_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY car_info_tb (id, uin, car_number, state, create_time, is_auth, is_comuse, pic_url1, pic_url2, remark) FROM stdin;
\.


--
-- Data for Name: car_number_type_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY car_number_type_tb (id, comid, car_number, typeid, update_time) FROM stdin;
\.


--
-- Data for Name: car_picturs_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY car_picturs_tb (id, orderid, create_time, lefttop, rightbottom, pictype, width, height) FROM stdin;
\.


--
-- Data for Name: car_stops_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY car_stops_tb (id, name, longitude, latitude, start_price, next_price, max_price, state, ctime, utime, cuin, resume, pic, address, creator, city) FROM stdin;
\.


--
-- Data for Name: car_type_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY car_type_tb (id, name, comid, sort, cartype_id, is_delete, create_time, update_time) FROM stdin;
\.


--
-- Data for Name: card_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY card_account_tb (id, card_id, type, charge_type, consume_type, amount, orderid, create_time, remark, uin, uid, comid, berthseg_id, berth_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: card_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY card_anlysis_tb (id, create_time, all_count, all_balance, slot_charge, slot_consume, slot_refund_count, slot_refund_balance, slot_act_count, slot_act_balance, groupid, slot_bind_count) FROM stdin;
\.


--
-- Data for Name: card_carnumber_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY card_carnumber_tb (id, car_number, card_id, is_delete, create_time) FROM stdin;
\.


--
-- Data for Name: card_renew_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY card_renew_tb (id, trade_no, card_id, pay_time, amount_receivable, amount_pay, collector, pay_type, car_number, user_id, resume, buy_month, comid, create_time, update_time, limit_time) FROM stdin;
\.


--
-- Data for Name: carower_product; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY carower_product (id, pid, uin, create_time, b_time, e_time, total, remark, name, address, p_lot, act_total, etc_id, update_time, card_id, member_id, car_number, com_id, mobile, is_delete, tel, car_type_id, limit_day_type, price_info) FROM stdin;
\.


--
-- Data for Name: carpic_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY carpic_tb (id, order_id, create_time, car_number, pic_type, resume, comid, update_time, content, picture_source, liftrod_id, park_order_type, liftpic_table_name, carpic_table_name, event_id, confirmpic_table_name) FROM stdin;
\.


--
-- Data for Name: carstop_order_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY carstop_order_tb (id, cid, uin, car_number, buid, euid, start_time, btime, end_time, etime, amount, state, pic, lng, lat, keyno, car_local, pay_type, oilpic) FROM stdin;
\.


--
-- Data for Name: carstops_price_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY carstops_price_tb (id, cid, ctime, utime, first_price, first_unit, next_price, next_unit, top_price, fav_price, fav_unit, type, creator, resume) FROM stdin;
\.


--
-- Data for Name: city_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY city_account_tb (id, cityid, amount, create_time, type, source, remark, withdraw_id, orderid, uid, comid, berthseg_id, berth_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: city_hotarea_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY city_hotarea_tb (id, name, adress, reason, create_time, create_user, update_time, update_user, delete_time, delete_user, state, cityid) FROM stdin;
\.


--
-- Data for Name: city_peakalert_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY city_peakalert_tb (id, title, content, handle_user, create_time, handle_time, state, cityid, comid, hotarea_id) FROM stdin;
\.


--
-- Data for Name: city_video_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY city_video_tb (id, video_name, ip, port, cusername, cpassword, manufacture, state, cityid, latitude, longitude, comid, type, channelid, deviceid, address, create_time, update_time) FROM stdin;
\.


--
-- Data for Name: collect_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY collect_anlysis_tb (id, comid, cash, epay_collector, epay_park, epay_group, epay_city, create_time) FROM stdin;
\.


--
-- Data for Name: collector_account_pic_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY collector_account_pic_tb (id, uin, pic_name, ctime, utime, state, comid, auditor) FROM stdin;
\.


--
-- Data for Name: collector_scroe_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY collector_scroe_tb (id, uin, lala_scroe, nfc_score, praise_scroe, create_time, pai_score, online_scroe, recom_scroe) FROM stdin;
\.


--
-- Data for Name: collector_set_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY collector_set_tb (id, role_id, photoset, change_prepay, view_plot, print_sign, prepayset, isprepay, hidedetail, is_sensortime, password, signout_password, signout_valid, is_show_card, print_order_place2, is_duplicate_order, is_print_name) FROM stdin;
\.


--
-- Data for Name: collector_sort; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY collector_sort (id, uin, create_time, park_count) FROM stdin;
\.


--
-- Data for Name: com_account_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_account_tb (id, comid, uin, card_number, atype, name, mobile, bank_name, note, type, state, area, bank_pint, user_id, city, pay_type, pay_date, use, bank_no, groupid, cityid) FROM stdin;
\.


--
-- Data for Name: com_alert_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_alert_tb (id, create_time, source, content, type, state, handle_user, handle_time, cityid) FROM stdin;
\.


--
-- Data for Name: com_berthsecs_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_berthsecs_tb (id, uuid, berthsec_name, park_uuid, create_time, address, longitude, latitude, is_active, comid) FROM stdin;
\.


--
-- Data for Name: com_brake_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_brake_tb (id, brake_name, serial, ip, passid, state, upload_time, comid) FROM stdin;
\.


--
-- Data for Name: com_camera_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_camera_tb (id, camera_name, ip, port, cusername, cpassword, manufacturer, passid, state, upload_time, comid) FROM stdin;
1	联合测试入口	192.168.1.201	554	\N	\N	停车宝	1	-1	\N	3
2	联合测试出口	192.168.1.202	554	\N	\N	停车宝	2	-1	\N	3
\.


--
-- Data for Name: com_comment_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_comment_tb (id, uin, comid, comment, create_time) FROM stdin;
\.


--
-- Data for Name: com_info_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_info_tb (id, company_name, phone, fax, address, zipcode, homepage, resume, create_time, longitude, latitude, parking_type, parking_total, share_number, auto_order, mobile, total_money, money, property, type, stop_type, update_time, state, biz_id, uid, city, recom_code, nfc, etc, book, navi, monthlypay, isnight, isfixed, iscancel, firstprovince, mcompany, record_number, epay, is_hasparker, isview, remarks, invalid_order, fixed_pass_time, car_type, passfree, activity, activity_content, upload_uin, minprice_unit, isshowepay, ishidehdbutton, isautopay, allowance, order_per, entry_set, entry_month2_set, chanid, groupid, ishdmoney, pid, full_set, leave_set, areaid, cityid, hotarea_id, empty, upload_union_time, union_state, ukey) FROM stdin;
3	联合测试	18211111111	\N	北京市北京市海淀区信息中路12号	\N	\N	\N	1515985123	116.316061	40.046672	0	1000	0	\N		0.00	0.00	\N	0	0	1515985272	0	-1	-1	110000	\N	0	2	0	0	0	0	0	1	\N	上地	\N	0	0	1	\N	0	\N	0	0	0		-1	0.00	1	0	1	0.00	0	0	0	-1	-1	0	-1	0	0	-1	-1	-1	0	\N	0	HY07LT5FUQ0GM2TM
\.


--
-- Data for Name: com_led_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_led_tb (id, ledip, ledport, leduid, movemode, movespeed, dwelltime, ledcolor, showcolor, typeface, typesize, matercont, passid, width, height, type, rsport, state, upload_time, comid) FROM stdin;
1	192.168.1.203	8888	41	9	1	1	1	0	1	1	停车宝	1	64	32	\N	2	-1	\N	3
2	192.168.1.204	8888	41	9	1	1	1	0	1	1	停车宝	2	64	32	\N	2	-1	\N	3
\.


--
-- Data for Name: com_nfc_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_nfc_tb (id, nfc_uuid, comid, create_time, state, use_times, uin, uid, update_time, nid, qrcode, type, card_name, device, is_delete, balance, card_number, tenant_id, group_id, reg_id, cancel_id, cancel_time, activate_id, activate_time) FROM stdin;
\.


--
-- Data for Name: com_park_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_park_tb (id, comid, cid, state, qid, order_id, dici_id, enter_time, end_time, address, berthsec_id, create_time, uuid, longitude, latitude, is_delete) FROM stdin;
\.


--
-- Data for Name: com_parkstatus_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_parkstatus_tb (id, comid, total, empty, sheduled, rscheduled, internal, rinternal, ctime, chanid, cityid) FROM stdin;
\.


--
-- Data for Name: com_pass_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_pass_tb (id, worksite_id, passname, passtype, description, comid, state, month_set, month2_set, channel_id) FROM stdin;
1	1	联合测试入口	0	\N	3	0	-1	-1	1
2	1	联合测试出口	1	\N	3	0	-1	-1	2
\.


--
-- Data for Name: com_picturs_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_picturs_tb (id, comid, picurl, create_time) FROM stdin;
\.


--
-- Data for Name: com_pos_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_pos_tb (id, pda, state, uid, is_deleted, delete_user, delete_time, update_time, update_user, create_time, create_user, groupid) FROM stdin;
\.


--
-- Data for Name: com_praise_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_praise_tb (id, comid, uin, praise, create_time) FROM stdin;
\.


--
-- Data for Name: com_temp_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY com_temp_tb (id, next_time) FROM stdin;
\.


--
-- Data for Name: com_worksite_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY com_worksite_tb (id, comid, worksite_name, description, net_type, host_name, host_memory, host_internal, upload_time, state) FROM stdin;
1	3	联合测试	联合测试	0	\N	\N	\N	\N	0
\.


--
-- Data for Name: confirm_order_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY confirm_order_tb (id, event_id, car_number, upload_time, channel_id, state, comid, groupid) FROM stdin;
\.


--
-- Data for Name: consume_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY consume_anlysis_tb (id, create_time, wx_total, zfb_total, wxp_total) FROM stdin;
\.


--
-- Data for Name: dataauth_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY dataauth_tb (id, authorizee, authorizer, department_id) FROM stdin;
\.


--
-- Data for Name: department_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY department_tb (id, nid, pid, dname, state, isparent) FROM stdin;
\.


--
-- Data for Name: device_fault_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY device_fault_tb (id, sensor_id, site_id, induce_id, create_time, end_time) FROM stdin;
\.


--
-- Data for Name: dici_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY dici_tb (id, code, comid, state, serid, did, operate_time, battery, magnetism, beart_time, site_id, is_delete) FROM stdin;
\.


--
-- Data for Name: dictionary_detail_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY dictionary_detail_tb (id, item_id, subitemdesc, sub_item_id) FROM stdin;
\.


--
-- Data for Name: dictionary_item_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY dictionary_item_tb (id, park_id, itemdesc, item_name) FROM stdin;
\.


--
-- Data for Name: directpay_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY directpay_anlysis_tb (id, create_time, total) FROM stdin;
\.


--
-- Data for Name: flygame_pool_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY flygame_pool_tb (id, ptype, money, tid, aid, count, ctime) FROM stdin;
\.


--
-- Data for Name: flygame_score_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY flygame_score_anlysis_tb (id, uin, ctime, db_bullet_count, db_bullet_score, empty_bullet_count, empty_bullet_score, gift_count, gift_score, balance_count, balance_score, ticket_count, ticket_score, second_count, second_score, tid, cloud_count, cloud_score, crow_count, crow_score, bets_double_count, bets_double_score, bets_halve_count, bets_halve_score, score_double_count, score_double_score, score_halve_count, score_halve_score, catapult_full_count, catapult_full_score, catapult_halve_count, catapult_halve_score, float_score) FROM stdin;
\.


--
-- Data for Name: flygame_score_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY flygame_score_tb (id, uin, fgid, remark, ctime, ptype, money, is_operate) FROM stdin;
\.


--
-- Data for Name: free_reasons_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY free_reasons_tb (id, name, comid, sort) FROM stdin;
\.


--
-- Data for Name: group_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY group_account_tb (id, comid, amount, create_time, uid, type, source, orderid, withdraw_id, groupid, remark, berthseg_id, berth_id, is_delete) FROM stdin;
\.


--
-- Data for Name: hasparker_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY hasparker_anlysis_tb (id, anlysis_time, total) FROM stdin;
\.


--
-- Data for Name: ibeacon_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY ibeacon_tb (id, buy_time, ibcid, state) FROM stdin;
\.


--
-- Data for Name: induce_ad_history_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY induce_ad_history_tb (id, induce_id, create_time, begin_time, end_time, ad, creator_id) FROM stdin;
\.


--
-- Data for Name: induce_ad_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY induce_ad_tb (id, induce_id, ad, begin_time, end_time, isactive, create_time, update_time, publish_time, updator_id) FROM stdin;
\.


--
-- Data for Name: induce_module_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY induce_module_tb (id, induce_id, is_delete, name, create_time, sort) FROM stdin;
\.


--
-- Data for Name: induce_park_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY induce_park_tb (id, induce_id, comid, module_id, sort) FROM stdin;
\.


--
-- Data for Name: induce_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY induce_tb (id, name, type, longitude, latitude, address, cityid, state, create_time, update_time, creator_id, updator_id, deletor_id, is_delete, did, heartbeat_time) FROM stdin;
\.


--
-- Data for Name: inspect_event_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY inspect_event_tb (id, create_time, end_time, type, berthsec_id, uid, inspectid, state, remark, event_pic, detailtype, dici_id) FROM stdin;
\.


--
-- Data for Name: inspect_group_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY inspect_group_tb (id, uuid, inspectgroup_name, company_id, create_time, update_time, is_active, chanid) FROM stdin;
\.


--
-- Data for Name: lift_rod_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY lift_rod_tb (id, ctime, uin, comid, img, reason, liftrod_id, update_time, in_channel_id, out_channel_id, name, car_number, order_id, resume, pass_id, liftpic_table_name) FROM stdin;
\.


--
-- Data for Name: liftrod_info_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY liftrod_info_tb (id, channel_id, channel_name, operate, state, comid) FROM stdin;
\.


--
-- Data for Name: local_info_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY local_info_tb (id, comid, version, cpu, memory, harddisk, is_update, create_time, limit_time, secret, remark) FROM stdin;
\.


--
-- Data for Name: logo_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY logo_tb (id, type, orgid, url_fir, url_sec, name) FROM stdin;
\.


--
-- Data for Name: lottery_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY lottery_tb (id, uin, orderid, create_time, lottery_result) FROM stdin;
\.


--
-- Data for Name: message_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY message_tb (id, type, create_time, state, content, uin) FROM stdin;
\.


--
-- Data for Name: mobile_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY mobile_tb (id, imei, num, mode, price, create_time, editor, distru_date, uid, comid, uin, money_3, order_3, device_code, device_auth, auth_user, auth_time) FROM stdin;
\.


--
-- Data for Name: mobilepay_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY mobilepay_anlysis_tb (id, create_time, comid, mobilepay_count) FROM stdin;
\.


--
-- Data for Name: money_record_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY money_record_tb (id, comid, create_time, amount, uin, type, remark, pay_type) FROM stdin;
\.


--
-- Data for Name: money_set_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY money_set_tb (id, comid, uin, mtype, giveto) FROM stdin;
\.


--
-- Data for Name: monitor_info_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY monitor_info_tb (id, net_status, is_show, show_order, play_src, comid, groupid, channel_id, name, state) FROM stdin;
\.


--
-- Data for Name: no_payment_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY no_payment_tb (id, create_time, end_time, order_id, car_number, state, uin, comid, total, uid, pursue_time, act_total, pursue_uid, pursue_comid, pursue_berthseg_id, pursue_berth_id, berthseg_id, berth_id, groupid, prepay, is_delete, pursue_groupid) FROM stdin;
\.


--
-- Data for Name: online_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY online_anlysis_tb (id, comid, collector_online, inspector_online, create_time, groupid, cityid) FROM stdin;
\.


--
-- Data for Name: order_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY order_anlysis_tb (id, create_time, order_count) FROM stdin;
\.


--
-- Data for Name: order_attach_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY order_attach_tb (id, settle_type, change_carnumber, add_carnumber, old_carnumber, order_id) FROM stdin;
\.


--
-- Data for Name: order_log_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY order_log_tb (id, order_id, comid, uin, create_time, log, type) FROM stdin;
\.


--
-- Data for Name: order_message_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY order_message_tb (id, car_number, create_time, orderid, already_read, uin, order_total, state, comid, is_sale, btime, etime, duartion, message_type) FROM stdin;
\.


--
-- Data for Name: order_reserve_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY order_reserve_tb (id, comid, uin, create_time, limit_time, state, car_number, phone, pay_type, prepaid, prepaid_pay_time, type, order_id, arrive_time, plot_no) FROM stdin;
\.


--
-- Data for Name: order_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY order_tb (id, create_time, comid, uin, total, state, end_time, auto_pay, pay_type, nfc_uuid, uid, car_number, imei, pid, pre_state, type, need_sync, ishd, isclick, prepaid, prepaid_pay_time, berthnumber, berthsec_id, groupid, out_uid, is_union_user, car_type_zh, order_id_local, duration, pay_type_en, freereasons_local, islocked, lock_key, in_passid, out_passid, amount_receivable, electronic_prepay, electronic_pay, cash_prepay, cash_pay, reduce_amount, c_type, car_type, freereasons, remark, carpic_table_name, work_station_uuid) FROM stdin;
\.


--
-- Data for Name: order_ticket_detail_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY order_ticket_detail_tb (id, otid, uin, amount, ttime, type, btype, ticketid) FROM stdin;
\.


--
-- Data for Name: order_ticket_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY order_ticket_tb (id, uin, order_id, money, bnum, ctime, btime, etime, exptime, bwords, type) FROM stdin;
\.


--
-- Data for Name: org_area_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY org_area_tb (id, name, state, groupid, create_time) FROM stdin;
\.


--
-- Data for Name: org_channel_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY org_channel_tb (id, name, state, create_time, logo_url) FROM stdin;
\.


--
-- Data for Name: org_city_merchants; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY org_city_merchants (id, ctime, name, state, balance, gps, address, is_group_pursue, is_inpark_incity, union_id, ukey) FROM stdin;
\.


--
-- Data for Name: org_group_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY org_group_tb (id, state, name, chanid, create_time, cityid, type, balance, longitude, latitude, address, serverid) FROM stdin;
\.


--
-- Data for Name: park_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY park_account_tb (id, comid, amount, type, create_time, remark, uid, source, orderid, withdraw_id, berthseg_id, berth_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: park_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY park_anlysis_tb (id, create_time, comid, share_count, used_count, month_used_count, time_used_count) FROM stdin;
\.


--
-- Data for Name: park_charge_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY park_charge_tb (id, comid, amount, uin, type, create_time) FROM stdin;
\.


--
-- Data for Name: park_log_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY park_log_tb (id, type, content, operate_time, operate_user, remark, log_id, park_id) FROM stdin;
\.


--
-- Data for Name: park_ticket_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY park_ticket_tb (id, comid, tnumber, money, exptime, haveget) FROM stdin;
\.


--
-- Data for Name: park_token_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY park_token_tb (id, park_id, token, login_time, beat_time, server_ip, source_ip, local_id) FROM stdin;
\.


--
-- Data for Name: park_verify_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY park_verify_tb (id, comid, uin, isname, islocal, ispay, ctime, isresume) FROM stdin;
\.


--
-- Data for Name: parkuser_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_account_tb (id, uin, amount, type, create_time, remark, target, orderid, withdraw_id, comid, berthseg_id, berth_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: parkuser_cash_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_cash_tb (id, uin, amount, orderid, type, create_time, ctype, target, card_account_id, comid, berthseg_id, berth_id, groupid, is_delete) FROM stdin;
\.


--
-- Data for Name: parkuser_comment_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_comment_tb (id, uid, uin, ctime, comments, order_id) FROM stdin;
\.


--
-- Data for Name: parkuser_income_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_income_anlysis_tb (id, uin, prepay_cash, add_cash, refund_cash, pursue_cash, pfee_cash, prepay_epay, add_epay, refund_epay, pursue_epay, pfee_epay, escape, prepay_escape, sensor_fee, create_time, prepay_card, add_card, refund_card, pursue_card, pfee_card, type, charge_card_cash, return_card_count, return_card_fee, act_card_count, act_card_fee, reg_card_count, reg_card_fee, bind_card_count) FROM stdin;
\.


--
-- Data for Name: parkuser_message_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_message_tb (id, type, hasread, ctime, content, uin, title) FROM stdin;
\.


--
-- Data for Name: parkuser_reward_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_reward_tb (id, uin, uid, order_id, money, ctime, comid, ticket_id) FROM stdin;
\.


--
-- Data for Name: parkuser_work_record_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY parkuser_work_record_tb (id, start_time, end_time, worksite_id, uid, berthsec_id, device_code, chanid, uuid, state, history_money, out_log, logon_state, logoff_state, park_id) FROM stdin;
\.


--
-- Data for Name: peakalert_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY peakalert_anlysis_tb (id, create_time, comid, present, berths) FROM stdin;
\.


--
-- Data for Name: phone_info_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY phone_info_tb (id, name, tele_phone, comid, park_phone, group_phone, monitor_id, groupid, is_call, call_time, main_phone_type, state) FROM stdin;
\.


--
-- Data for Name: price_assist_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY price_assist_tb (id, comid, type, assist_unit, assist_price) FROM stdin;
\.


--
-- Data for Name: price_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY price_tb (id, comid, price, state, unit, pay_type, create_time, b_time, e_time, is_sale, first_times, fprice, countless, free_time, fpay_type, isnight, isedit, car_type, is_fulldaytime, total24, b_minute, e_minute, update_time, price_id, car_type_zh, describe, operate_type, is_sync, is_delete) FROM stdin;
\.


--
-- Data for Name: product_package_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY product_package_tb (id, p_name, b_time, e_time, remain_number, state, comid, price, bmin, emin, resume, old_price, type, reserved, limitday, favourable_precent, free_minutes, out_favourable_precent, scope, card_id, update_time, create_time, describe, operate_type, is_sync, is_delete, period, car_type_id) FROM stdin;
\.


--
-- Data for Name: qr_code_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qr_code_tb (id, wid, comid, uid, ctime, type, state, code, isuse, ticketid, score) FROM stdin;
\.


--
-- Data for Name: qr_thirdpark_code; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qr_thirdpark_code (id, park_id, union_id, code) FROM stdin;
\.


--
-- Data for Name: recharge_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY recharge_tb (id, uin, amount, create_time, charge_type) FROM stdin;
\.


--
-- Data for Name: recom_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY recom_tb (id, mobile, uin, type, state, create_time) FROM stdin;
\.


--
-- Data for Name: recommend_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY recommend_tb (id, pid, nid, type, state, create_time, comid, money, openid) FROM stdin;
\.


--
-- Data for Name: reg_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY reg_anlysis_tb (id, bonus_num, reg_num, amount, pv_number, hit_number, down_num, ctime, atype, order_num) FROM stdin;
\.


--
-- Data for Name: register_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY register_anlysis_tb (id, reg_time, reg_count, carnumber_count) FROM stdin;
\.


--
-- Data for Name: remain_berth_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY remain_berth_tb (id, comid, berthseg_id, amount, update_time, state, total) FROM stdin;
\.


--
-- Data for Name: reward_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY reward_account_tb (id, uin, score, type, create_time, remark, target, reward_id, orderticket_id, ticket_id) FROM stdin;
\.


--
-- Data for Name: role_auth_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY role_auth_tb (id, auth, role_id) FROM stdin;
\.


--
-- Data for Name: sensor_online_anlysis_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sensor_online_anlysis_tb (id, comid, create_time, online, total) FROM stdin;
\.


--
-- Name: seq_advert_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_advert_tb', 1, false);


--
-- Name: seq_alipay_log; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_alipay_log', 1, false);


--
-- Name: seq_area_ibeacon_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_area_ibeacon_tb', 1, false);


--
-- Name: seq_auth_role_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_auth_role_tb', 1, false);


--
-- Name: seq_auth_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_auth_tb', 1, false);


--
-- Name: seq_berth_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_berth_order_tb', 1, false);


--
-- Name: seq_bizcircle_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bizcircle_tb', 1, false);


--
-- Name: seq_bolink_ccount_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bolink_ccount_tb', 1, false);


--
-- Name: seq_bolink_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bolink_order_tb', 1, false);


--
-- Name: seq_bonus_record_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bonus_record_tb', 1, false);


--
-- Name: seq_bonus_type_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bonus_type_tb', 1, false);


--
-- Name: seq_bouns_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_bouns_tb', 1, false);


--
-- Name: seq_car_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_car_info_tb', 1, false);


--
-- Name: seq_car_number_type_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_car_number_type_tb', 1, false);


--
-- Name: seq_car_picturs_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_car_picturs_tb', 1, false);


--
-- Name: seq_car_stops_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_car_stops_tb', 1, false);


--
-- Name: seq_car_type_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_car_type_tb', 1, false);


--
-- Name: seq_card_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_card_account_tb', 1, false);


--
-- Name: seq_card_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_card_anlysis_tb', 1, false);


--
-- Name: seq_card_carnumber_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_card_carnumber_tb', 1, false);


--
-- Name: seq_card_renew_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_card_renew_tb', 1, false);


--
-- Name: seq_carower_product; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_carower_product', 1, false);


--
-- Name: seq_carpic_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_carpic_tb', 1, false);


--
-- Name: seq_carstop_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_carstop_order_tb', 1, false);


--
-- Name: seq_carstops_price_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_carstops_price_tb', 1, false);


--
-- Name: seq_city_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_city_account_tb', 1, false);


--
-- Name: seq_city_hotarea_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_city_hotarea_tb', 1, false);


--
-- Name: seq_city_peakalert_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_city_peakalert_tb', 1, false);


--
-- Name: seq_city_video_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_city_video_tb', 1, false);


--
-- Name: seq_collect_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_collect_anlysis_tb', 1, false);


--
-- Name: seq_collector_account_pic_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_collector_account_pic_tb', 1, false);


--
-- Name: seq_collector_scroe_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_collector_scroe_tb', 1, false);


--
-- Name: seq_collector_set_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_collector_set_tb', 1, false);


--
-- Name: seq_collector_sort; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_collector_sort', 1, false);


--
-- Name: seq_com_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_account_tb', 1, false);


--
-- Name: seq_com_alert_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_alert_tb', 1, false);


--
-- Name: seq_com_berthsecs_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_berthsecs_tb', 1, false);


--
-- Name: seq_com_brake_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_brake_tb', 1, false);


--
-- Name: seq_com_camera_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_camera_tb', 2, true);


--
-- Name: seq_com_comment_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_comment_tb', 1, false);


--
-- Name: seq_com_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_info_tb', 3, true);


--
-- Name: seq_com_led_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_led_tb', 2, true);


--
-- Name: seq_com_nfc_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_nfc_tb', 1, false);


--
-- Name: seq_com_park_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_park_tb', 1, false);


--
-- Name: seq_com_parkstatus_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_parkstatus_tb', 1, false);


--
-- Name: seq_com_pass_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_pass_tb', 2, true);


--
-- Name: seq_com_picturs_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_picturs_tb', 1, false);


--
-- Name: seq_com_pos_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_pos_tb', 1, false);


--
-- Name: seq_com_praise_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_praise_tb', 1, false);


--
-- Name: seq_com_temp_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_temp_tb', 1, false);


--
-- Name: seq_com_worksite_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_com_worksite_tb', 1, true);


--
-- Name: seq_confirm_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_confirm_order_tb', 1, false);


--
-- Name: seq_consume_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_consume_anlysis_tb', 1, false);


--
-- Name: seq_dataauth_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dataauth_tb', 1, false);


--
-- Name: seq_department_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_department_tb', 1, false);


--
-- Name: seq_device_fault_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_device_fault_tb', 1, false);


--
-- Name: seq_dici_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dici_tb', 1, false);


--
-- Name: seq_dictionary_detail_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dictionary_detail_tb', 1, false);


--
-- Name: seq_dictionary_item_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dictionary_item_tb', 1, false);


--
-- Name: seq_directpay_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_directpay_anlysis_tb', 1, false);


--
-- Name: seq_flygame_pool_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_flygame_pool_tb', 1, false);


--
-- Name: seq_flygame_score_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_flygame_score_anlysis_tb', 1, false);


--
-- Name: seq_flygame_score_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_flygame_score_tb', 1, false);


--
-- Name: seq_free_reasons_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_free_reasons_tb', 1, false);


--
-- Name: seq_group_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_group_account_tb', 1, false);


--
-- Name: seq_hasparker_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_hasparker_anlysis_tb', 1, false);


--
-- Name: seq_ibeacon_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_ibeacon_tb', 1, false);


--
-- Name: seq_induce_ad_history_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_induce_ad_history_tb', 1, false);


--
-- Name: seq_induce_ad_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_induce_ad_tb', 1, false);


--
-- Name: seq_induce_module_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_induce_module_tb', 1, false);


--
-- Name: seq_induce_park_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_induce_park_tb', 1, false);


--
-- Name: seq_induce_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_induce_tb', 1, false);


--
-- Name: seq_inspect_event_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_inspect_event_tb', 1, false);


--
-- Name: seq_inspect_group_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_inspect_group_tb', 1, false);


--
-- Name: seq_lift_rod_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_lift_rod_tb', 1, false);


--
-- Name: seq_liftrod_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_liftrod_info_tb', 1, false);


--
-- Name: seq_local_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_local_info_tb', 1, false);


--
-- Name: seq_logo_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_logo_tb', 1, false);


--
-- Name: seq_lottery_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_lottery_tb', 1, false);


--
-- Name: seq_message_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_message_tb', 1, false);


--
-- Name: seq_mobile_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_mobile_tb', 1, false);


--
-- Name: seq_mobilepay_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_mobilepay_anlysis_tb', 1, false);


--
-- Name: seq_money_record_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_money_record_tb', 1, false);


--
-- Name: seq_money_set_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_money_set_tb', 1, false);


--
-- Name: seq_monitor_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_monitor_info_tb', 1, false);


--
-- Name: seq_no_payment_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_no_payment_tb', 1, false);


--
-- Name: seq_online_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_online_anlysis_tb', 1, false);


--
-- Name: seq_order_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_anlysis_tb', 1, false);


--
-- Name: seq_order_attach_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_attach_tb', 1, false);


--
-- Name: seq_order_log_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_log_tb', 1, false);


--
-- Name: seq_order_message_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_message_tb', 1, false);


--
-- Name: seq_order_reserve_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_reserve_tb', 1, false);


--
-- Name: seq_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_tb', 1, false);


--
-- Name: seq_order_ticket_detail_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_ticket_detail_tb', 1, false);


--
-- Name: seq_order_ticket_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_order_ticket_tb', 1, false);


--
-- Name: seq_org_area_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_org_area_tb', 1, false);


--
-- Name: seq_org_channel_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_org_channel_tb', 1, false);


--
-- Name: seq_org_city_merchants; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_org_city_merchants', 1, false);


--
-- Name: seq_org_group_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_org_group_tb', 1, false);


--
-- Name: seq_park_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_account_tb', 1, false);


--
-- Name: seq_park_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_anlysis_tb', 1, false);


--
-- Name: seq_park_charge_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_charge_tb', 1, false);


--
-- Name: seq_park_log_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_log_tb', 1, false);


--
-- Name: seq_park_ticket_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_ticket_tb', 1, false);


--
-- Name: seq_park_token_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_token_tb', 1, false);


--
-- Name: seq_park_verify_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_park_verify_tb', 1, false);


--
-- Name: seq_parkuser_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_account_tb', 1, false);


--
-- Name: seq_parkuser_cash_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_cash_tb', 1, false);


--
-- Name: seq_parkuser_comment_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_comment_tb', 1, false);


--
-- Name: seq_parkuser_income_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_income_anlysis_tb', 1, false);


--
-- Name: seq_parkuser_message_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_message_tb', 1, false);


--
-- Name: seq_parkuser_reward_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_reward_tb', 1, false);


--
-- Name: seq_parkuser_work_record_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_parkuser_work_record_tb', 1, false);


--
-- Name: seq_peakalert_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_peakalert_anlysis_tb', 1, false);


--
-- Name: seq_phone_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_phone_info_tb', 1, false);


--
-- Name: seq_price_assist_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_price_assist_tb', 1, false);


--
-- Name: seq_price_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_price_tb', 1, false);


--
-- Name: seq_product_package_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_product_package_tb', 1, false);


--
-- Name: seq_qr_code_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_qr_code_tb', 100000, false);


--
-- Name: seq_qr_thirdpark_code; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_qr_thirdpark_code', 1, false);


--
-- Name: seq_recharge_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_recharge_tb', 1, false);


--
-- Name: seq_recom_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_recom_tb', 1, false);


--
-- Name: seq_recommend_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_recommend_tb', 1, false);


--
-- Name: seq_reg_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reg_anlysis_tb', 1, false);


--
-- Name: seq_register_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_register_anlysis_tb', 1, false);


--
-- Name: seq_remain_berth_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_remain_berth_tb', 1, false);


--
-- Name: seq_reward_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reward_account_tb', 1, false);


--
-- Name: seq_role_auth_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_role_auth_tb', 1, false);


--
-- Name: seq_sensor_online_anlysis_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sensor_online_anlysis_tb', 1, false);


--
-- Name: seq_share_log_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_share_log_tb', 1, false);


--
-- Name: seq_shop_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_shop_account_tb', 188, false);


--
-- Name: seq_shop_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_shop_tb', 1, false);


--
-- Name: seq_sim_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sim_tb', 1, false);


--
-- Name: seq_sites_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sites_tb', 1, false);


--
-- Name: seq_sites_voltage_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sites_voltage_tb', 1, false);


--
-- Name: seq_slow_alert_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_slow_alert_tb', 1, false);


--
-- Name: seq_sub_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sub_account_tb', 1, false);


--
-- Name: seq_switch_line_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_switch_line_tb', 1, false);


--
-- Name: seq_sync_info_pool_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_sync_info_pool_tb', 10, true);


--
-- Name: seq_thirdpay_order_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_thirdpay_order_tb', 4390, false);


--
-- Name: seq_ticket_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_ticket_tb', 1, false);


--
-- Name: seq_ticket_uion_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_ticket_uion_tb', 1, false);


--
-- Name: seq_tingchebao_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_tingchebao_account_tb', 1, false);


--
-- Name: seq_tmp_p4top5_primarykey; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_tmp_p4top5_primarykey', 1, false);


--
-- Name: seq_transfer_url_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_transfer_url_tb', 1, false);


--
-- Name: seq_union_park_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_union_park_tb', 1, false);


--
-- Name: seq_user_account_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_account_tb', 1, false);


--
-- Name: seq_user_friend_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_friend_tb', 1, false);


--
-- Name: seq_user_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_info_tb', 7, true);


--
-- Name: seq_user_liuyan_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_liuyan_tb', 1, false);


--
-- Name: seq_user_local_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_local_tb', 1, false);


--
-- Name: seq_user_log_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_log_tb', 2, true);


--
-- Name: seq_user_message_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_message_tb', 1, false);


--
-- Name: seq_user_payaccount_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_payaccount_tb', 1, false);


--
-- Name: seq_user_pic_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_pic_tb', 1, false);


--
-- Name: seq_user_preaddfriend_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_preaddfriend_tb', 1, false);


--
-- Name: seq_user_profile_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_profile_tb', 1, false);


--
-- Name: seq_user_role_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_role_tb', 1, false);


--
-- Name: seq_user_session_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_session_tb', 1, false);


--
-- Name: seq_user_worksite_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_user_worksite_tb', 1, false);


--
-- Name: seq_verification_code_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_verification_code_tb', 1, false);


--
-- Name: seq_vip_apply_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_vip_apply_tb', 1, false);


--
-- Name: seq_visit_info_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_visit_info_tb', 1, false);


--
-- Name: seq_withdrawer_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_withdrawer_tb', 1, false);


--
-- Name: seq_work_berthsec_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_berthsec_tb', 1, false);


--
-- Name: seq_work_detail_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_detail_tb', 1, false);


--
-- Name: seq_work_employee_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_employee_tb', 1, false);


--
-- Name: seq_work_group_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_group_tb', 1, false);


--
-- Name: seq_work_inspector_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_inspector_tb', 1, false);


--
-- Name: seq_work_time_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_work_time_tb', 1, false);


--
-- Name: seq_wxp_user_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_wxp_user_tb', 1, false);


--
-- Name: seq_zld_black_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_zld_black_tb', 1, false);


--
-- Name: seq_zld_game_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_zld_game_tb', 1, false);


--
-- Name: seq_zld_organize_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_zld_organize_tb', 1, false);


--
-- Name: seq_zld_orgtype_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_zld_orgtype_tb', 1, false);


--
-- Name: seq_zld_protocol_tb; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_zld_protocol_tb', 1, false);


--
-- Data for Name: share_log_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY share_log_tb (id, comid, s_number, create_time, uin) FROM stdin;
\.


--
-- Data for Name: shop_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY shop_account_tb (id, shop_id, shop_name, ticket_limit, ticketfree_limit, ticket_money, operate_time, park_id, operator, strid, add_money, operate_type) FROM stdin;
\.


--
-- Data for Name: shop_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY shop_tb (id, name, address, mobile, phone, comid, ticket_limit, description, state, create_time, ticketfree_limit, ticket_type, ticket_money, default_limit, discount_percent, discount_money, validite_time, ticket_unit, free_money) FROM stdin;
\.


--
-- Data for Name: sim_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sim_tb (id, pin, mobile, money, create_time, limit_time, allot_time, creator_id, type, device_id, groupid, state) FROM stdin;
\.


--
-- Data for Name: sites_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sites_tb (id, uuid, voltage, update_time, longitude, latitude, create_time, heartbeat, address, cityid, name, state, comid, is_delete, groupid) FROM stdin;
\.


--
-- Data for Name: sites_voltage_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sites_voltage_tb (id, voltage, create_time, site_id) FROM stdin;
\.


--
-- Data for Name: slow_alert_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY slow_alert_tb (id, url, start_time, end_time, local_host) FROM stdin;
\.


--
-- Data for Name: sub_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sub_account_tb (id, groupid, amount, sub_orderid, create_time, card_account_id, uin, type) FROM stdin;
\.


--
-- Data for Name: switch_line_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY switch_line_tb (id, comid, create_time, end_time) FROM stdin;
\.


--
-- Data for Name: sync_info_pool_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sync_info_pool_tb (id, comid, table_name, table_id, create_time, operate, state) FROM stdin;
1	3	com_pass_tb	1	1515985124	0	0
2	3	com_pass_tb	2	1515985124	0	0
3	3	com_info_tb	3	1515985272	1	0
4	3	user_info_tb	1	1515985331	0	0
5	3	user_info_tb	2	1515989632	0	0
6	3	user_info_tb	3	1515989651	0	0
7	3	user_info_tb	4	1515989665	0	0
8	3	user_info_tb	5	1515990247	0	0
9	3	user_info_tb	6	1515990254	0	0
10	3	user_info_tb	7	1515990266	0	0
\.


--
-- Data for Name: thirdpay_order_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY thirdpay_order_tb (out_trade_no, id, order_id_local) FROM stdin;
\.


--
-- Data for Name: ticket_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY ticket_tb (id, create_time, limit_day, money, state, uin, comid, utime, umoney, type, orderid, bmoney, wxp_orderid, shop_id, resources, is_back_money, pmoney, need_sync, ticket_id, operate_user, state_zh, car_number, type_zh, remark) FROM stdin;
\.


--
-- Data for Name: ticket_uion_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY ticket_uion_tb (id, req_uin, res_uin, req_tid, res_tid, req_time, res_time, win_uin, state, req_money, res_money) FROM stdin;
\.


--
-- Data for Name: tingchebao_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY tingchebao_account_tb (id, amount, type, create_time, remark, utype, orderid, withdraw_id, online_orderid, uin) FROM stdin;
\.


--
-- Data for Name: tmp_p4top5_primarykey; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY tmp_p4top5_primarykey (id, table_type, p4_id, p5_id, groupid) FROM stdin;
\.


--
-- Data for Name: transfer_url_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY transfer_url_tb (id, url, ctime, state) FROM stdin;
\.


--
-- Data for Name: union_park_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY union_park_tb (id, company_name, phone, address, resume, longitude, latitude, parking_type, parking_total, share_number, money, type, isfixed, epay, remarks, empty, union_state, monthlypay, ctime) FROM stdin;
\.


--
-- Data for Name: user_account_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_account_tb (id, uin, amount, type, create_time, remark, pay_type, uid, target, orderid) FROM stdin;
\.


--
-- Data for Name: user_friend_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_friend_tb (id, buin, euin, ctime, atype, is_add_hx) FROM stdin;
\.


--
-- Data for Name: user_info_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY user_info_tb (id, nickname, password, strid, sex, email, phone, mobile, address, resume, reg_time, logon_time, logoff_time, online_flag, comid, auth_flag, balance, state, recom_code, md5pass, cid, department_id, media, isview, collector_pics, collector_auditor, imei, client_type, version, wxp_openid, wx_name, wx_imgurl, shop_id, credit_limit, is_auth, reward_score, firstorderquota, rewardquota, recommendquota, ticketquota, hx_name, hx_pass, role_id, order_hid, chanid, groupid, creator_id, cityid, union_state, upload_union_time, member_id, operate_type, is_sync, update_time, user_id) FROM stdin;
524768	联合测试	123456	test524768	-1	\N	\N	18688888888	\N	\N	1515985331	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	1	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	1
524767	联合测试2	123456	test524767	-1	\N	\N	\N	\N	\N	1515989632	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	2
524766	联合测试3	123456	test524766	-1	\N	\N	\N	\N	\N	1515989651	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	3
524765	联合测试4	123456	test524765	-1	\N	\N	\N	\N	\N	1515989665	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	4
524764	联合测试5	123456	test524764	-1	\N	\N	\N	\N	\N	1515990246	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	5
524763	联合测试6	123456	test524763	-1	\N	\N	\N	\N	\N	1515990253	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	6
524762	联合测试7	123456	test524762	-1	\N	\N	\N	\N	\N	1515990266	\N	\N	\N	3	1	0.00	0	\N	\N	\N	\N	0	0	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	30	0	-1	-1	\N	\N	0	\N	\N	\N	0	\N	7
1000001	\N	123456	admin	1	\N	\N	\N	\N	\N	\N	1400743883	\N	22	0	0	0.00	0	\N	18432daeaf270b986d347513a1d78761	\N	\N	0	1	0	\N	\N	0	\N	\N	\N	\N	\N	0.00	0	0.00	8.00	2.00	5.00	-1.00	\N	\N	0	0	-1	-1	\N	-1	0	\N	\N	\N	0	\N	\N
\.


--
-- Data for Name: user_liuyan_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_liuyan_tb (id, fuin, message, ctime, is_read, tuin) FROM stdin;
\.


--
-- Data for Name: user_local_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_local_tb (id, uid, distance, is_onseat, lat, lon, ctime) FROM stdin;
\.


--
-- Data for Name: user_log_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY user_log_tb (id, comid, create_time, logs, type, uid) FROM stdin;
1	0	1515985125	新建了停车场,1	100	admin
2	3	1515985272	后台修改了停车场,编号：3(update com_info_tb set invalid_order=?,company_name=?,address=?,phone=?,mobile=?,mcompany=?,parking_total=?,parking_type=?,type=?,minprice_unit=?,share_number=?,update_time=?,uid=?,biz_id=?,state=? ,etc=?,nfc=?,book=?,navi=?,monthlypay=?,isnight=?,isfixed=?,epay=?,city=?,longitude=?,latitude=?,fixed_pass_time=?,isview=?,car_type=?,passfree=?,activity=?,activity_content=?,isautopay=?,full_set=?,leave_set=?,allowance=?,pid=?  where id=?,params:0,联合测试,北京市北京市海淀区信息中路12号,18211111111,,上地,1000,0,0,0.0,0,1515985272,-1,-1,0,2,0,0,0,0,0,0,0,110000,116.316061,40.046672,null,1,0,0,0,,1,0,0,0.0,-1,3,)	101	admin
\.


--
-- Data for Name: user_message_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_message_tb (id, type, hasread, ctime, content, uin, title) FROM stdin;
\.


--
-- Data for Name: user_payaccount_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_payaccount_tb (id, uin, type, account, ctime) FROM stdin;
\.


--
-- Data for Name: user_pic_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_pic_tb (id, pic_url, state, ctime, uin, driver_year, driver_pic, utime, resume) FROM stdin;
\.


--
-- Data for Name: user_preaddfriend_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_preaddfriend_tb (id, buin, euin, atype, resume, ctime, utime) FROM stdin;
\.


--
-- Data for Name: user_profile_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY user_profile_tb (id, uin, low_recharge, voice_warn, auto_cash, enter_warn, create_time, update_time, limit_money, bolink_limit) FROM stdin;
\.


--
-- Data for Name: user_role_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY user_role_tb (role_name, state, id, oid, resume, type, adminid, is_inspect, is_collector, is_opencard) FROM stdin;
车场管理员	0	30	8	\N	0	0	0	0	0
BOSS管理员	0	345	5	\N	0	\N	0	0	0
集团管理员	0	26	2	\N	0	0	0	0	0
渠道管理员	0	27	3	\N	0	0	0	0	0
联盟管理员	0	28	6	\N	0	0	0	0	0
城市管理员	0	29	7	\N	0	0	0	0	0
111	0	619	8	11	1	20551	0	0	0
收费员	0	620	8		1	522716	0	1	0
System	0	621	8		1	522705	0	1	0
总管理员	0	0	5	\N	0	1000001	0	0	0
财务管理员	0	622	8		1	522740	0	0	1
何正文	0	623	8		1	522772	1	0	0
系统管理员	0	624	2		1	522739	0	1	0
小组长	1	625	2		1	522852	0	0	0
ceshi	0	626	8		1	522951	0	1	0
QQ	0	627	2		1	523068	0	0	0
商户	0	628	8		1	523181	0	0	0
11	0	629	8		1	522993	0	1	0
系统管理员	0	630	8		1	522993	0	1	0
收费员	0	631	8		1	523575	0	1	0
茶楼	1	633	8		1	523575	0	0	1
佳丽酒楼	1	632	8		1	523575	0	0	1
111	0	634	8	111	1	522951	0	0	0
\.


--
-- Data for Name: user_session_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY user_session_tb (id, token, uin, create_time, comid, version, groupid) FROM stdin;
\.


--
-- Data for Name: user_worksite_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY user_worksite_tb (id, worksite_id, uin) FROM stdin;
\.


--
-- Data for Name: verification_code_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY verification_code_tb (id, verification_code, uin, create_time, state) FROM stdin;
\.


--
-- Data for Name: vip_apply_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY vip_apply_tb (id, uin, mobile, address, cname, car_image, state, uid) FROM stdin;
\.


--
-- Data for Name: visit_info_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY visit_info_tb (id, uid, contacts, address, create_time, state, visit_content) FROM stdin;
\.


--
-- Data for Name: withdrawer_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY withdrawer_tb (id, comid, create_time, amount, state, update_time, acc_id, uin, wtype, remark, groupid, cityid) FROM stdin;
\.


--
-- Data for Name: work_berthsec_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_berthsec_tb (berthsec_id, work_group_id, id, state, is_delete, inspect_group_id) FROM stdin;
\.


--
-- Data for Name: work_detail_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_detail_tb (id, workid, uid, create_time, orderid, bid, berthsec_id) FROM stdin;
\.


--
-- Data for Name: work_employee_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_employee_tb (work_group_id, employee_id, id, state) FROM stdin;
\.


--
-- Data for Name: work_group_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_group_tb (id, uuid, workgroup_name, company_id, create_time, update_time, is_active, chanid) FROM stdin;
\.


--
-- Data for Name: work_inspector_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_inspector_tb (id, inspect_group_id, inspector_id, state) FROM stdin;
\.


--
-- Data for Name: work_time_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY work_time_tb (id, b_hour, b_minute, e_hour, e_minute, role_id, is_delete) FROM stdin;
\.


--
-- Data for Name: wxp_user_tb; Type: TABLE DATA; Schema: public; Owner: tracqdev
--

COPY wxp_user_tb (id, openid, create_time, uin, balance, car_number, union_state) FROM stdin;
\.


--
-- Data for Name: zld_black_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY zld_black_tb (id, ctime, utime, uin, state, remark, comid, car_number, black_uuid, operator) FROM stdin;
\.


--
-- Data for Name: zld_game_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY zld_game_tb (id, uin, scroe, ctime, iswin, type, tid) FROM stdin;
\.


--
-- Data for Name: zld_organize_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY zld_organize_tb (id, name, pid, type) FROM stdin;
\.


--
-- Data for Name: zld_orgtype_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY zld_orgtype_tb (id, name, pid, state, create_time, delete_time, update_time, sort, creator_id, deletor_id) FROM stdin;
5	BOSS	0	0	\N	\N	\N	\N	\N	\N
7	城市商户	0	0	\N	\N	\N	\N	\N	\N
2	运营集团	0	0	\N	\N	\N	\N	\N	\N
8	停车场	0	0	\N	\N	\N	\N	\N	\N
9	联盟厂商	0	0	\N	\N	\N	\N	\N	\N
3	渠道	0	0	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: zld_protocol_tb; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY zld_protocol_tb (id, uin, ctime, is_remind, agree) FROM stdin;
\.


--
-- Name: carpic_tb PK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY carpic_tb
    ADD CONSTRAINT "PK" PRIMARY KEY (id);


--
-- Name: advert_tb advert_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY advert_tb
    ADD CONSTRAINT advert_tb_pkey PRIMARY KEY (id);


--
-- Name: alipay_log alipay_log_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY alipay_log
    ADD CONSTRAINT alipay_log_pkey PRIMARY KEY (id);


--
-- Name: area_ibeacon_tb area_ibeacon_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY area_ibeacon_tb
    ADD CONSTRAINT area_ibeacon_tb_pkey PRIMARY KEY (id);


--
-- Name: auth_role_tb auth_role_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY auth_role_tb
    ADD CONSTRAINT auth_role_tb_pkey PRIMARY KEY (id);


--
-- Name: auth_tb auth_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY auth_tb
    ADD CONSTRAINT auth_tb_pkey PRIMARY KEY (id);


--
-- Name: berth_order_tb_error berth_order_tb_error_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY berth_order_tb_error
    ADD CONSTRAINT berth_order_tb_error_pkey PRIMARY KEY (id);


--
-- Name: berth_order_tb berth_order_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY berth_order_tb
    ADD CONSTRAINT berth_order_tb_pkey PRIMARY KEY (id);


--
-- Name: bizcircle_tb bizcircle_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY bizcircle_tb
    ADD CONSTRAINT bizcircle_tb_pkey PRIMARY KEY (id);


--
-- Name: bolink_ccount_tb bolink_ccount_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bolink_ccount_tb
    ADD CONSTRAINT bolink_ccount_tb_pkey PRIMARY KEY (id);


--
-- Name: bolink_order_tb bolink_order_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bolink_order_tb
    ADD CONSTRAINT bolink_order_tb_pkey PRIMARY KEY (id);


--
-- Name: bonus_record_tb bonus_record_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bonus_record_tb
    ADD CONSTRAINT bonus_record_tb_pkey PRIMARY KEY (id);


--
-- Name: bonus_type_tb bonus_type_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bonus_type_tb
    ADD CONSTRAINT bonus_type_tb_pkey PRIMARY KEY (id);


--
-- Name: car_info_tb car_info_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY car_info_tb
    ADD CONSTRAINT car_info_tb_pkey PRIMARY KEY (id);


--
-- Name: car_number_type_tb car_number_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY car_number_type_tb
    ADD CONSTRAINT car_number_type_pkey PRIMARY KEY (id);


--
-- Name: car_picturs_tb car_picturs_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY car_picturs_tb
    ADD CONSTRAINT car_picturs_tb_pkey PRIMARY KEY (id);


--
-- Name: car_stops_tb car_stops_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY car_stops_tb
    ADD CONSTRAINT car_stops_tb_pkey PRIMARY KEY (id);


--
-- Name: car_type_tb car_type_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY car_type_tb
    ADD CONSTRAINT car_type_tb_pkey PRIMARY KEY (id);


--
-- Name: card_account_tb card_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY card_account_tb
    ADD CONSTRAINT card_account_tb_pkey PRIMARY KEY (id);


--
-- Name: card_anlysis_tb card_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY card_anlysis_tb
    ADD CONSTRAINT card_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: card_carnumber_tb card_carnumber_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY card_carnumber_tb
    ADD CONSTRAINT card_carnumber_tb_pkey PRIMARY KEY (id);


--
-- Name: card_renew_tb card_renew_tb_PK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY card_renew_tb
    ADD CONSTRAINT "card_renew_tb_PK" PRIMARY KEY (id);


--
-- Name: carower_product carower_product_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY carower_product
    ADD CONSTRAINT carower_product_pkey PRIMARY KEY (id);


--
-- Name: carstop_order_tb carstop_order_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY carstop_order_tb
    ADD CONSTRAINT carstop_order_tb_pkey PRIMARY KEY (id);


--
-- Name: carstops_price_tb carstops_price_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY carstops_price_tb
    ADD CONSTRAINT carstops_price_tb_pkey PRIMARY KEY (id);


--
-- Name: city_account_tb city_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY city_account_tb
    ADD CONSTRAINT city_account_tb_pkey PRIMARY KEY (id);


--
-- Name: city_hotarea_tb city_hotarea_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY city_hotarea_tb
    ADD CONSTRAINT city_hotarea_tb_pkey PRIMARY KEY (id);


--
-- Name: city_peakalert_tb city_peakalert_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY city_peakalert_tb
    ADD CONSTRAINT city_peakalert_tb_pkey PRIMARY KEY (id);


--
-- Name: city_video_tb city_video_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY city_video_tb
    ADD CONSTRAINT city_video_tb_pkey PRIMARY KEY (id);


--
-- Name: collect_anlysis_tb collect_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY collect_anlysis_tb
    ADD CONSTRAINT collect_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: collector_account_pic_tb collector_account_pic_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY collector_account_pic_tb
    ADD CONSTRAINT collector_account_pic_tb_pkey PRIMARY KEY (id);


--
-- Name: collector_scroe_tb collector_scroe_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY collector_scroe_tb
    ADD CONSTRAINT collector_scroe_tb_pkey PRIMARY KEY (id);


--
-- Name: collector_set_tb collector_set_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY collector_set_tb
    ADD CONSTRAINT collector_set_tb_pkey PRIMARY KEY (id);


--
-- Name: collector_sort collector_sort_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY collector_sort
    ADD CONSTRAINT collector_sort_pkey PRIMARY KEY (id);


--
-- Name: com_account_tb com_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_account_tb
    ADD CONSTRAINT com_account_tb_pkey PRIMARY KEY (id);


--
-- Name: com_alert_tb com_alert_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_alert_tb
    ADD CONSTRAINT com_alert_tb_pkey PRIMARY KEY (id);


--
-- Name: com_berthsecs_tb com_berthsecs_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_berthsecs_tb
    ADD CONSTRAINT com_berthsecs_tb_pkey PRIMARY KEY (id);


--
-- Name: com_brake_tb com_brake_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_brake_tb
    ADD CONSTRAINT com_brake_tb_pkey PRIMARY KEY (id);


--
-- Name: com_camera_tb com_camera_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_camera_tb
    ADD CONSTRAINT com_camera_tb_pkey PRIMARY KEY (id);


--
-- Name: com_comment_tb com_comment_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_comment_tb
    ADD CONSTRAINT com_comment_tb_pkey PRIMARY KEY (id);


--
-- Name: com_info_tb com_info_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_info_tb
    ADD CONSTRAINT com_info_pkey PRIMARY KEY (id);


--
-- Name: com_info_tb com_info_tb_longitude_latitude_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_info_tb
    ADD CONSTRAINT com_info_tb_longitude_latitude_key UNIQUE (longitude, latitude);


--
-- Name: com_led_tb com_led_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_led_tb
    ADD CONSTRAINT com_led_tb_pkey PRIMARY KEY (id);


--
-- Name: user_message_tb com_message_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_message_tb
    ADD CONSTRAINT com_message_tb_pkey PRIMARY KEY (id);


--
-- Name: com_nfc_tb com_nfc_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_nfc_tb
    ADD CONSTRAINT com_nfc_tb_pkey PRIMARY KEY (id);


--
-- Name: com_park_tb com_park_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_park_tb
    ADD CONSTRAINT com_park_tb_pkey PRIMARY KEY (id);


--
-- Name: com_parkstatus_tb com_parkstatus_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_parkstatus_tb
    ADD CONSTRAINT com_parkstatus_tb_pkey PRIMARY KEY (id);


--
-- Name: com_pass_tb com_pass_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_pass_tb
    ADD CONSTRAINT com_pass_tb_pkey PRIMARY KEY (id);


--
-- Name: com_picturs_tb com_picturs_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_picturs_tb
    ADD CONSTRAINT com_picturs_tb_pkey PRIMARY KEY (id);


--
-- Name: com_pos_tb com_pos_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_pos_tb
    ADD CONSTRAINT com_pos_tb_pkey PRIMARY KEY (id);


--
-- Name: com_praise_tb com_praise_tb_comid_uin_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_praise_tb
    ADD CONSTRAINT com_praise_tb_comid_uin_key UNIQUE (comid, uin);


--
-- Name: com_praise_tb com_praise_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_praise_tb
    ADD CONSTRAINT com_praise_tb_pkey PRIMARY KEY (id);


--
-- Name: com_temp_tb com_temp_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY com_temp_tb
    ADD CONSTRAINT com_temp_tb_pkey PRIMARY KEY (id);


--
-- Name: com_worksite_tb com_worksite_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY com_worksite_tb
    ADD CONSTRAINT com_worksite_tb_pkey PRIMARY KEY (id);


--
-- Name: confirm_order_tb confirm_order_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY confirm_order_tb
    ADD CONSTRAINT confirm_order_tb_pkey PRIMARY KEY (id);


--
-- Name: consume_anlysis_tb consume_anlysis_tb_create_time_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY consume_anlysis_tb
    ADD CONSTRAINT consume_anlysis_tb_create_time_key UNIQUE (create_time);


--
-- Name: consume_anlysis_tb consume_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY consume_anlysis_tb
    ADD CONSTRAINT consume_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: dataauth_tb dataauth_tb_authorizee_authorizer_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY dataauth_tb
    ADD CONSTRAINT dataauth_tb_authorizee_authorizer_key UNIQUE (authorizee, authorizer);


--
-- Name: dataauth_tb dataauth_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY dataauth_tb
    ADD CONSTRAINT dataauth_tb_pkey PRIMARY KEY (id);


--
-- Name: department_tb department_tb_nid_pid_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY department_tb
    ADD CONSTRAINT department_tb_nid_pid_key UNIQUE (nid, pid);


--
-- Name: department_tb department_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY department_tb
    ADD CONSTRAINT department_tb_pkey PRIMARY KEY (id);


--
-- Name: device_fault_tb device_fault_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY device_fault_tb
    ADD CONSTRAINT device_fault_tb_pkey PRIMARY KEY (id);


--
-- Name: dici_tb dici_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY dici_tb
    ADD CONSTRAINT dici_tb_pkey PRIMARY KEY (id);


--
-- Name: directpay_anlysis_tb directpay_anlysis_tb_create_time_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY directpay_anlysis_tb
    ADD CONSTRAINT directpay_anlysis_tb_create_time_key UNIQUE (create_time);


--
-- Name: directpay_anlysis_tb directpay_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY directpay_anlysis_tb
    ADD CONSTRAINT directpay_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: flygame_pool_tb flygame_pool_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY flygame_pool_tb
    ADD CONSTRAINT flygame_pool_tb_pkey PRIMARY KEY (id);


--
-- Name: flygame_score_anlysis_tb flygame_score_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY flygame_score_anlysis_tb
    ADD CONSTRAINT flygame_score_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: flygame_score_tb flygame_score_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY flygame_score_tb
    ADD CONSTRAINT flygame_score_tb_pkey PRIMARY KEY (id);


--
-- Name: free_reasons_tb free_reasons_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY free_reasons_tb
    ADD CONSTRAINT free_reasons_tb_pkey PRIMARY KEY (id);


--
-- Name: group_account_tb group_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY group_account_tb
    ADD CONSTRAINT group_account_tb_pkey PRIMARY KEY (id);


--
-- Name: hasparker_anlysis_tb hasparker_anlysis_tb_anlysis_time_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY hasparker_anlysis_tb
    ADD CONSTRAINT hasparker_anlysis_tb_anlysis_time_key UNIQUE (anlysis_time);


--
-- Name: hasparker_anlysis_tb hasparker_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY hasparker_anlysis_tb
    ADD CONSTRAINT hasparker_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: ibeacon_tb ibeacon_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY ibeacon_tb
    ADD CONSTRAINT ibeacon_tb_pkey PRIMARY KEY (id);


--
-- Name: induce_ad_history_tb induce_ad_history_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY induce_ad_history_tb
    ADD CONSTRAINT induce_ad_history_tb_pkey PRIMARY KEY (id);


--
-- Name: induce_ad_tb induce_ad_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY induce_ad_tb
    ADD CONSTRAINT induce_ad_tb_pkey PRIMARY KEY (id);


--
-- Name: induce_module_tb induce_module_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY induce_module_tb
    ADD CONSTRAINT induce_module_tb_pkey PRIMARY KEY (id);


--
-- Name: induce_park_tb induce_park_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY induce_park_tb
    ADD CONSTRAINT induce_park_tb_pkey PRIMARY KEY (id);


--
-- Name: induce_tb induce_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY induce_tb
    ADD CONSTRAINT induce_tb_pkey PRIMARY KEY (id);


--
-- Name: inspect_event_tb inspect_event_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY inspect_event_tb
    ADD CONSTRAINT inspect_event_tb_pkey PRIMARY KEY (id);


--
-- Name: inspect_group_tb inspect_group_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY inspect_group_tb
    ADD CONSTRAINT inspect_group_tb_pkey PRIMARY KEY (id);


--
-- Name: lift_rod_tb lift_rod_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY lift_rod_tb
    ADD CONSTRAINT lift_rod_tb_pkey PRIMARY KEY (id);


--
-- Name: liftrod_info_tb liftrod_info_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY liftrod_info_tb
    ADD CONSTRAINT liftrod_info_tb_pkey PRIMARY KEY (id);


--
-- Name: local_info_tb local_info_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY local_info_tb
    ADD CONSTRAINT local_info_tb_pkey PRIMARY KEY (id);


--
-- Name: logo_tb logo_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY logo_tb
    ADD CONSTRAINT logo_tb_pkey PRIMARY KEY (id);


--
-- Name: lottery_tb lottery_tb_orderid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY lottery_tb
    ADD CONSTRAINT lottery_tb_orderid_key UNIQUE (orderid);


--
-- Name: message_tb message_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY message_tb
    ADD CONSTRAINT message_tb_pkey PRIMARY KEY (id);


--
-- Name: mobile_tb mobile_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY mobile_tb
    ADD CONSTRAINT mobile_tb_pkey PRIMARY KEY (id);


--
-- Name: mobilepay_anlysis_tb mobilepay_anlysis_tb_create_time_comid_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY mobilepay_anlysis_tb
    ADD CONSTRAINT mobilepay_anlysis_tb_create_time_comid_key UNIQUE (create_time, comid);


--
-- Name: mobilepay_anlysis_tb mobilepay_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY mobilepay_anlysis_tb
    ADD CONSTRAINT mobilepay_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: money_set_tb money_set_tb_comid_mtype_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY money_set_tb
    ADD CONSTRAINT money_set_tb_comid_mtype_key UNIQUE (comid, mtype);


--
-- Name: money_set_tb money_set_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY money_set_tb
    ADD CONSTRAINT money_set_tb_pkey PRIMARY KEY (id);


--
-- Name: no_payment_tb no_payment_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY no_payment_tb
    ADD CONSTRAINT no_payment_tb_pkey PRIMARY KEY (id);


--
-- Name: online_anlysis_tb online_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY online_anlysis_tb
    ADD CONSTRAINT online_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: order_anlysis_tb order_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY order_anlysis_tb
    ADD CONSTRAINT order_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: order_attach_tb order_attach_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY order_attach_tb
    ADD CONSTRAINT order_attach_tb_pkey PRIMARY KEY (id);


--
-- Name: order_log_tb order_log_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY order_log_tb
    ADD CONSTRAINT order_log_tb_pkey PRIMARY KEY (id);


--
-- Name: order_reserve_tb order_reserve_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY order_reserve_tb
    ADD CONSTRAINT order_reserve_tb_pkey PRIMARY KEY (id);


--
-- Name: order_tb order_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY order_tb
    ADD CONSTRAINT order_tb_pkey PRIMARY KEY (id);


--
-- Name: order_ticket_detail_tb order_ticket_detail_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY order_ticket_detail_tb
    ADD CONSTRAINT order_ticket_detail_tb_pkey PRIMARY KEY (id);


--
-- Name: order_ticket_tb order_ticket_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY order_ticket_tb
    ADD CONSTRAINT order_ticket_tb_pkey PRIMARY KEY (id);


--
-- Name: org_area_tb org_area_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY org_area_tb
    ADD CONSTRAINT org_area_tb_pkey PRIMARY KEY (id);


--
-- Name: org_channel_tb org_channel_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY org_channel_tb
    ADD CONSTRAINT org_channel_tb_pkey PRIMARY KEY (id);


--
-- Name: org_city_merchants org_city_merchants_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY org_city_merchants
    ADD CONSTRAINT org_city_merchants_pkey PRIMARY KEY (id);


--
-- Name: org_group_tb org_group_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY org_group_tb
    ADD CONSTRAINT org_group_tb_pkey PRIMARY KEY (id);


--
-- Name: park_account_tb park_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY park_account_tb
    ADD CONSTRAINT park_account_tb_pkey PRIMARY KEY (id);


--
-- Name: park_anlysis_tb park_anlysis_tb_create_time_comid_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY park_anlysis_tb
    ADD CONSTRAINT park_anlysis_tb_create_time_comid_key UNIQUE (create_time, comid);


--
-- Name: park_anlysis_tb park_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY park_anlysis_tb
    ADD CONSTRAINT park_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: money_record_tb park_charge_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY money_record_tb
    ADD CONSTRAINT park_charge_tb_pkey PRIMARY KEY (id);


--
-- Name: park_charge_tb park_charge_tb_pkey1; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY park_charge_tb
    ADD CONSTRAINT park_charge_tb_pkey1 PRIMARY KEY (id);


--
-- Name: park_log_tb park_log_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY park_log_tb
    ADD CONSTRAINT park_log_tb_pkey PRIMARY KEY (id);


--
-- Name: park_token_tb park_token_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY park_token_tb
    ADD CONSTRAINT park_token_tb_pkey PRIMARY KEY (id);


--
-- Name: park_verify_tb park_verify_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY park_verify_tb
    ADD CONSTRAINT park_verify_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_account_tb parkuser_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_account_tb
    ADD CONSTRAINT parkuser_account_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_cash_tb parkuser_cash_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_cash_tb
    ADD CONSTRAINT parkuser_cash_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_comment_tb parkuser_comment_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_comment_tb
    ADD CONSTRAINT parkuser_comment_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_income_anlysis_tb parkuser_income_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_income_anlysis_tb
    ADD CONSTRAINT parkuser_income_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_income_anlysis_tb parkuser_income_anlysis_tb_uin_create_time_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_income_anlysis_tb
    ADD CONSTRAINT parkuser_income_anlysis_tb_uin_create_time_key UNIQUE (uin, create_time);


--
-- Name: parkuser_message_tb parkuser_message_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_message_tb
    ADD CONSTRAINT parkuser_message_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_reward_tb parkuser_reward_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_reward_tb
    ADD CONSTRAINT parkuser_reward_tb_pkey PRIMARY KEY (id);


--
-- Name: parkuser_work_record_tb parkuser_work_record_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY parkuser_work_record_tb
    ADD CONSTRAINT parkuser_work_record_pkey PRIMARY KEY (id);


--
-- Name: peakalert_anlysis_tb peakalert_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY peakalert_anlysis_tb
    ADD CONSTRAINT peakalert_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: dictionary_detail_tb pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY dictionary_detail_tb
    ADD CONSTRAINT pk PRIMARY KEY (id);


--
-- Name: price_assist_tb price_assist_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY price_assist_tb
    ADD CONSTRAINT price_assist_tb_pkey PRIMARY KEY (id);


--
-- Name: dictionary_item_tb primaryKey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY dictionary_item_tb
    ADD CONSTRAINT "primaryKey" PRIMARY KEY (id);


--
-- Name: product_package_tb product_package_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY product_package_tb
    ADD CONSTRAINT product_package_tb_pkey PRIMARY KEY (id);


--
-- Name: price_tb product_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY price_tb
    ADD CONSTRAINT product_tb_pkey PRIMARY KEY (id);


--
-- Name: qr_code_tb qr_code_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qr_code_tb
    ADD CONSTRAINT qr_code_tb_pkey PRIMARY KEY (id);


--
-- Name: qr_thirdpark_code qr_thirdpark_code_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qr_thirdpark_code
    ADD CONSTRAINT qr_thirdpark_code_pkey PRIMARY KEY (id);


--
-- Name: recharge_tb recharge_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY recharge_tb
    ADD CONSTRAINT recharge_tb_pkey PRIMARY KEY (id);


--
-- Name: recom_tb recom_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY recom_tb
    ADD CONSTRAINT recom_tb_pkey PRIMARY KEY (id);


--
-- Name: recommend_tb recommend_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY recommend_tb
    ADD CONSTRAINT recommend_tb_pkey PRIMARY KEY (id);


--
-- Name: reg_anlysis_tb reg_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY reg_anlysis_tb
    ADD CONSTRAINT reg_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: register_anlysis_tb register_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY register_anlysis_tb
    ADD CONSTRAINT register_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: register_anlysis_tb register_anlysis_tb_reg_time_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY register_anlysis_tb
    ADD CONSTRAINT register_anlysis_tb_reg_time_key UNIQUE (reg_time);


--
-- Name: remain_berth_tb remain_berth_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY remain_berth_tb
    ADD CONSTRAINT remain_berth_tb_pkey PRIMARY KEY (id);


--
-- Name: reward_account_tb reward_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY reward_account_tb
    ADD CONSTRAINT reward_account_tb_pkey PRIMARY KEY (id);


--
-- Name: role_auth_tb role_auth_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY role_auth_tb
    ADD CONSTRAINT role_auth_tb_pkey PRIMARY KEY (id);


--
-- Name: sensor_online_anlysis_tb sensor_online_anlysis_tb_comid_create_time_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sensor_online_anlysis_tb
    ADD CONSTRAINT sensor_online_anlysis_tb_comid_create_time_key UNIQUE (comid, create_time);


--
-- Name: sensor_online_anlysis_tb sensor_online_anlysis_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sensor_online_anlysis_tb
    ADD CONSTRAINT sensor_online_anlysis_tb_pkey PRIMARY KEY (id);


--
-- Name: share_log_tb share_log_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY share_log_tb
    ADD CONSTRAINT share_log_tb_pkey PRIMARY KEY (id);


--
-- Name: shop_account_tb shop_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY shop_account_tb
    ADD CONSTRAINT shop_account_tb_pkey PRIMARY KEY (id);


--
-- Name: shop_tb shop_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY shop_tb
    ADD CONSTRAINT shop_tb_pkey PRIMARY KEY (id);


--
-- Name: sim_tb sim_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sim_tb
    ADD CONSTRAINT sim_tb_pkey PRIMARY KEY (id);


--
-- Name: sites_tb sites_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sites_tb
    ADD CONSTRAINT sites_tb_pkey PRIMARY KEY (id);


--
-- Name: sites_voltage_tb sites_voltage_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sites_voltage_tb
    ADD CONSTRAINT sites_voltage_tb_pkey PRIMARY KEY (id);


--
-- Name: slow_alert_tb slow_alert_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY slow_alert_tb
    ADD CONSTRAINT slow_alert_tb_pkey PRIMARY KEY (id);


--
-- Name: switch_line_tb switch_line_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY switch_line_tb
    ADD CONSTRAINT switch_line_tb_pkey PRIMARY KEY (id);


--
-- Name: sync_info_pool_tb sync_info_pool_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY sync_info_pool_tb
    ADD CONSTRAINT sync_info_pool_tb_pkey PRIMARY KEY (id);


--
-- Name: order_message_tb system_message_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY order_message_tb
    ADD CONSTRAINT system_message_tb_pkey PRIMARY KEY (id);


--
-- Name: ticket_tb ticket_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY ticket_tb
    ADD CONSTRAINT ticket_tb_pkey PRIMARY KEY (id);


--
-- Name: ticket_uion_tb ticket_uion_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY ticket_uion_tb
    ADD CONSTRAINT ticket_uion_tb_pkey PRIMARY KEY (id);


--
-- Name: tingchebao_account_tb tingchebao_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY tingchebao_account_tb
    ADD CONSTRAINT tingchebao_account_tb_pkey PRIMARY KEY (id);


--
-- Name: tmp_p4top5_primarykey tmp_p4top5_primarykey_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY tmp_p4top5_primarykey
    ADD CONSTRAINT tmp_p4top5_primarykey_pkey PRIMARY KEY (id);


--
-- Name: transfer_url_tb transfer_url_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY transfer_url_tb
    ADD CONSTRAINT transfer_url_tb_pkey PRIMARY KEY (id);


--
-- Name: union_park_tb union_park_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY union_park_tb
    ADD CONSTRAINT union_park_pkey PRIMARY KEY (id);


--
-- Name: user_account_tb user_account_tb_create_time_type_uin_amount_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_account_tb
    ADD CONSTRAINT user_account_tb_create_time_type_uin_amount_key UNIQUE (create_time, type, uin, amount);


--
-- Name: user_account_tb user_account_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_account_tb
    ADD CONSTRAINT user_account_tb_pkey PRIMARY KEY (id);


--
-- Name: user_friend_tb user_friend_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_friend_tb
    ADD CONSTRAINT user_friend_tb_pkey PRIMARY KEY (id);


--
-- Name: user_info_tb user_info_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_info_tb
    ADD CONSTRAINT user_info_tb_pkey PRIMARY KEY (id);


--
-- Name: user_info_tb user_info_tb_strid_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_info_tb
    ADD CONSTRAINT user_info_tb_strid_key UNIQUE (strid);


--
-- Name: user_liuyan_tb user_liuyan_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_liuyan_tb
    ADD CONSTRAINT user_liuyan_tb_pkey PRIMARY KEY (id);


--
-- Name: user_local_tb user_local_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_local_tb
    ADD CONSTRAINT user_local_tb_pkey PRIMARY KEY (id);


--
-- Name: user_log_tb user_log_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_log_tb
    ADD CONSTRAINT user_log_tb_pkey PRIMARY KEY (id);


--
-- Name: user_payaccount_tb user_payaccount_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_payaccount_tb
    ADD CONSTRAINT user_payaccount_tb_pkey PRIMARY KEY (id);


--
-- Name: user_pic_tb user_pic_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_pic_tb
    ADD CONSTRAINT user_pic_tb_pkey PRIMARY KEY (id);


--
-- Name: user_preaddfriend_tb user_preaddfriend_tb_buin_euin_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_preaddfriend_tb
    ADD CONSTRAINT user_preaddfriend_tb_buin_euin_key UNIQUE (buin, euin);


--
-- Name: user_preaddfriend_tb user_preaddfriend_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_preaddfriend_tb
    ADD CONSTRAINT user_preaddfriend_tb_pkey PRIMARY KEY (id);


--
-- Name: user_profile_tb user_profile_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_profile_tb
    ADD CONSTRAINT user_profile_tb_pkey PRIMARY KEY (id);


--
-- Name: user_profile_tb user_profile_tb_uin_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_profile_tb
    ADD CONSTRAINT user_profile_tb_uin_key UNIQUE (uin);


--
-- Name: user_role_tb user_role_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_role_tb
    ADD CONSTRAINT user_role_tb_pkey PRIMARY KEY (id);


--
-- Name: user_session_tb user_session_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_session_tb
    ADD CONSTRAINT user_session_tb_pkey PRIMARY KEY (id);


--
-- Name: user_session_tb user_session_tb_token_comid_uin_key; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY user_session_tb
    ADD CONSTRAINT user_session_tb_token_comid_uin_key UNIQUE (token, comid, uin);


--
-- Name: user_worksite_tb user_worksite_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY user_worksite_tb
    ADD CONSTRAINT user_worksite_tb_pkey PRIMARY KEY (id);


--
-- Name: verification_code_tb verification_code_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY verification_code_tb
    ADD CONSTRAINT verification_code_tb_pkey PRIMARY KEY (id);


--
-- Name: vip_apply_tb vip_apply_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY vip_apply_tb
    ADD CONSTRAINT vip_apply_tb_pkey PRIMARY KEY (id);


--
-- Name: visit_info_tb visit_info_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY visit_info_tb
    ADD CONSTRAINT visit_info_tb_pkey PRIMARY KEY (id);


--
-- Name: withdrawer_tb withdrawer_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY withdrawer_tb
    ADD CONSTRAINT withdrawer_tb_pkey PRIMARY KEY (id);


--
-- Name: work_berthsec_tb work_berthsec_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_berthsec_tb
    ADD CONSTRAINT work_berthsec_tb_pkey PRIMARY KEY (id);


--
-- Name: work_detail_tb work_detail_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_detail_tb
    ADD CONSTRAINT work_detail_tb_pkey PRIMARY KEY (id);


--
-- Name: work_employee_tb work_employee_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_employee_tb
    ADD CONSTRAINT work_employee_tb_pkey PRIMARY KEY (id);


--
-- Name: work_group_tb work_group_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_group_tb
    ADD CONSTRAINT work_group_tb_pkey PRIMARY KEY (id);


--
-- Name: work_inspector_tb work_inspector_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_inspector_tb
    ADD CONSTRAINT work_inspector_tb_pkey PRIMARY KEY (id);


--
-- Name: work_time_tb work_time_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY work_time_tb
    ADD CONSTRAINT work_time_tb_pkey PRIMARY KEY (id);


--
-- Name: wxp_user_tb wxp_user_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: tracqdev
--

ALTER TABLE ONLY wxp_user_tb
    ADD CONSTRAINT wxp_user_tb_pkey PRIMARY KEY (id);


--
-- Name: zld_black_tb zld_black_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY zld_black_tb
    ADD CONSTRAINT zld_black_tb_pkey PRIMARY KEY (id);


--
-- Name: zld_game_tb zld_game_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY zld_game_tb
    ADD CONSTRAINT zld_game_tb_pkey PRIMARY KEY (id);


--
-- Name: zld_organize_tb zld_organize_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY zld_organize_tb
    ADD CONSTRAINT zld_organize_tb_pkey PRIMARY KEY (id);


--
-- Name: zld_orgtype_tb zld_orgtype_tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY zld_orgtype_tb
    ADD CONSTRAINT zld_orgtype_tb_pkey PRIMARY KEY (id);


--
-- Name: zld_protocol_tb zld_protocol _tb_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY zld_protocol_tb
    ADD CONSTRAINT "zld_protocol _tb_pkey" PRIMARY KEY (id);


--
-- Name: advert_tb_aname_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX advert_tb_aname_idx ON advert_tb USING btree (aname);


--
-- Name: alipay_log_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX alipay_log_create_time_idx ON alipay_log USING btree (create_time);


--
-- Name: alipay_log_notify_no_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX alipay_log_notify_no_idx ON alipay_log USING btree (notify_no);


--
-- Name: area_ibeacon_tb_ibcid_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX area_ibeacon_tb_ibcid_comid_idx ON area_ibeacon_tb USING btree (ibcid, comid);


--
-- Name: auth_role_tb_auth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_role_tb_auth_id_idx ON auth_role_tb USING btree (auth_id);


--
-- Name: auth_tb_oid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX auth_tb_oid_idx ON auth_tb USING btree (oid);


--
-- Name: berth_order_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_berth_id_idx ON berth_order_tb USING btree (berth_id);


--
-- Name: berth_order_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_comid_idx ON berth_order_tb USING btree (comid);


--
-- Name: berth_order_tb_dici_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_dici_id_idx ON berth_order_tb USING btree (dici_id);


--
-- Name: berth_order_tb_error_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_berth_id_idx ON berth_order_tb_error USING btree (berth_id);


--
-- Name: berth_order_tb_error_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_comid_idx ON berth_order_tb_error USING btree (comid);


--
-- Name: berth_order_tb_error_dici_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_dici_id_idx ON berth_order_tb_error USING btree (dici_id);


--
-- Name: berth_order_tb_error_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_groupid_idx ON berth_order_tb_error USING btree (groupid);


--
-- Name: berth_order_tb_error_in_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_in_time_idx ON berth_order_tb_error USING btree (in_time DESC NULLS LAST);


--
-- Name: berth_order_tb_error_indicate_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_indicate_idx ON berth_order_tb_error USING btree (indicate);


--
-- Name: berth_order_tb_error_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_orderid_idx ON berth_order_tb_error USING btree (orderid);


--
-- Name: berth_order_tb_error_out_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_out_time_idx ON berth_order_tb_error USING btree (out_time);


--
-- Name: berth_order_tb_error_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_error_state_idx ON berth_order_tb_error USING btree (state);


--
-- Name: berth_order_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_groupid_idx ON berth_order_tb USING btree (groupid);


--
-- Name: berth_order_tb_in_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_in_time_idx ON berth_order_tb USING btree (in_time DESC NULLS LAST);


--
-- Name: berth_order_tb_indicate_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_indicate_idx ON berth_order_tb USING btree (indicate);


--
-- Name: berth_order_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_orderid_idx ON berth_order_tb USING btree (orderid);


--
-- Name: berth_order_tb_out_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_out_time_idx ON berth_order_tb USING btree (out_time);


--
-- Name: berth_order_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX berth_order_tb_state_idx ON berth_order_tb USING btree (state);


--
-- Name: bolink_order_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bolink_order_tb_order_id_idx ON bolink_order_tb USING btree (order_id);


--
-- Name: bolink_order_tb_plate_number_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bolink_order_tb_plate_number_idx ON bolink_order_tb USING btree (plate_number);


--
-- Name: bolink_order_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bolink_order_tb_state_idx ON bolink_order_tb USING btree (state);


--
-- Name: bolink_order_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bolink_order_tb_uin_idx ON bolink_order_tb USING btree (uin);


--
-- Name: bolink_order_tb_union_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bolink_order_tb_union_id_idx ON bolink_order_tb USING btree (union_id);


--
-- Name: bonus_record_tb_bid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bonus_record_tb_bid_idx ON bonus_record_tb USING btree (bid);


--
-- Name: bonus_record_tb_mobile_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bonus_record_tb_mobile_idx ON bonus_record_tb USING btree (mobile);


--
-- Name: bonus_record_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX bonus_record_tb_state_idx ON bonus_record_tb USING btree (state);


--
-- Name: car_info_tb_car_number_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX car_info_tb_car_number_idx ON car_info_tb USING btree (car_number);


--
-- Name: car_info_tb_ctime_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX car_info_tb_ctime_idx ON car_info_tb USING btree (create_time);


--
-- Name: car_info_tb_is_auth_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX car_info_tb_is_auth_idx ON car_info_tb USING btree (is_auth);


--
-- Name: car_info_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX car_info_tb_uin_idx ON car_info_tb USING btree (uin);


--
-- Name: car_number_type_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_number_type_comid_idx ON car_number_type_tb USING btree (comid);


--
-- Name: car_number_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_number_type_id_idx ON car_number_type_tb USING btree (id);


--
-- Name: car_number_type_tb_car_number_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_number_type_tb_car_number_idx ON car_number_type_tb USING btree (car_number);


--
-- Name: car_picturs_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_picturs_tb_orderid_idx ON car_picturs_tb USING btree (orderid);


--
-- Name: car_stops_tb_lat_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_stops_tb_lat_idx ON car_stops_tb USING btree (latitude);


--
-- Name: car_stops_tb_lng_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_stops_tb_lng_idx ON car_stops_tb USING btree (longitude);


--
-- Name: car_stops_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_stops_tb_state_idx ON car_stops_tb USING btree (state);


--
-- Name: car_type_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_type_tb_comid_idx ON car_type_tb USING btree (comid);


--
-- Name: car_type_tb_sort_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX car_type_tb_sort_idx ON car_type_tb USING btree (sort);


--
-- Name: card_account_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_berth_id_idx ON card_account_tb USING btree (berth_id);


--
-- Name: card_account_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_berthseg_id_idx ON card_account_tb USING btree (berthseg_id);


--
-- Name: card_account_tb_card_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_card_id_idx ON card_account_tb USING btree (card_id);


--
-- Name: card_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_comid_idx ON card_account_tb USING btree (comid);


--
-- Name: card_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_create_time_idx ON card_account_tb USING btree (create_time);


--
-- Name: card_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_groupid_idx ON card_account_tb USING btree (groupid);


--
-- Name: card_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_orderid_idx ON card_account_tb USING btree (orderid);


--
-- Name: card_account_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_type_idx ON card_account_tb USING btree (type);


--
-- Name: card_account_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_account_tb_uid_idx ON card_account_tb USING btree (uid);


--
-- Name: card_anlysis_tb_create_time_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_anlysis_tb_create_time_groupid_idx ON card_anlysis_tb USING btree (create_time, groupid);


--
-- Name: card_carnumber_tb_car_number_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_carnumber_tb_car_number_idx ON card_carnumber_tb USING btree (car_number);


--
-- Name: card_carnumber_tb_card_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX card_carnumber_tb_card_id_idx ON card_carnumber_tb USING btree (card_id);


--
-- Name: carower_product_pid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX carower_product_pid_idx ON carower_product USING btree (pid);


--
-- Name: carower_product_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX carower_product_uin_idx ON carower_product USING btree (uin);


--
-- Name: carstop_order_tb_buid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX carstop_order_tb_buid_idx ON carstop_order_tb USING btree (buid);


--
-- Name: carstop_order_tb_euid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX carstop_order_tb_euid_idx ON carstop_order_tb USING btree (euid);


--
-- Name: carstop_order_tb_start_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX carstop_order_tb_start_time_idx ON carstop_order_tb USING btree (start_time);


--
-- Name: carstop_order_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX carstop_order_tb_uin_idx ON carstop_order_tb USING btree (uin);


--
-- Name: carstops_price_tb_cid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX carstops_price_tb_cid_idx ON carstops_price_tb USING btree (cid);


--
-- Name: city_account_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_berth_id_idx ON city_account_tb USING btree (berth_id);


--
-- Name: city_account_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_berthseg_id_idx ON city_account_tb USING btree (berthseg_id);


--
-- Name: city_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_comid_idx ON city_account_tb USING btree (comid);


--
-- Name: city_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_create_time_idx ON city_account_tb USING btree (create_time);


--
-- Name: city_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_groupid_idx ON city_account_tb USING btree (groupid);


--
-- Name: city_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_orderid_idx ON city_account_tb USING btree (orderid);


--
-- Name: city_account_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_uid_idx ON city_account_tb USING btree (uid);


--
-- Name: city_account_tb_withdraw_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_account_tb_withdraw_id_idx ON city_account_tb USING btree (withdraw_id);


--
-- Name: city_hotarea_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_hotarea_tb_create_time_idx ON city_hotarea_tb USING btree (create_time);


--
-- Name: city_hotarea_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_hotarea_tb_state_idx ON city_hotarea_tb USING btree (state);


--
-- Name: city_peakalert_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_peakalert_tb_state_idx ON city_peakalert_tb USING btree (state);


--
-- Name: city_video_tb_cityid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_video_tb_cityid_idx ON city_video_tb USING btree (cityid);


--
-- Name: city_video_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX city_video_tb_comid_idx ON city_video_tb USING btree (comid);


--
-- Name: collect_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collect_anlysis_tb_comid_idx ON collect_anlysis_tb USING btree (comid);


--
-- Name: collect_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collect_anlysis_tb_create_time_idx ON collect_anlysis_tb USING btree (create_time);


--
-- Name: collector_scroe_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX collector_scroe_tb_uin_idx ON collector_scroe_tb USING btree (uin);


--
-- Name: collector_set_tb_role_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collector_set_tb_role_id_idx ON collector_set_tb USING btree (role_id);


--
-- Name: collector_sort_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX collector_sort_create_time_idx ON collector_sort USING btree (create_time);


--
-- Name: collector_sort_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX collector_sort_uin_idx ON collector_sort USING btree (uin);


--
-- Name: com_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_account_tb_comid_idx ON com_account_tb USING btree (comid);


--
-- Name: com_account_tb_type_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_account_tb_type_idx ON com_account_tb USING btree (atype);


--
-- Name: com_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_account_tb_uin_idx ON com_account_tb USING btree (uin);


--
-- Name: com_alert_tb_cityid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_alert_tb_cityid_idx ON com_alert_tb USING btree (cityid);


--
-- Name: com_alert_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_alert_tb_create_time_idx ON com_alert_tb USING btree (create_time);


--
-- Name: com_alert_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_alert_tb_state_idx ON com_alert_tb USING btree (state);


--
-- Name: com_alert_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_alert_tb_type_idx ON com_alert_tb USING btree (type);


--
-- Name: com_berthsecs_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_berthsecs_tb_comid_idx ON com_berthsecs_tb USING btree (comid);


--
-- Name: com_berthsecs_tb_park_uuid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_berthsecs_tb_park_uuid_idx ON com_berthsecs_tb USING btree (park_uuid);


--
-- Name: com_berthsecs_tb_uuid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_berthsecs_tb_uuid_idx ON com_berthsecs_tb USING btree (uuid);


--
-- Name: com_brake_tb_passid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_brake_tb_passid_idx ON com_brake_tb USING btree (passid);


--
-- Name: com_camera_tb_passid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_camera_tb_passid_idx ON com_camera_tb USING btree (passid);


--
-- Name: com_comment_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_comment_tb_comid_idx ON com_comment_tb USING btree (comid);


--
-- Name: com_comment_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_comment_tb_uin_idx ON com_comment_tb USING btree (uin);


--
-- Name: com_info_tb_groupid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_info_tb_groupid_idx ON com_info_tb USING btree (groupid);


--
-- Name: com_info_tb_latitude_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_info_tb_latitude_idx ON com_info_tb USING btree (latitude);


--
-- Name: com_info_tb_longitude_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_info_tb_longitude_idx ON com_info_tb USING btree (longitude);


--
-- Name: com_info_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_info_tb_state_idx ON com_info_tb USING btree (state);


--
-- Name: com_info_tb_update_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_info_tb_update_time_idx ON com_info_tb USING btree (update_time);


--
-- Name: com_led_tb_passid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_led_tb_passid_idx ON com_led_tb USING btree (passid);


--
-- Name: com_message_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_message_tb_ctime_idx ON user_message_tb USING btree (ctime);


--
-- Name: com_message_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_message_tb_uin_idx ON user_message_tb USING btree (uin);


--
-- Name: com_nfc_tb_group_id_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_group_id_idx ON com_nfc_tb USING btree (group_id);


--
-- Name: com_nfc_tb_nfc_uuid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_nfc_uuid_idx ON com_nfc_tb USING btree (nfc_uuid);


--
-- Name: com_nfc_tb_nid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_nid_idx ON com_nfc_tb USING btree (nid);


--
-- Name: com_nfc_tb_qrcode_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_qrcode_idx ON com_nfc_tb USING btree (qrcode);


--
-- Name: com_nfc_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_state_idx ON com_nfc_tb USING btree (state);


--
-- Name: com_nfc_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_nfc_tb_uin_idx ON com_nfc_tb USING btree (uin);


--
-- Name: com_park_tb_berthsec_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_park_tb_berthsec_id_idx ON com_park_tb USING btree (berthsec_id);


--
-- Name: com_park_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_park_tb_comid_idx ON com_park_tb USING btree (comid);


--
-- Name: com_park_tb_dici_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_park_tb_dici_id_idx ON com_park_tb USING btree (dici_id);


--
-- Name: com_park_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_park_tb_order_id_idx ON com_park_tb USING btree (order_id);


--
-- Name: com_park_tb_qid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_park_tb_qid_idx ON com_park_tb USING btree (qid);


--
-- Name: com_parkstatus_tb_city_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_parkstatus_tb_city_id_idx ON com_parkstatus_tb USING btree (cityid);


--
-- Name: com_parkstatus_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_parkstatus_tb_comid_idx ON com_parkstatus_tb USING btree (comid);


--
-- Name: com_pass_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_pass_tb_comid_idx ON com_pass_tb USING btree (comid);


--
-- Name: com_pass_tb_worksite_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_pass_tb_worksite_id_idx ON com_pass_tb USING btree (worksite_id);


--
-- Name: com_picturs_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_picturs_tb_comid_idx ON com_picturs_tb USING btree (comid);


--
-- Name: com_pos_tb_pda_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_pos_tb_pda_idx ON com_pos_tb USING btree (pda);


--
-- Name: com_pos_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_pos_tb_uid_idx ON com_pos_tb USING btree (uid);


--
-- Name: com_temp_tb_next_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX com_temp_tb_next_time_idx ON com_temp_tb USING btree (next_time);


--
-- Name: com_worksite_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX com_worksite_tb_comid_idx ON com_worksite_tb USING btree (comid);


--
-- Name: confirm_order_event_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX confirm_order_event_id_idx ON confirm_order_tb USING btree (event_id);


--
-- Name: device_fault_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX device_fault_tb_create_time_idx ON device_fault_tb USING btree (create_time);


--
-- Name: device_fault_tb_end_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX device_fault_tb_end_time_idx ON device_fault_tb USING btree (end_time);


--
-- Name: device_fault_tb_induce_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX device_fault_tb_induce_id_idx ON device_fault_tb USING btree (induce_id);


--
-- Name: device_fault_tb_sensor_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX device_fault_tb_sensor_id_idx ON device_fault_tb USING btree (sensor_id);


--
-- Name: device_fault_tb_site_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX device_fault_tb_site_id_idx ON device_fault_tb USING btree (site_id);


--
-- Name: dici_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dici_tb_comid_idx ON dici_tb USING btree (comid);


--
-- Name: dici_tb_did_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dici_tb_did_idx ON dici_tb USING btree (did);


--
-- Name: dici_tb_serid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dici_tb_serid_idx ON dici_tb USING btree (serid);


--
-- Name: dici_tb_site_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dici_tb_site_id_idx ON dici_tb USING btree (site_id);


--
-- Name: directpay_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX directpay_anlysis_tb_create_time_idx ON directpay_anlysis_tb USING btree (create_time);


--
-- Name: flygame_pool_tb_count_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_pool_tb_count_idx ON flygame_pool_tb USING btree (count);


--
-- Name: flygame_pool_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_pool_tb_ctime_idx ON flygame_pool_tb USING btree (ctime);


--
-- Name: flygame_pool_tb_ptype_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_pool_tb_ptype_idx ON flygame_pool_tb USING btree (ptype);


--
-- Name: flygame_pool_tb_tid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_pool_tb_tid_idx ON flygame_pool_tb USING btree (tid);


--
-- Name: flygame_score_anlysis_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_score_anlysis_tb_ctime_idx ON flygame_score_anlysis_tb USING btree (ctime);


--
-- Name: flygame_score_anlysis_tb_tid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_score_anlysis_tb_tid_idx ON flygame_score_anlysis_tb USING btree (tid);


--
-- Name: flygame_score_anlysis_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_score_anlysis_tb_uin_idx ON flygame_score_anlysis_tb USING btree (uin);


--
-- Name: flygame_score_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_score_tb_ctime_idx ON flygame_score_tb USING btree (ctime);


--
-- Name: flygame_score_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX flygame_score_tb_uin_idx ON flygame_score_tb USING btree (uin);


--
-- Name: free_reasons_tb_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX free_reasons_tb_id_idx ON free_reasons_tb USING btree (id);


--
-- Name: group_account_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_berth_id_idx ON group_account_tb USING btree (berth_id);


--
-- Name: group_account_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_berthseg_id_idx ON group_account_tb USING btree (berthseg_id);


--
-- Name: group_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_comid_idx ON group_account_tb USING btree (comid);


--
-- Name: group_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_groupid_idx ON group_account_tb USING btree (groupid);


--
-- Name: group_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_orderid_idx ON group_account_tb USING btree (orderid);


--
-- Name: group_account_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_uid_idx ON group_account_tb USING btree (uid);


--
-- Name: group_account_tb_withdraw_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX group_account_tb_withdraw_id_idx ON group_account_tb USING btree (withdraw_id);


--
-- Name: hasparker_anlysis_tb_anlysis_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX hasparker_anlysis_tb_anlysis_time_idx ON hasparker_anlysis_tb USING btree (anlysis_time);


--
-- Name: ibeacon_tb_ibcid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX ibeacon_tb_ibcid_idx ON ibeacon_tb USING btree (ibcid);


--
-- Name: induce_ad_history_tb_induce_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_ad_history_tb_induce_id_idx ON induce_ad_history_tb USING btree (induce_id);


--
-- Name: induce_ad_tb_induce_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_ad_tb_induce_id_idx ON induce_ad_tb USING btree (induce_id);


--
-- Name: induce_module_tb_induce_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_module_tb_induce_id_idx ON induce_module_tb USING btree (induce_id);


--
-- Name: induce_park_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_park_tb_comid_idx ON induce_park_tb USING btree (comid);


--
-- Name: induce_park_tb_induce_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_park_tb_induce_id_idx ON induce_park_tb USING btree (induce_id);


--
-- Name: induce_park_tb_module_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_park_tb_module_id_idx ON induce_park_tb USING btree (module_id);


--
-- Name: induce_tb_cityid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_tb_cityid_idx ON induce_tb USING btree (cityid);


--
-- Name: induce_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX induce_tb_type_idx ON induce_tb USING btree (type);


--
-- Name: inspect_event_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_event_tb_create_time_idx ON inspect_event_tb USING btree (create_time);


--
-- Name: inspect_event_tb_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_event_tb_id_idx ON inspect_event_tb USING btree (id);


--
-- Name: inspect_event_tb_inspectid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_event_tb_inspectid_idx ON inspect_event_tb USING btree (inspectid);


--
-- Name: inspect_event_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_event_tb_state_idx ON inspect_event_tb USING btree (state);


--
-- Name: inspect_group_tb_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_group_tb_id_idx ON inspect_group_tb USING btree (id);


--
-- Name: inspect_group_tb_is_active_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX inspect_group_tb_is_active_idx ON inspect_group_tb USING btree (is_active);


--
-- Name: lift_rod_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lift_rod_tb_comid_idx ON lift_rod_tb USING btree (comid);


--
-- Name: lift_rod_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lift_rod_tb_ctime_idx ON lift_rod_tb USING btree (ctime);


--
-- Name: lift_rod_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lift_rod_tb_uin_idx ON lift_rod_tb USING btree (uin);


--
-- Name: message_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX message_tb_state_idx ON message_tb USING btree (state);


--
-- Name: message_tb_type_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX message_tb_type_idx ON message_tb USING btree (type);


--
-- Name: message_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX message_tb_uin_idx ON message_tb USING btree (uin);


--
-- Name: mobile_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX mobile_tb_comid_idx ON mobile_tb USING btree (comid);


--
-- Name: mobile_tb_create_tiime_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX mobile_tb_create_tiime_idx ON mobile_tb USING btree (create_time);


--
-- Name: mobile_tb_device_code_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX mobile_tb_device_code_idx ON mobile_tb USING btree (device_code);


--
-- Name: mobile_tb_uid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX mobile_tb_uid_idx ON mobile_tb USING btree (uid);


--
-- Name: mobilepay_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX mobilepay_anlysis_tb_comid_idx ON mobilepay_anlysis_tb USING btree (comid);


--
-- Name: mobilepay_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX mobilepay_anlysis_tb_create_time_idx ON mobilepay_anlysis_tb USING btree (create_time);


--
-- Name: no_payment_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_berth_id_idx ON no_payment_tb USING btree (berth_id);


--
-- Name: no_payment_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_berthseg_id_idx ON no_payment_tb USING btree (berthseg_id);


--
-- Name: no_payment_tb_car_number_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_car_number_idx ON no_payment_tb USING btree (car_number);


--
-- Name: no_payment_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_comid_idx ON no_payment_tb USING btree (comid);


--
-- Name: no_payment_tb_end_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_end_time_idx ON no_payment_tb USING btree (end_time DESC NULLS LAST);


--
-- Name: no_payment_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_order_id_idx ON no_payment_tb USING btree (order_id);


--
-- Name: no_payment_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_state_idx ON no_payment_tb USING btree (state);


--
-- Name: no_payment_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX no_payment_tb_uid_idx ON no_payment_tb USING btree (uid);


--
-- Name: online_anlysis_tb_cityid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX online_anlysis_tb_cityid_idx ON online_anlysis_tb USING btree (cityid);


--
-- Name: online_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX online_anlysis_tb_comid_idx ON online_anlysis_tb USING btree (comid);


--
-- Name: online_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX online_anlysis_tb_create_time_idx ON online_anlysis_tb USING btree (create_time);


--
-- Name: online_anlysis_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX online_anlysis_tb_groupid_idx ON online_anlysis_tb USING btree (groupid);


--
-- Name: order_attach_tb_order_id_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_attach_tb_order_id_idx ON order_attach_tb USING btree (order_id);


--
-- Name: order_log_tb_com_id_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_log_tb_com_id_idx ON order_log_tb USING btree (comid);


--
-- Name: order_log_tb_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_log_tb_create_time_idx ON order_log_tb USING btree (create_time);


--
-- Name: order_log_tb_type_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_log_tb_type_idx ON order_log_tb USING btree (type);


--
-- Name: order_log_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_log_tb_uin_idx ON order_log_tb USING btree (uin);


--
-- Name: order_message_tb_already_read_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_message_tb_already_read_idx ON order_message_tb USING btree (already_read);


--
-- Name: order_message_tb_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_message_tb_create_time_idx ON order_message_tb USING btree (create_time);


--
-- Name: order_message_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_message_tb_uin_idx ON order_message_tb USING btree (uin);


--
-- Name: order_reserve_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_reserve_tb_comid_idx ON order_reserve_tb USING btree (comid);


--
-- Name: order_reserve_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_reserve_tb_uin_idx ON order_reserve_tb USING btree (uin);


--
-- Name: order_tb_car_number_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_car_number_idx ON order_tb USING btree (car_number);


--
-- Name: order_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_comid_idx ON order_tb USING btree (comid);


--
-- Name: order_tb_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_create_time_idx ON order_tb USING btree (create_time);


--
-- Name: order_tb_end_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_end_time_idx ON order_tb USING btree (end_time);


--
-- Name: order_tb_nfc_uuid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_nfc_uuid_idx ON order_tb USING btree (nfc_uuid);


--
-- Name: order_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_state_idx ON order_tb USING btree (state);


--
-- Name: order_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX order_tb_uin_idx ON order_tb USING btree (uin);


--
-- Name: order_ticket_detail_tb_otid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_detail_tb_otid_idx ON order_ticket_detail_tb USING btree (otid);


--
-- Name: order_ticket_detail_tb_ttime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_detail_tb_ttime_idx ON order_ticket_detail_tb USING btree (ttime);


--
-- Name: order_ticket_detail_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_detail_tb_type_idx ON order_ticket_detail_tb USING btree (type);


--
-- Name: order_ticket_detail_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_detail_tb_uin_idx ON order_ticket_detail_tb USING btree (uin);


--
-- Name: order_ticket_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_tb_order_id_idx ON order_ticket_tb USING btree (order_id);


--
-- Name: order_ticket_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX order_ticket_tb_uin_idx ON order_ticket_tb USING btree (uin);


--
-- Name: org_area_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_area_tb_groupid_idx ON org_area_tb USING btree (groupid);


--
-- Name: park_account_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_berth_id_idx ON park_account_tb USING btree (berth_id);


--
-- Name: park_account_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_berthseg_id_idx ON park_account_tb USING btree (berthseg_id);


--
-- Name: park_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_comid_idx ON park_account_tb USING btree (comid);


--
-- Name: park_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_create_time_idx ON park_account_tb USING btree (create_time);


--
-- Name: park_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_groupid_idx ON park_account_tb USING btree (groupid);


--
-- Name: park_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_orderid_idx ON park_account_tb USING btree (orderid);


--
-- Name: park_account_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_account_tb_uid_idx ON park_account_tb USING btree (uid);


--
-- Name: park_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX park_anlysis_tb_comid_idx ON park_anlysis_tb USING btree (comid);


--
-- Name: park_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX park_anlysis_tb_create_time_idx ON park_anlysis_tb USING btree (create_time);


--
-- Name: park_charge_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX park_charge_tb_comid_idx ON park_charge_tb USING btree (comid);


--
-- Name: park_charge_tb_comid_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX park_charge_tb_comid_uin_idx ON money_record_tb USING btree (comid, uin);


--
-- Name: park_charge_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX park_charge_tb_uin_idx ON park_charge_tb USING btree (uin);


--
-- Name: park_ticket_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_ticket_tb_comid_idx ON park_ticket_tb USING btree (comid);


--
-- Name: park_verify_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_verify_tb_comid_idx ON park_verify_tb USING btree (comid);


--
-- Name: park_verify_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_verify_tb_ctime_idx ON park_verify_tb USING btree (ctime);


--
-- Name: park_verify_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX park_verify_tb_uin_idx ON park_verify_tb USING btree (uin);


--
-- Name: parkuser_account_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_berth_id_idx ON parkuser_account_tb USING btree (berth_id);


--
-- Name: parkuser_account_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_berthseg_id_idx ON parkuser_account_tb USING btree (berthseg_id);


--
-- Name: parkuser_account_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_comid_idx ON parkuser_account_tb USING btree (comid);


--
-- Name: parkuser_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_create_time_idx ON parkuser_account_tb USING btree (create_time);


--
-- Name: parkuser_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_groupid_idx ON parkuser_account_tb USING btree (groupid);


--
-- Name: parkuser_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_orderid_idx ON parkuser_account_tb USING btree (orderid);


--
-- Name: parkuser_account_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_type_idx ON parkuser_account_tb USING btree (type);


--
-- Name: parkuser_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_account_tb_uin_idx ON parkuser_account_tb USING btree (uin);


--
-- Name: parkuser_cash_tb_berth_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_berth_id_idx ON parkuser_cash_tb USING btree (berth_id);


--
-- Name: parkuser_cash_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_berthseg_id_idx ON parkuser_cash_tb USING btree (berthseg_id);


--
-- Name: parkuser_cash_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_comid_idx ON parkuser_cash_tb USING btree (comid);


--
-- Name: parkuser_cash_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_create_time_idx ON parkuser_cash_tb USING btree (create_time);


--
-- Name: parkuser_cash_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_groupid_idx ON parkuser_cash_tb USING btree (groupid);


--
-- Name: parkuser_cash_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_orderid_idx ON parkuser_cash_tb USING btree (orderid);


--
-- Name: parkuser_cash_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_type_idx ON parkuser_cash_tb USING btree (type);


--
-- Name: parkuser_cash_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_cash_tb_uin_idx ON parkuser_cash_tb USING btree (uin);


--
-- Name: parkuser_comment_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_comment_tb_ctime_idx ON parkuser_comment_tb USING btree (ctime);


--
-- Name: parkuser_comment_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_comment_tb_order_id_idx ON parkuser_comment_tb USING btree (order_id);


--
-- Name: parkuser_comment_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_comment_tb_uid_idx ON parkuser_comment_tb USING btree (uid);


--
-- Name: parkuser_comment_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_comment_tb_uin_idx ON parkuser_comment_tb USING btree (uin);


--
-- Name: parkuser_income_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_income_anlysis_tb_create_time_idx ON parkuser_income_anlysis_tb USING btree (create_time);


--
-- Name: parkuser_income_anlysis_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_income_anlysis_tb_uin_idx ON parkuser_income_anlysis_tb USING btree (uin);


--
-- Name: parkuser_message_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_message_tb_ctime_idx ON parkuser_message_tb USING btree (ctime);


--
-- Name: parkuser_message_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_message_tb_uin_idx ON parkuser_message_tb USING btree (uin);


--
-- Name: parkuser_reward_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_reward_tb_ctime_idx ON parkuser_reward_tb USING btree (ctime);


--
-- Name: parkuser_reward_tb_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_reward_tb_order_id_idx ON parkuser_reward_tb USING btree (order_id);


--
-- Name: parkuser_reward_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_reward_tb_uid_idx ON parkuser_reward_tb USING btree (uid);


--
-- Name: parkuser_reward_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_reward_tb_uin_idx ON parkuser_reward_tb USING btree (uin);


--
-- Name: parkuser_work_record_tb_berthsec_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_work_record_tb_berthsec_id_idx ON parkuser_work_record_tb USING btree (berthsec_id);


--
-- Name: parkuser_work_record_tb_end_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_work_record_tb_end_time_idx ON parkuser_work_record_tb USING btree (end_time);


--
-- Name: parkuser_work_record_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_work_record_tb_state_idx ON parkuser_work_record_tb USING btree (state);


--
-- Name: parkuser_work_record_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_work_record_tb_uid_idx ON parkuser_work_record_tb USING btree (uid);


--
-- Name: parkuser_work_record_tb_worksite_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX parkuser_work_record_tb_worksite_id_idx ON parkuser_work_record_tb USING btree (worksite_id);


--
-- Name: peakalert_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX peakalert_anlysis_tb_comid_idx ON peakalert_anlysis_tb USING btree (comid);


--
-- Name: peakalert_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX peakalert_anlysis_tb_create_time_idx ON peakalert_anlysis_tb USING btree (create_time);


--
-- Name: price_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX price_tb_comid_idx ON price_tb USING btree (comid);


--
-- Name: price_tb_pay_type_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX price_tb_pay_type_idx ON price_tb USING btree (pay_type);


--
-- Name: price_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX price_tb_state_idx ON price_tb USING btree (state);


--
-- Name: product_package_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX product_package_tb_comid_idx ON product_package_tb USING btree (comid);


--
-- Name: qr_code_tb_code_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qr_code_tb_code_idx ON qr_code_tb USING btree (code);


--
-- Name: qr_code_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qr_code_tb_comid_idx ON qr_code_tb USING btree (comid);


--
-- Name: qr_code_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qr_code_tb_state_idx ON qr_code_tb USING btree (state);


--
-- Name: qr_code_tb_wid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qr_code_tb_wid_idx ON qr_code_tb USING btree (wid);


--
-- Name: recharge_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recharge_tb_uin_idx ON recharge_tb USING btree (uin);


--
-- Name: recom_tb_mobile_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recom_tb_mobile_idx ON recom_tb USING btree (mobile);


--
-- Name: recom_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recom_tb_uin_idx ON recom_tb USING btree (uin);


--
-- Name: recommend_tb_nid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recommend_tb_nid_idx ON recommend_tb USING btree (nid);


--
-- Name: recommend_tb_openid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recommend_tb_openid_idx ON recommend_tb USING btree (openid);


--
-- Name: recommend_tb_pid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recommend_tb_pid_idx ON recommend_tb USING btree (pid);


--
-- Name: recommend_tb_type_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX recommend_tb_type_idx ON recommend_tb USING btree (type);


--
-- Name: register_anlysis_tb_reg_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX register_anlysis_tb_reg_time_idx ON register_anlysis_tb USING btree (reg_time);


--
-- Name: remain_berth_tb_berthseg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX remain_berth_tb_berthseg_id_idx ON remain_berth_tb USING btree (berthseg_id);


--
-- Name: remain_berth_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX remain_berth_tb_comid_idx ON remain_berth_tb USING btree (comid);


--
-- Name: reward_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reward_account_tb_create_time_idx ON reward_account_tb USING btree (create_time);


--
-- Name: reward_account_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reward_account_tb_type_idx ON reward_account_tb USING btree (type);


--
-- Name: reward_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reward_account_tb_uin_idx ON reward_account_tb USING btree (uin);


--
-- Name: sensor_online_anlysis_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sensor_online_anlysis_tb_comid_idx ON sensor_online_anlysis_tb USING btree (comid);


--
-- Name: sensor_online_anlysis_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sensor_online_anlysis_tb_create_time_idx ON sensor_online_anlysis_tb USING btree (create_time);


--
-- Name: share_log_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX share_log_tb_comid_idx ON share_log_tb USING btree (comid);


--
-- Name: share_log_tb_create_time_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX share_log_tb_create_time_idx ON share_log_tb USING btree (create_time);


--
-- Name: share_log_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX share_log_tb_uin_idx ON share_log_tb USING btree (uin);


--
-- Name: shop_account_tb_shop_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shop_account_tb_shop_id_idx ON shop_account_tb USING btree (shop_id);


--
-- Name: shop_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shop_tb_comid_idx ON shop_tb USING btree (comid);


--
-- Name: sim_tb_device_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sim_tb_device_id_idx ON sim_tb USING btree (device_id);


--
-- Name: sim_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sim_tb_groupid_idx ON sim_tb USING btree (groupid);


--
-- Name: sim_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sim_tb_type_idx ON sim_tb USING btree (type);


--
-- Name: sites_tb_cityid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sites_tb_cityid_idx ON sites_tb USING btree (cityid);


--
-- Name: sites_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sites_tb_comid_idx ON sites_tb USING btree (comid);


--
-- Name: sites_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sites_tb_groupid_idx ON sites_tb USING btree (groupid);


--
-- Name: sites_tb_uuid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sites_tb_uuid_idx ON sites_tb USING btree (uuid);


--
-- Name: sites_voltage_tb_site_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sites_voltage_tb_site_id_idx ON sites_voltage_tb USING btree (site_id);


--
-- Name: sub_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sub_account_tb_create_time_idx ON sub_account_tb USING btree (create_time);


--
-- Name: sub_account_tb_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sub_account_tb_groupid_idx ON sub_account_tb USING btree (groupid);


--
-- Name: sub_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sub_account_tb_uin_idx ON sub_account_tb USING btree (uin);


--
-- Name: sync_info_pool_tb_comid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_comid_idx ON sync_info_pool_tb USING btree (comid);


--
-- Name: sync_info_pool_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_create_time_idx ON sync_info_pool_tb USING btree (create_time);


--
-- Name: sync_info_pool_tb_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_id_idx ON sync_info_pool_tb USING btree (id);


--
-- Name: sync_info_pool_tb_state_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_state_idx ON sync_info_pool_tb USING btree (state);


--
-- Name: sync_info_pool_tb_table_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_table_id_idx ON sync_info_pool_tb USING btree (table_id);


--
-- Name: sync_info_pool_tb_table_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sync_info_pool_tb_table_name_idx ON sync_info_pool_tb USING btree (table_name);


--
-- Name: system_message_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX system_message_tb_comid_idx ON order_message_tb USING btree (comid);


--
-- Name: thirdpay_order_order_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX thirdpay_order_order_id_idx ON thirdpay_order_tb USING btree (order_id_local);


--
-- Name: ticket_tb_limit_day_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tb_limit_day_idx ON ticket_tb USING btree (limit_day);


--
-- Name: ticket_tb_need_sync_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tb_need_sync_idx ON ticket_tb USING btree (need_sync);


--
-- Name: ticket_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tb_orderid_idx ON ticket_tb USING btree (orderid);


--
-- Name: ticket_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tb_type_idx ON ticket_tb USING btree (type);


--
-- Name: ticket_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tb_uin_idx ON ticket_tb USING btree (uin);


--
-- Name: ticket_uion_tb_req_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_uion_tb_req_time_idx ON ticket_uion_tb USING btree (req_time);


--
-- Name: ticket_uion_tb_req_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_uion_tb_req_uin_idx ON ticket_uion_tb USING btree (req_uin);


--
-- Name: ticket_uion_tb_res_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_uion_tb_res_time_idx ON ticket_uion_tb USING btree (res_time);


--
-- Name: ticket_uion_tb_res_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_uion_tb_res_uin_idx ON ticket_uion_tb USING btree (res_uin);


--
-- Name: tingchebao_account_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tingchebao_account_tb_create_time_idx ON tingchebao_account_tb USING btree (create_time);


--
-- Name: tingchebao_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tingchebao_account_tb_orderid_idx ON tingchebao_account_tb USING btree (orderid);


--
-- Name: tingchebao_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tingchebao_account_tb_uin_idx ON tingchebao_account_tb USING btree (uin);


--
-- Name: tingchebao_account_tb_uin_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tingchebao_account_tb_uin_idx1 ON tingchebao_account_tb USING btree (uin);


--
-- Name: tmp_p4top5_primarykey_groupid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tmp_p4top5_primarykey_groupid_idx ON tmp_p4top5_primarykey USING btree (groupid);


--
-- Name: tmp_p4top5_primarykey_p4_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tmp_p4top5_primarykey_p4_id_idx ON tmp_p4top5_primarykey USING btree (p4_id);


--
-- Name: tmp_p4top5_primarykey_p5_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tmp_p4top5_primarykey_p5_id_idx ON tmp_p4top5_primarykey USING btree (p5_id);


--
-- Name: tmp_p4top5_primarykey_table_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tmp_p4top5_primarykey_table_type_idx ON tmp_p4top5_primarykey USING btree (table_type);


--
-- Name: user_account_tb_orderid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_account_tb_orderid_idx ON user_account_tb USING btree (orderid);


--
-- Name: user_account_tb_pay_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_account_tb_pay_type_idx ON user_account_tb USING btree (pay_type);


--
-- Name: user_account_tb_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_account_tb_type_idx ON user_account_tb USING btree (type);


--
-- Name: user_account_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_account_tb_uin_idx ON user_account_tb USING btree (uin);


--
-- Name: user_friend_tb_buin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_friend_tb_buin_idx ON user_friend_tb USING btree (buin);


--
-- Name: user_friend_tb_euin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_friend_tb_euin_idx ON user_friend_tb USING btree (euin);


--
-- Name: user_info_tb_auth_flag_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_auth_flag_idx ON user_info_tb USING btree (auth_flag);


--
-- Name: user_info_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_comid_idx ON user_info_tb USING btree (comid);


--
-- Name: user_info_tb_company_id_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_company_id_idx ON user_info_tb USING btree (comid);


--
-- Name: user_info_tb_groupid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_groupid_idx ON user_info_tb USING btree (groupid);


--
-- Name: user_info_tb_mobile_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_mobile_idx ON user_info_tb USING btree (mobile);


--
-- Name: user_info_tb_state_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_state_idx ON user_info_tb USING btree (state);


--
-- Name: user_info_tb_wxp_openid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_info_tb_wxp_openid_idx ON user_info_tb USING btree (wxp_openid);


--
-- Name: user_liuyan_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_liuyan_tb_ctime_idx ON user_liuyan_tb USING btree (ctime);


--
-- Name: user_liuyan_tb_fuin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_liuyan_tb_fuin_idx ON user_liuyan_tb USING btree (fuin);


--
-- Name: user_liuyan_tb_tuin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_liuyan_tb_tuin_idx ON user_liuyan_tb USING btree (tuin);


--
-- Name: user_local_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_local_tb_ctime_idx ON user_local_tb USING btree (ctime);


--
-- Name: user_local_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_local_tb_uid_idx ON user_local_tb USING btree (uid);


--
-- Name: user_log_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_log_tb_comid_idx ON user_log_tb USING btree (comid);


--
-- Name: user_payaccount_tb_account_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_payaccount_tb_account_idx ON user_payaccount_tb USING btree (account);


--
-- Name: user_payaccount_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_payaccount_tb_uin_idx ON user_payaccount_tb USING btree (uin);


--
-- Name: user_pic_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_pic_tb_uin_idx ON user_pic_tb USING btree (uin);


--
-- Name: user_profile_tb_limit_money_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_profile_tb_limit_money_idx ON user_profile_tb USING btree (limit_money);


--
-- Name: user_profile_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_profile_tb_uin_idx ON user_profile_tb USING btree (uin);


--
-- Name: user_session_tb_token_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_session_tb_token_idx ON user_session_tb USING btree (token);


--
-- Name: user_session_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX user_session_tb_uin_idx ON user_session_tb USING btree (uin);


--
-- Name: verification_code_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX verification_code_tb_uin_idx ON verification_code_tb USING btree (uin);


--
-- Name: visit_info_tb_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX visit_info_tb_create_time_idx ON visit_info_tb USING btree (create_time);


--
-- Name: visit_info_tb_uid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX visit_info_tb_uid_idx ON visit_info_tb USING btree (uid);


--
-- Name: withdrawer_tb_comid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX withdrawer_tb_comid_idx ON withdrawer_tb USING btree (comid);


--
-- Name: work_berthsec_tb_berthsec_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_berthsec_tb_berthsec_id_idx ON work_berthsec_tb USING btree (berthsec_id);


--
-- Name: work_berthsec_tb_work_group_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_berthsec_tb_work_group_id_idx ON work_berthsec_tb USING btree (work_group_id);


--
-- Name: work_detail_tb_workid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_detail_tb_workid_idx ON work_detail_tb USING btree (workid);


--
-- Name: work_employee_tb_employee_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_employee_tb_employee_id_idx ON work_employee_tb USING btree (employee_id);


--
-- Name: work_employee_tb_work_group_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_employee_tb_work_group_id_idx ON work_employee_tb USING btree (work_group_id);


--
-- Name: work_group_tb_company_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_group_tb_company_id_idx ON work_group_tb USING btree (company_id);


--
-- Name: work_group_tb_uuid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_group_tb_uuid_idx ON work_group_tb USING btree (uuid);


--
-- Name: work_inspector_tb_inspector_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_inspector_tb_inspector_id_idx ON work_inspector_tb USING btree (inspector_id);


--
-- Name: work_inspector_tb_work_group_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX work_inspector_tb_work_group_id_idx ON work_inspector_tb USING btree (inspect_group_id);


--
-- Name: wxp_user_tb_openid_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX wxp_user_tb_openid_idx ON wxp_user_tb USING btree (openid);


--
-- Name: wxp_user_tb_uin_idx; Type: INDEX; Schema: public; Owner: tracqdev
--

CREATE INDEX wxp_user_tb_uin_idx ON wxp_user_tb USING btree (uin);


--
-- Name: zld_game_tb_ctime_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX zld_game_tb_ctime_idx ON zld_game_tb USING btree (ctime);


--
-- Name: zld_game_tb_iswin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX zld_game_tb_iswin_idx ON zld_game_tb USING btree (iswin);


--
-- Name: zld_game_tb_tid_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX zld_game_tb_tid_idx ON zld_game_tb USING btree (tid);


--
-- Name: zld_game_tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX zld_game_tb_uin_idx ON zld_game_tb USING btree (uin);


--
-- Name: zld_protocol _tb_uin_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "zld_protocol _tb_uin_idx" ON zld_protocol_tb USING btree (uin);


--
-- Name: advert_tb advert_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER advert_tb_trigger BEFORE INSERT ON advert_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_advert_tb_trigger();


--
-- Name: alipay_log alipay_log_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER alipay_log_trigger BEFORE INSERT ON alipay_log FOR EACH ROW EXECUTE PROCEDURE trigger_fct_alipay_log_trigger();


--
-- Name: area_ibeacon_tb area_ibeacon_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER area_ibeacon_tb_trigger BEFORE INSERT ON area_ibeacon_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_area_ibeacon_tb_trigger();


--
-- Name: auth_role_tb auth_role_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER auth_role_tb_trigger BEFORE INSERT ON auth_role_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_auth_role_tb_trigger();


--
-- Name: auth_tb auth_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER auth_tb_trigger BEFORE INSERT ON auth_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_auth_tb_trigger();


--
-- Name: berth_order_tb berth_order_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER berth_order_tb_trigger BEFORE INSERT ON berth_order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_berth_order_tb_trigger();


--
-- Name: bizcircle_tb bizcircle_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER bizcircle_tb_trigger BEFORE INSERT ON bizcircle_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_bizcircle_tb_trigger();


--
-- Name: bolink_ccount_tb bolink_ccount_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER bolink_ccount_tb_trigger BEFORE INSERT ON bolink_ccount_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_bolink_ccount_tb_trigger();


--
-- Name: bolink_order_tb bolink_order_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER bolink_order_tb_trigger BEFORE INSERT ON bolink_order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_bolink_order_tb_trigger();


--
-- Name: bonus_record_tb bonus_record_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER bonus_record_tb_trigger BEFORE INSERT ON bonus_record_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_bonus_record_tb_trigger();


--
-- Name: bonus_type_tb bonus_type_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER bonus_type_tb_trigger BEFORE INSERT ON bonus_type_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_bonus_type_tb_trigger();


--
-- Name: car_info_tb car_info_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER car_info_tb_trigger BEFORE INSERT ON car_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_car_info_tb_trigger();


--
-- Name: car_number_type_tb car_number_type_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER car_number_type_tb_trigger BEFORE INSERT ON car_number_type_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_car_number_type_tb_trigger();


--
-- Name: car_picturs_tb car_picturs_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER car_picturs_tb_trigger BEFORE INSERT ON car_picturs_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_car_picturs_tb_trigger();


--
-- Name: car_stops_tb car_stops_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER car_stops_tb_trigger BEFORE INSERT ON car_stops_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_car_stops_tb_trigger();


--
-- Name: car_type_tb car_type_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER car_type_tb_trigger BEFORE INSERT ON car_type_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_car_type_tb_trigger();


--
-- Name: card_account_tb card_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER card_account_tb_trigger BEFORE INSERT ON card_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_card_account_tb_trigger();


--
-- Name: card_anlysis_tb card_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER card_anlysis_tb_trigger BEFORE INSERT ON card_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_card_anlysis_tb_trigger();


--
-- Name: card_carnumber_tb card_carnumber_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER card_carnumber_tb_trigger BEFORE INSERT ON card_carnumber_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_card_carnumber_tb_trigger();


--
-- Name: carower_product carower_product_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER carower_product_trigger BEFORE INSERT ON carower_product FOR EACH ROW EXECUTE PROCEDURE trigger_fct_carower_product_trigger();


--
-- Name: carpic_tb carpic_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER carpic_tb_trigger BEFORE INSERT ON carpic_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_carpic_tb_trigger();


--
-- Name: carstop_order_tb carstop_order_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER carstop_order_tb_trigger BEFORE INSERT ON carstop_order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_carstop_order_tb_trigger();


--
-- Name: carstops_price_tb carstops_price_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER carstops_price_tb_trigger BEFORE INSERT ON carstops_price_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_carstops_price_tb_trigger();


--
-- Name: city_account_tb city_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER city_account_tb_trigger BEFORE INSERT ON city_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_city_account_tb_trigger();


--
-- Name: city_hotarea_tb city_hotarea_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER city_hotarea_tb_trigger BEFORE INSERT ON city_hotarea_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_city_hotarea_tb_trigger();


--
-- Name: city_peakalert_tb city_peakalert_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER city_peakalert_tb_trigger BEFORE INSERT ON city_peakalert_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_city_peakalert_tb_trigger();


--
-- Name: city_video_tb city_video_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER city_video_tb_trigger BEFORE INSERT ON city_video_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_city_video_tb_trigger();


--
-- Name: collect_anlysis_tb collect_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER collect_anlysis_tb_trigger BEFORE INSERT ON collect_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_collect_anlysis_tb_trigger();


--
-- Name: collector_account_pic_tb collector_account_pic_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER collector_account_pic_tb_trigger BEFORE INSERT ON collector_account_pic_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_collector_account_pic_tb_trigger();


--
-- Name: collector_scroe_tb collector_scroe_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER collector_scroe_tb_trigger BEFORE INSERT ON collector_scroe_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_collector_scroe_tb_trigger();


--
-- Name: collector_set_tb collector_set_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER collector_set_tb_trigger BEFORE INSERT ON collector_set_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_collector_set_tb_trigger();


--
-- Name: collector_sort collector_sort_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER collector_sort_trigger BEFORE INSERT ON collector_sort FOR EACH ROW EXECUTE PROCEDURE trigger_fct_collector_sort_trigger();


--
-- Name: com_account_tb com_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_account_tb_trigger BEFORE INSERT ON com_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_account_tb_trigger();


--
-- Name: com_alert_tb com_alert_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_alert_tb_trigger BEFORE INSERT ON com_alert_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_alert_tb_trigger();


--
-- Name: com_berthsecs_tb com_berthsecs_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_berthsecs_tb_trigger BEFORE INSERT ON com_berthsecs_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_berthsecs_tb_trigger();


--
-- Name: com_brake_tb com_brake_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_brake_tb_trigger BEFORE INSERT ON com_brake_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_brake_tb_trigger();


--
-- Name: com_camera_tb com_camera_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_camera_tb_trigger BEFORE INSERT ON com_camera_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_camera_tb_trigger();


--
-- Name: com_comment_tb com_comment_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_comment_tb_trigger BEFORE INSERT ON com_comment_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_comment_tb_trigger();


--
-- Name: com_info_tb com_info_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_info_tb_trigger BEFORE INSERT ON com_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_info_tb_trigger();


--
-- Name: com_info_tb com_info_tb_update_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_info_tb_update_trigger BEFORE UPDATE ON com_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_update();


--
-- Name: com_led_tb com_led_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_led_tb_trigger BEFORE INSERT ON com_led_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_led_tb_trigger();


--
-- Name: user_message_tb com_message_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_message_tb_trigger BEFORE INSERT ON user_message_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_message_tb_trigger();


--
-- Name: com_nfc_tb com_nfc_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_nfc_tb_trigger BEFORE INSERT ON com_nfc_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_nfc_tb_trigger();


--
-- Name: com_park_tb com_park_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_park_tb_trigger BEFORE INSERT ON com_park_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_park_tb_trigger();


--
-- Name: com_parkstatus_tb com_parkstatus_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_parkstatus_tb_trigger BEFORE INSERT ON com_parkstatus_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_parkstatus_tb_trigger();


--
-- Name: com_pass_tb com_pass_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_pass_tb_trigger BEFORE INSERT ON com_pass_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_pass_tb_trigger();


--
-- Name: com_picturs_tb com_picturs_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_picturs_tb_trigger BEFORE INSERT ON com_picturs_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_picturs_tb_trigger();


--
-- Name: com_pos_tb com_pos_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_pos_tb_trigger BEFORE INSERT ON com_pos_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_pos_tb_trigger();


--
-- Name: com_praise_tb com_praise_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_praise_tb_trigger BEFORE INSERT ON com_praise_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_praise_tb_trigger();


--
-- Name: com_temp_tb com_temp_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER com_temp_tb_trigger BEFORE INSERT ON com_temp_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_temp_tb_trigger();


--
-- Name: com_worksite_tb com_worksite_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER com_worksite_tb_trigger BEFORE INSERT ON com_worksite_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_com_worksite_tb_trigger();


--
-- Name: confirm_order_tb confirm_order_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER confirm_order_trigger BEFORE INSERT ON confirm_order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_confirm_order_trigger();


--
-- Name: consume_anlysis_tb consume_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER consume_anlysis_tb_trigger BEFORE INSERT ON consume_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_consume_anlysis_tb_trigger();


--
-- Name: dataauth_tb dataauth_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER dataauth_tb_trigger BEFORE INSERT ON dataauth_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_dataauth_tb_trigger();


--
-- Name: department_tb department_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER department_tb_trigger BEFORE INSERT ON department_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_department_tb_trigger();


--
-- Name: device_fault_tb device_fault_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER device_fault_tb_trigger BEFORE INSERT ON device_fault_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_device_fault_tb_trigger();


--
-- Name: dici_tb dici_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER dici_tb_trigger BEFORE INSERT ON dici_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_dici_tb_trigger();


--
-- Name: directpay_anlysis_tb directpay_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER directpay_anlysis_tb_trigger BEFORE INSERT ON directpay_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_directpay_anlysis_tb_trigger();


--
-- Name: flygame_pool_tb flygame_pool_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER flygame_pool_tb_trigger BEFORE INSERT ON flygame_pool_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_flygame_pool_tb_trigger();


--
-- Name: flygame_score_anlysis_tb flygame_score_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER flygame_score_anlysis_tb_trigger BEFORE INSERT ON flygame_score_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_flygame_score_anlysis_tb_trigger();


--
-- Name: flygame_score_tb flygame_score_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER flygame_score_tb_trigger BEFORE INSERT ON flygame_score_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_flygame_score_tb_trigger();


--
-- Name: free_reasons_tb free_reasons_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER free_reasons_tb_trigger BEFORE INSERT ON free_reasons_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_free_reasons_tb_trigger();


--
-- Name: group_account_tb group_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER group_account_tb_trigger BEFORE INSERT ON group_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_group_account_tb_trigger();


--
-- Name: hasparker_anlysis_tb hasparker_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER hasparker_anlysis_tb_trigger BEFORE INSERT ON hasparker_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_hasparker_anlysis_tb_trigger();


--
-- Name: ibeacon_tb ibeacon_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER ibeacon_tb_trigger BEFORE INSERT ON ibeacon_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_ibeacon_tb_trigger();


--
-- Name: induce_ad_history_tb induce_ad_history_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER induce_ad_history_tb_trigger BEFORE INSERT ON induce_ad_history_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_induce_ad_history_tb_trigger();


--
-- Name: induce_ad_tb induce_ad_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER induce_ad_tb_trigger BEFORE INSERT ON induce_ad_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_induce_ad_tb_trigger();


--
-- Name: induce_module_tb induce_module_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER induce_module_tb_trigger BEFORE INSERT ON induce_module_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_induce_module_tb_trigger();


--
-- Name: induce_park_tb induce_park_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER induce_park_tb_trigger BEFORE INSERT ON induce_park_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_induce_park_tb_trigger();


--
-- Name: induce_tb induce_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER induce_tb_trigger BEFORE INSERT ON induce_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_induce_tb_trigger();


--
-- Name: inspect_event_tb inspect_event_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER inspect_event_tb_trigger BEFORE INSERT ON inspect_event_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_inspect_event_tb_trigger();


--
-- Name: inspect_group_tb inspect_group_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER inspect_group_tb_trigger BEFORE INSERT ON inspect_group_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_inspect_group_tb_trigger();


--
-- Name: lift_rod_tb lift_rod_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER lift_rod_tb_trigger BEFORE INSERT ON lift_rod_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_lift_rod_tb_trigger();


--
-- Name: local_info_tb local_info_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER local_info_tb_trigger BEFORE INSERT ON local_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_local_info_tb_trigger();


--
-- Name: logo_tb logo_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER logo_tb_trigger BEFORE INSERT ON logo_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_logo_tb_trigger();


--
-- Name: lottery_tb lottery_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER lottery_tb_trigger BEFORE INSERT ON lottery_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_lottery_tb_trigger();


--
-- Name: message_tb message_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER message_tb_trigger BEFORE INSERT ON message_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_message_tb_trigger();


--
-- Name: mobile_tb mobile_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER mobile_tb_trigger BEFORE INSERT ON mobile_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_mobile_tb_trigger();


--
-- Name: mobilepay_anlysis_tb mobilepay_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER mobilepay_anlysis_tb_trigger BEFORE INSERT ON mobilepay_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_mobilepay_anlysis_tb_trigger();


--
-- Name: money_record_tb money_record_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER money_record_tb_trigger BEFORE INSERT ON money_record_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_money_record_tb_trigger();


--
-- Name: money_set_tb money_set_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER money_set_tb_trigger BEFORE INSERT ON money_set_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_money_set_tb_trigger();


--
-- Name: monitor_info_tb monitor_info_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER monitor_info_trigger BEFORE INSERT ON monitor_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_monitor_tb_trigger();


--
-- Name: no_payment_tb no_payment_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER no_payment_tb_trigger BEFORE INSERT ON no_payment_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_no_payment_tb_trigger();


--
-- Name: online_anlysis_tb online_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER online_anlysis_tb_trigger BEFORE INSERT ON online_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_online_anlysis_tb_trigger();


--
-- Name: order_anlysis_tb order_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER order_anlysis_tb_trigger BEFORE INSERT ON order_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_anlysis_tb_trigger();


--
-- Name: order_attach_tb order_attach_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER order_attach_tb_trigger BEFORE INSERT ON order_attach_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_attach_tb_trigger();


--
-- Name: order_log_tb order_log_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER order_log_tb_trigger BEFORE INSERT ON order_log_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_log_tb_trigger();


--
-- Name: order_message_tb order_message_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER order_message_tb_trigger BEFORE INSERT ON order_message_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_message_tb_trigger();


--
-- Name: order_reserve_tb order_reserve_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER order_reserve_tb_trigger BEFORE INSERT ON order_reserve_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_reserve_tb_trigger();


--
-- Name: order_tb order_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER order_tb_trigger BEFORE INSERT ON order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_tb_trigger();


--
-- Name: order_ticket_detail_tb order_ticket_detail_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER order_ticket_detail_tb_trigger BEFORE INSERT ON order_ticket_detail_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_ticket_detail_tb_trigger();


--
-- Name: order_ticket_tb order_ticket_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER order_ticket_tb_trigger BEFORE INSERT ON order_ticket_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_order_ticket_tb_trigger();


--
-- Name: org_area_tb org_area_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER org_area_tb_trigger BEFORE INSERT ON org_area_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_org_area_tb_trigger();


--
-- Name: org_channel_tb org_channel_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER org_channel_tb_trigger BEFORE INSERT ON org_channel_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_org_channel_tb_trigger();


--
-- Name: org_city_merchants org_city_merchants_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER org_city_merchants_trigger BEFORE INSERT ON org_city_merchants FOR EACH ROW EXECUTE PROCEDURE trigger_fct_org_city_merchants_trigger();


--
-- Name: org_group_tb org_group_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER org_group_tb_trigger BEFORE INSERT ON org_group_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_org_group_tb_trigger();


--
-- Name: park_account_tb park_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER park_account_tb_trigger BEFORE INSERT ON park_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_account_tb_trigger();


--
-- Name: park_anlysis_tb park_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER park_anlysis_tb_trigger BEFORE INSERT ON park_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_anlysis_tb_trigger();


--
-- Name: park_charge_tb park_charge_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER park_charge_tb_trigger BEFORE INSERT ON park_charge_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_charge_tb_trigger();


--
-- Name: park_log_tb park_log_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER park_log_tb_trigger BEFORE INSERT ON park_log_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_log_tb_trigger();


--
-- Name: park_ticket_tb park_ticket_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER park_ticket_tb_trigger BEFORE INSERT ON park_ticket_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_ticket_tb_trigger();


--
-- Name: park_token_tb park_token_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER park_token_tb_trigger BEFORE INSERT ON park_token_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_token_tb_trigger();


--
-- Name: park_verify_tb park_verify_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER park_verify_tb_trigger BEFORE INSERT ON park_verify_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_park_verify_tb_trigger();


--
-- Name: parkuser_account_tb parkuser_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_account_tb_trigger BEFORE INSERT ON parkuser_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_account_tb_trigger();


--
-- Name: parkuser_cash_tb parkuser_cash_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_cash_tb_trigger BEFORE INSERT ON parkuser_cash_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_cash_tb_trigger();


--
-- Name: parkuser_comment_tb parkuser_comment_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_comment_tb_trigger BEFORE INSERT ON parkuser_comment_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_comment_tb_trigger();


--
-- Name: parkuser_income_anlysis_tb parkuser_income_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_income_anlysis_tb_trigger BEFORE INSERT ON parkuser_income_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_income_anlysis_tb_trigger();


--
-- Name: parkuser_message_tb parkuser_message_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_message_tb_trigger BEFORE INSERT ON parkuser_message_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_message_tb_trigger();


--
-- Name: parkuser_reward_tb parkuser_reward_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_reward_tb_trigger BEFORE INSERT ON parkuser_reward_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_reward_tb_trigger();


--
-- Name: parkuser_work_record_tb parkuser_work_record_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER parkuser_work_record_tb_trigger BEFORE INSERT ON parkuser_work_record_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_parkuser_work_record_tb_trigger();


--
-- Name: peakalert_anlysis_tb peakalert_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER peakalert_anlysis_tb_trigger BEFORE INSERT ON peakalert_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_peakalert_anlysis_tb_trigger();


--
-- Name: phone_info_tb phone_info_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER phone_info_trigger BEFORE INSERT ON phone_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_phone_tb_trigger();


--
-- Name: price_assist_tb price_assist_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER price_assist_tb_trigger BEFORE INSERT ON price_assist_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_price_assist_tb_trigger();


--
-- Name: price_tb price_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER price_tb_trigger BEFORE INSERT ON price_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_price_tb_trigger();


--
-- Name: product_package_tb product_package_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER product_package_tb_trigger BEFORE INSERT ON product_package_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_product_package_tb_trigger();


--
-- Name: qr_code_tb qr_code_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER qr_code_tb_trigger BEFORE INSERT ON qr_code_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_qr_code_tb_trigger();


--
-- Name: qr_thirdpark_code qr_thirdpark_code_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER qr_thirdpark_code_trigger BEFORE INSERT ON qr_thirdpark_code FOR EACH ROW EXECUTE PROCEDURE trigger_fct_qr_thirdpark_code_trigger();


--
-- Name: recharge_tb recharge_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER recharge_tb_trigger BEFORE INSERT ON recharge_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_recharge_tb_trigger();


--
-- Name: recom_tb recom_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER recom_tb_trigger BEFORE INSERT ON recom_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_recom_tb_trigger();


--
-- Name: recommend_tb recommend_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER recommend_tb_trigger BEFORE INSERT ON recommend_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_recommend_tb_trigger();


--
-- Name: reg_anlysis_tb reg_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER reg_anlysis_tb_trigger BEFORE INSERT ON reg_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_reg_anlysis_tb_trigger();


--
-- Name: register_anlysis_tb register_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER register_anlysis_tb_trigger BEFORE INSERT ON register_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_register_anlysis_tb_trigger();


--
-- Name: remain_berth_tb remain_berth_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER remain_berth_tb_trigger BEFORE INSERT ON remain_berth_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_remain_berth_tb_trigger();


--
-- Name: reward_account_tb reward_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER reward_account_tb_trigger BEFORE INSERT ON reward_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_reward_account_tb_trigger();


--
-- Name: role_auth_tb role_auth_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER role_auth_tb_trigger BEFORE INSERT ON role_auth_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_role_auth_tb_trigger();


--
-- Name: sensor_online_anlysis_tb sensor_online_anlysis_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sensor_online_anlysis_tb_trigger BEFORE INSERT ON sensor_online_anlysis_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sensor_online_anlysis_tb_trigger();


--
-- Name: share_log_tb share_log_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER share_log_tb_trigger BEFORE INSERT ON share_log_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_share_log_tb_trigger();


--
-- Name: shop_account_tb shop_account_tb; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER shop_account_tb BEFORE INSERT ON shop_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_shop_account_tb_trigger();


--
-- Name: shop_tb shop_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER shop_tb_trigger BEFORE INSERT ON shop_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_shop_tb_trigger();


--
-- Name: sim_tb sim_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sim_tb_trigger BEFORE INSERT ON sim_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sim_tb_trigger();


--
-- Name: sites_tb sites_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sites_tb_trigger BEFORE INSERT ON sites_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sites_tb_trigger();


--
-- Name: sites_voltage_tb sites_voltage_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sites_voltage_tb_trigger BEFORE INSERT ON sites_voltage_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sites_voltage_tb_trigger();


--
-- Name: slow_alert_tb slow_alert_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER slow_alert_tb_trigger BEFORE INSERT ON slow_alert_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_slow_alert_tb_trigger();


--
-- Name: sub_account_tb sub_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sub_account_tb_trigger BEFORE INSERT ON sub_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sub_account_tb_trigger();


--
-- Name: switch_line_tb switch_line_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER switch_line_tb_trigger BEFORE INSERT ON switch_line_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_switch_line_tb_trigger();


--
-- Name: sync_info_pool_tb sync_info_pool_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sync_info_pool_tb_trigger BEFORE INSERT ON sync_info_pool_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_sync_info_pool_tb_trigger();


--
-- Name: thirdpay_order_tb thirdpay_order_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER thirdpay_order_tb_trigger BEFORE INSERT ON thirdpay_order_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_thirdpay_order_tb_trigger();


--
-- Name: ticket_tb ticket_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ticket_tb_trigger BEFORE INSERT ON ticket_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_ticket_tb_trigger();


--
-- Name: ticket_uion_tb ticket_uion_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ticket_uion_tb_trigger BEFORE INSERT ON ticket_uion_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_ticket_uion_tb_trigger();


--
-- Name: tingchebao_account_tb tingchebao_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tingchebao_account_tb_trigger BEFORE INSERT ON tingchebao_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_tingchebao_account_tb_trigger();


--
-- Name: tmp_p4top5_primarykey tmp_p4top5_primarykey_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tmp_p4top5_primarykey_trigger BEFORE INSERT ON tmp_p4top5_primarykey FOR EACH ROW EXECUTE PROCEDURE trigger_fct_tmp_p4top5_primarykey_trigger();


--
-- Name: transfer_url_tb transfer_url_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER transfer_url_tb_trigger BEFORE INSERT ON transfer_url_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_transfer_url_tb_trigger();


--
-- Name: union_park_tb union_park_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER union_park_tb_trigger BEFORE INSERT ON union_park_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_union_park_tb_trigger();


--
-- Name: user_account_tb user_account_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_account_tb_trigger BEFORE INSERT ON user_account_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_account_tb_trigger();


--
-- Name: user_friend_tb user_friend_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_friend_tb_trigger BEFORE INSERT ON user_friend_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_friend_tb_trigger();


--
-- Name: user_info_tb user_info_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER user_info_tb_trigger BEFORE INSERT ON user_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_info_tb_trigger();


--
-- Name: user_liuyan_tb user_liuyan_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_liuyan_tb_trigger BEFORE INSERT ON user_liuyan_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_liuyan_tb_trigger();


--
-- Name: user_local_tb user_local_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_local_tb_trigger BEFORE INSERT ON user_local_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_local_tb_trigger();


--
-- Name: user_log_tb user_log_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER user_log_tb_trigger BEFORE INSERT ON user_log_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_log_tb_trigger();


--
-- Name: user_payaccount_tb user_payaccount_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_payaccount_tb_trigger BEFORE INSERT ON user_payaccount_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_payaccount_tb_trigger();


--
-- Name: user_pic_tb user_pic_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_pic_tb_trigger BEFORE INSERT ON user_pic_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_pic_tb_trigger();


--
-- Name: user_preaddfriend_tb user_preaddfriend_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_preaddfriend_tb_trigger BEFORE INSERT ON user_preaddfriend_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_preaddfriend_tb_trigger();


--
-- Name: user_profile_tb user_profile_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER user_profile_tb_trigger BEFORE INSERT ON user_profile_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_profile_tb_trigger();


--
-- Name: user_role_tb user_role_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER user_role_tb_trigger BEFORE INSERT ON user_role_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_role_tb_trigger();


--
-- Name: user_session_tb user_session_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER user_session_tb_trigger BEFORE INSERT ON user_session_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_session_tb_trigger();


--
-- Name: user_worksite_tb user_worksite_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER user_worksite_tb_trigger BEFORE INSERT ON user_worksite_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_user_worksite_tb_trigger();


--
-- Name: verification_code_tb verification_code_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER verification_code_tb_trigger BEFORE INSERT ON verification_code_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_verification_code_tb_trigger();


--
-- Name: vip_apply_tb vip_apply_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER vip_apply_tb_trigger BEFORE INSERT ON vip_apply_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_vip_apply_tb_trigger();


--
-- Name: visit_info_tb visit_info_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER visit_info_tb_trigger BEFORE INSERT ON visit_info_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_visit_info_tb_trigger();


--
-- Name: withdrawer_tb withdrawer_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER withdrawer_tb_trigger BEFORE INSERT ON withdrawer_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_withdrawer_tb_trigger();


--
-- Name: work_berthsec_tb work_berthsec_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_berthsec_tb_trigger BEFORE INSERT ON work_berthsec_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_berthsec_tb_trigger();


--
-- Name: work_detail_tb work_detail_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_detail_tb_trigger BEFORE INSERT ON work_detail_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_detail_tb_trigger();


--
-- Name: work_employee_tb work_employee_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_employee_tb_trigger BEFORE INSERT ON work_employee_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_employee_tb_trigger();


--
-- Name: work_group_tb work_group_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_group_tb_trigger BEFORE INSERT ON work_group_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_group_tb_trigger();


--
-- Name: work_inspector_tb work_inspector_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_inspector_tb_trigger BEFORE INSERT ON work_inspector_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_inspector_tb_trigger();


--
-- Name: work_time_tb work_time_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_time_tb_trigger BEFORE INSERT ON work_time_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_work_time_tb_trigger();


--
-- Name: wxp_user_tb wxp_user_tb_trigger; Type: TRIGGER; Schema: public; Owner: tracqdev
--

CREATE TRIGGER wxp_user_tb_trigger BEFORE INSERT ON wxp_user_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_wxp_user_tb_trigger();


--
-- Name: zld_black_tb zld_black_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER zld_black_tb_trigger BEFORE INSERT ON zld_black_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_zld_black_tb_trigger();


--
-- Name: zld_game_tb zld_game_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER zld_game_tb_trigger BEFORE INSERT ON zld_game_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_zld_game_tb_trigger();


--
-- Name: zld_organize_tb zld_organize_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER zld_organize_tb_trigger BEFORE INSERT ON zld_organize_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_zld_organize_tb_trigger();


--
-- Name: zld_orgtype_tb zld_orgtype_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER zld_orgtype_tb_trigger BEFORE INSERT ON zld_orgtype_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_zld_orgtype_tb_trigger();


--
-- Name: zld_protocol_tb zld_protocol_tb_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER zld_protocol_tb_trigger BEFORE INSERT ON zld_protocol_tb FOR EACH ROW EXECUTE PROCEDURE trigger_fct_zld_protocol_tb_trigger();


--
-- Name: union_park_tb; Type: ACL; Schema: public; Owner: tracqdev
--

GRANT ALL ON TABLE union_park_tb TO PUBLIC;


--
-- PostgreSQL database dump complete
--

